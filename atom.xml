<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马火星的迷你小屋</title>
  <icon>http://blog.1314171.xyz/icon.png</icon>
  <subtitle>可能有一些学习心得和日常</subtitle>
  <link href="http://blog.1314171.xyz/atom.xml" rel="self"/>
  
  <link href="http://blog.1314171.xyz/"/>
  <updated>2023-09-21T11:35:11.292Z</updated>
  <id>http://blog.1314171.xyz/</id>
  
  <author>
    <name>TT2TER</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大三前三周（小学期）周报</title>
    <link href="http://blog.1314171.xyz/post/230908dockerproxywithclash.html"/>
    <id>http://blog.1314171.xyz/post/230908dockerproxywithclash.html</id>
    <published>2023-09-21T11:35:11.000Z</published>
    <updated>2023-09-21T11:35:11.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大三第一二周周报"><a href="#大三第一二周周报" class="headerlink" title="大三第一二周周报"></a>大三第一二周周报</h1><p>总之这两周就是疯狂敲代码</p><p>写了一个即时通讯软件，代码见<a href="https://github.com/TT2TER/Echoplex">github</a></p><p>最大的感想就是前后端的配合如果没有提前沟通好接口，那就是灾难</p><p>我在项目中全权负责Qt界面，同时因为需要和客户端配合，所以也参与了客户端的一些开发，尤其是接口部分。</p><p>由于大家都是第一次写程序，所以有很多地方都没有提前预估好，比如在实现文件发送功能的时候，接口消息格式不是很全，导致界面没法按照<br>预想显示进度条和消息，这本来是一个很好解决的问题，但当时大家都很着急，于是几乎重写了整个消息头的参数（虽然改起来很好改，但是还是很麻烦）</p><p>Qt界面其实很简单，但是美化我一直没有涉猎到精髓，感觉这一块确实还可以继续探索，消息框和聊天气泡都是扁平化的风格，其他按键不是很完美。</p><p>就这样吧，没什么别的事情了</p><h1 id="大三第三周周报"><a href="#大三第三周周报" class="headerlink" title="大三第三周周报"></a>大三第三周周报</h1><p>第三周是并行编程，还可以，事情不多，于是就有时间折腾点其他的……</p><h2 id="Docker摸索，为nas配一个clash代理"><a href="#Docker摸索，为nas配一个clash代理" class="headerlink" title="Docker摸索，为nas配一个clash代理"></a>Docker摸索，为nas配一个clash代理</h2><h3 id="先说起因"><a href="#先说起因" class="headerlink" title="先说起因"></a>先说起因</h3><ul><li><p>上课发现自己的图床服务器忘了续费已经停机了，匆匆忙忙续费。6欧每年真的实惠，还好数据什么的服务商还都给保留着，要不然真的是鸡飞狗跳的一天了</p><ul><li>这里给自己加个todo，服务器只有10G空间，现在用了5G了，图床虽然占不了很大空间，但如果以后要换服务商，暂时还没有学习如何迁移图床，另外可能的话数据放nas上是最好的。</li></ul></li><li><p>然后突然想起来之前自己想selfhost一个类似<a href="https://getpocket.com/home">pocket</a>的稍后阅读书签和浏览器快照存档的东西。这个在 <li><a href="/post/2023week1"  tags="">第一周周报</li> </p></li><li><p>中提到过。既然恰好没啥事情，就搭建一个吧</p></li><li><p>然后在当时找到的四个比较符合要求的里面找了一个ui最好看的（这里巨大伏笔，小丑的源头</p></li></ul><h3 id="我看上了linkwarden"><a href="#我看上了linkwarden" class="headerlink" title="我看上了linkwarden"></a>我看上了linkwarden</h3><p>先放链接：<a href="https://github.com/Daniel31x13/linkwarden">linkwarden</a></p><h4 id="build无法连接网路"><a href="#build无法连接网路" class="headerlink" title="build无法连接网路"></a>build无法连接网路</h4><p>当时首先的想法是在nas上部署这个服务，从文档看，需要自己在本地从Dockerfile开始build主程序，同时dockerhub上别人构建好的也没说怎么用（当然现在我会用了）。nas被阉割了git，所以将文件拷贝到nas上，正常使用docker-compose up来运行，发现卡死在了</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> yarn</span><br></code></pre></td></tr></table></figure><p>这一步，报错内容是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">=&gt; =&gt; <span class="hljs-comment"># yarn install v1.22.19                                                  </span><br>=&gt; =&gt; <span class="hljs-comment"># [1/4] Resolving packages...                                            </span><br>=&gt; =&gt; <span class="hljs-comment"># [2/4] Fetching packages... </span><br></code></pre></td></tr></table></figure><p>总之是因为网路问题导致无法连接下载所需要的node包吧，当时我的nas是没代理的，我寻思着，那就去在我电脑ubuntu双系统中去build完再想办法传给nas运行呗</p><h4 id="Ubuntu也不能连接网路"><a href="#Ubuntu也不能连接网路" class="headerlink" title="Ubuntu也不能连接网路"></a>Ubuntu也不能连接网路</h4><p>双系统没有安装docker，重新装，还是没用搭理docker desktop，直接装engin。</p><ul><li>题外话：在装compose的时候发现，现在已经不建议单独安装docker-compose了。也就是说docker-compose命令将成为过去时，以后会被plugin版本的docker compose完全替代</li></ul><p>笑死，也连不上网是显而易见的，肉身在哪，网就在哪。</p><p>但能够尝试配置代理</p><p>这个坑尝试填了一下，把新下的docker的配置文件整的千疮百孔（不是）依旧卡在那一步。（现在来看应该只需要仔细阅读文档然后配置好build步骤的代理就行了，TODO:</p><p>当时没整成，又尝试去改Dockerfile文件里的命令，FROM RUN CMD啥的都了解了一下，在这里尝试加代理的环境变量，尝试给yarn换国内镜像源，无解（也许是因为docker千疮百孔了。</p><h4 id="退一步，也没有海阔天空"><a href="#退一步，也没有海阔天空" class="headerlink" title="退一步，也没有海阔天空"></a>退一步，也没有海阔天空</h4><p>既然是国内网络问题，那就用vps build，然后……卡在了更早的一步，还不如本地跑的进度好，我也懒得去解决依赖的问题。</p><p>转头又去dockerhub上认真看了看其他人构建好的镜像，发现有个国人<a href="https://laosu.cf/">老苏</a>十几天前构建的镜像虽然还没介绍怎么用，但也写明白了镜像构建过程，可以直接拿来用的单独的image…(只可惜一开始我既不懂docker build命令，也不懂docker image 和layer 以及stack的关系，反正就是之前不会用人家构建好的镜像)，但在这个时间点折腾过之前的东西之后我才能看明白，也才有机会自己写compose配置</p><p>镜像链接:<a href="https://registry.hub.docker.com/r/wbsu2003/linkwarden">wbsu2003&#x2F;linkwarden</a><br>其中详细记述了构建过程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载代码</span><br>git <span class="hljs-built_in">clone</span> https://github.com/linkwarden/linkwarden.git<br><br><span class="hljs-comment"># 或者加个代理</span><br>git <span class="hljs-built_in">clone</span> https://ghproxy.com/github.com/linkwarden/linkwarden.git<br><br><span class="hljs-comment"># 进入目录  </span><br><span class="hljs-built_in">cd</span> linkwarden<br><br><span class="hljs-comment"># 构建镜像</span><br>docker build -t wbsu2003/linkwarden:v1 .<br></code></pre></td></tr></table></figure><h4 id="跑起来程序之后，才后知后觉意识到docker里面依旧访问不了外网"><a href="#跑起来程序之后，才后知后觉意识到docker里面依旧访问不了外网" class="headerlink" title="跑起来程序之后，才后知后觉意识到docker里面依旧访问不了外网"></a>跑起来程序之后，才后知后觉意识到docker里面依旧访问不了外网</h4><p>自己写照着文档写docker-compose.yml，配合上数据库，在双系统ubuntu跑起来了</p><p>发现只能快照百度等国内网站，不能对google，github等不存在的网站进行快照</p><p>在此前已经见识过代理配置的复杂，更何况最后这个项目不能部署在笔记本上，要不就是nas，要不就是vps</p><p>于是转战vps</p><h4 id="vps一点空间没有"><a href="#vps一点空间没有" class="headerlink" title="vps一点空间没有"></a>vps一点空间没有</h4><p>这个逆天玩意儿build完的镜像加起来有2个多g，之前提到的剩余空间已经不够了</p><p>不够先pull下压缩包再解压的空间，于是在vps上构建的这条路走不通了</p><h3 id="看向定制系统的nas，硬着头皮去解决在docker里面弄一个clash以及其他docker链接这个clash"><a href="#看向定制系统的nas，硬着头皮去解决在docker里面弄一个clash以及其他docker链接这个clash" class="headerlink" title="看向定制系统的nas，硬着头皮去解决在docker里面弄一个clash以及其他docker链接这个clash"></a>看向定制系统的nas，硬着头皮去解决在docker里面弄一个clash以及其他docker链接这个clash</h3><p>现在看在解决这个问题的时候，很多疑惑都受限于自己本身的能力限制理解不了报错，找不到问题原因，筛选不出正确的解决办法。</p><p>如果我对操作系统或计算机网络有更深的理解，可能问题会少很多。</p><p>在和Google以及gpt的激情交流下，我最后终于让服务在nas上跑起来了</p><h4 id="先跑clash"><a href="#先跑clash" class="headerlink" title="先跑clash"></a>先跑clash</h4><p>用的是dreamacro&#x2F;clash:latest镜像</p><p>要把7890-7891代理的端口和9090ui面板的端口分别绑定到主机(如果不需要宿主机访问clash，就不用绑定代理的端口)</p><p>将配置文件绑定到&#x2F;root&#x2F;.config&#x2F;clash&#x2F;config.yaml，配置文件从电脑拷贝就行，奇怪的是我直接拷贝的文件clash不识别，但是我打开配置全选拷贝内容就可以</p><p>这一步参考的一些教程<br><a href="https://fugary.com/?p=363">参考1</a><br><a href="http://www.qince.net/dockery7t0.html">参考2</a></p><p>然后用nas自己的代理，设置到绑定的clash的端口，在nas终端中运行wget google.com，成功！说明clash在nas里跑起来了</p><h4 id="得让容器之间互相通信"><a href="#得让容器之间互相通信" class="headerlink" title="得让容器之间互相通信"></a>得让容器之间互相通信</h4><p>凭借着前世对docker网络的一点点理解，我知道在同一个network下docker自动有一个类似dns的东西能直接将容器名解析为容器在network下的地址</p><p>所以大概的思路就出来了</p><p>即，让linkwarden，数据库，clash写在同一个docker-compose文件中</p><p>中间疑惑了半天代理应该怎么配置，如果之前对环境变量的理解深一点，就不会像现在这样狼狈</p><p>先贴上最后的docker-compose文件吧</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3.5&quot;</span><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">my_network:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">postgres:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">postgres</span><br>    <span class="hljs-attr">env_file:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.env</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">my_network</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./postgres:/var/lib/postgresql/data</span><br><br>  <span class="hljs-attr">linkwarden:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">wbsu2003/linkwarden:latest</span><br>    <span class="hljs-attr">env_file:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.env</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">DATABASE_URL=postgresql://postgres:$&#123;POSTGRES_PASSWORD&#125;@postgres:5432/postgres</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">http_proxy=http://clash_linkwarden:7890</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">https_proxy=http://clash_linkwarden:7890</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">0000</span><span class="hljs-string">:3000</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/your_path/data:/data/data</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">postgres</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">clash_linkwarden</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">my_network</span><br>    <span class="hljs-attr">dns:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><br><br>  <span class="hljs-attr">clash_linkwarden:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">dreamacro/clash:latest</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-number">0000</span><span class="hljs-string">:7890</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">0000</span><span class="hljs-string">:7891</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">0000</span><span class="hljs-string">:9090</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/your_path/clash/config.yaml:/root/.config/clash/config.yaml</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">my_network</span><br>    <span class="hljs-attr">dns:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span> <br></code></pre></td></tr></table></figure><p>其中$.env$里放的是linkwarden官方要求的一些环境变量，放在和compose.yml同目录下</p><p>说一下里面的一些坑和仍未解决的问题吧</p><ol><li>network自己新建，也可以不，compose会自动为里面的所有应用新建一个network</li><li>$- http_proxy&#x3D;<a href="http://clash_linkwarden:7890/">http://clash_linkwarden:7890</a> - https_proxy&#x3D;<a href="http://clash_linkwarden:7890$">http://clash_linkwarden:7890$</a> 这两句环境变量，用名称clash_linkwarden直接找到clash，此外，端口用clash原本的端口，而不是绑定之后的主机的端口，因为在这个网域下，其他容器对clash访问是直接的。同时，要用$http_proxy$和$https_proxy$而不是$HTTP_PROXY$和$HTTPS_PROXY$,这里environment:里的环境变量，就是容器中env命令显示出来的环境变量。</li></ol><p>未解决的问题：</p><ol><li>clash每次启动都需要设置allow lan?不确定，还没测试。如果需要好像得写在comfig.yaml里</li><li>某些链接会出现以下报错<code>TypeError: fetch failed  at Object.fetch (node:internal/deps/undici/undici:11576:11)  at process.processTicksAndRejections (node:internal/process/task_queues:95:5)  at async imageOptimizer (/data/node_modules/next/dist/server/image-optimizer.js:521:29)  at async cacheEntry.imageResponseCache.get.incrementalCache (/data/node_modules/next/dist/server/next-server.js:414:72)  at async /data/node_modules/next/dist/server/response-cache/index.js:99:36 &#123;  cause: ConnectTimeoutError: Connect Timeout Error at onConnectTimeout (node:internal/deps/undici/undici:8522:28) at node:internal/deps/undici/undici:8480:50 at Immediate._onImmediate (node:internal/deps/undici/undici:8511:13) at process.processImmediate (node:internal/timers:478:21) &#123;  code: &#39;UND_ERR_CONNECT_TIMEOUT&#39;  &#125;   &#125;</code></li><li>一些复杂域名好像没法解析，比如像github某个仓库的一个界面。这里我尝试 配置了dns地址，但没有用，应该是2.这里的同源问题</li><li>跨network域访问docker中clash，以解决现在把docker莫名的放在了其他服务的compose里，而且这种解决办法以后每次有应用需要代理，就得新启动一个clash docker，多少有点离谱</li></ol><p>此外就是一些小细节</p><ol><li>ui的界面可以使用公共的<a href="http://yacd.haishan.me/">http://yacd.haishan.me</a>，填写你的域名以及绑定在9090的实际的端口，在上面的例子里就是0000（笑死，上面所有0000都要替换一个空的端口。</li><li>不知道为什么nas配置了代理之后上面ui界面等就会都走代理，而不是直接访问nas，因此这一块还得再研究怎么不冲突（其实nas暂时还没有用代理的需求，软件都是docker部署的。</li><li>此外就是可以不用端口转发绑定ipv6的外网访问，可以用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">socat TCP6-LISTEN:0000,ipv6-v6only=1,reuseaddr,fork TCP4:127.0.0.1:0000<br></code></pre></td></tr></table></figure></li></ol><p>但这个只能在当前窗口启动时使用，解决以及开机自启动详见：</p><li><a href="/post/220705tcp6-tcp4"  tags="">IPV6访问NAS中Docker的服务</li> <h2 id="copilot搭配vscode"><a href="#copilot搭配vscode" class="headerlink" title="copilot搭配vscode"></a>copilot搭配vscode</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[ERROR]</span> <span class="hljs-selector-attr">[default]</span> <span class="hljs-selector-attr">[2023-09-10T09:55:28.610Z]</span> GitHub Copilot could not connect <span class="hljs-selector-tag">to</span> server. Extension <span class="hljs-selector-tag">a</span>……<br></code></pre></td></tr></table></figure><p>配置代理就好了<br><a href="https://docs.github.com/zh/copilot/configuring-github-copilot/configuring-network-settings-for-github-copilot">https://docs.github.com/zh/copilot/configuring-github-copilot/configuring-network-settings-for-github-copilot</a></p>]]></content>
    
    
    <summary type="html">记述一下小学期的代码实践，记录一下一次长达一天的docker代理相关的摸索</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/Diary/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="proxy" scheme="http://blog.1314171.xyz/tags/proxy/"/>
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
    <category term="clash" scheme="http://blog.1314171.xyz/tags/clash/"/>
    
    <category term="Docker" scheme="http://blog.1314171.xyz/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 8</title>
    <link href="http://blog.1314171.xyz/post/2023week8.html"/>
    <id>http://blog.1314171.xyz/post/2023week8.html</id>
    <published>2023-04-22T10:45:35.000Z</published>
    <updated>2023-04-22T10:45:35.480Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这周周末活动多，导致没来得及写周报，现在才补上"><a href="#这周周末活动多，导致没来得及写周报，现在才补上" class="headerlink" title="这周周末活动多，导致没来得及写周报，现在才补上"></a>这周周末活动多，导致没来得及写周报，现在才补上</h1><h1 id="先说说这周看到的有趣链接"><a href="#先说说这周看到的有趣链接" class="headerlink" title="先说说这周看到的有趣链接"></a>先说说这周看到的有趣链接</h1><ol><li><a href="https://www.phind.com/">一个转为developers打造的GPT搜索引擎</a></li></ol><p>给我的感觉是可以用，代码什么的可能比原本的好一点）可能就是提示词吧</p><p><a href="https://news.ycombinator.com/item?id=35543668">这是hackernews对它的讨论</a></p><ol start="2"><li><a href="https://github.com/chathub-dev/chathub">这是一个浏览器插件能时刻使用上bing</a></li></ol><p>我的bing也开始跳转国内了，这个插件还不错，能正确显示代码块</p><p>此外我很乐意展示我使用bing的一次示例，帮我完成课内代码：</p><h3 id="一次new逼使用纪实"><a href="#一次new逼使用纪实" class="headerlink" title="一次new逼使用纪实"></a>一次new逼使用纪实</h3><p><strong>user</strong>: can you read this code?</p><figure class="highlight plaintext"><figcaption><span>squares algorithm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs %least">phiN = [y(3:1e6-1,1),y(2:1e6-2,1),y(1:1e6-3,1),u(3:1e6-1,1),u(2:1e6-2,1),u(1:1e6-3,1)];<br>yN = [y(4:1e6)];<br>disp(&quot;least squares algorithm&quot;);<br>theta = (phiN&#x27;*phiN)\phiN&#x27;*yN<br></code></pre></td></tr></table></figure><p><strong>bing</strong>: Yes, I can read this code. It is a MATLAB code that implements the least squares algorithm to estimate the parameters of a linear system. The code does the following steps:</p><ul><li>It defines a matrix phiN that contains the past values of the output y and the input u of the system. The matrix has 999997 rows and 6 columns.</li><li>It defines a vector yN that contains the current values of the output y of the system. The vector has 999997 elements.</li><li>It displays the message “least squares algorithm” on the screen.</li><li>It calculates the vector theta that contains the estimated parameters of the system. The vector has 6 elements. The calculation uses the formula theta &#x3D; (phiN’*phiN)\phiN’<em>yN, which is derived from minimizing the sum of squared errors between yN and phiN</em>theta.</li></ul><p><strong>user</strong>: please rewrite it by using Recursive Least-Squares Algorithm</p><p><strong>bing</strong>: [1]: <a href="https://www.mathworks.com/help/ident/ref/recursiveleastsquaresestimator.html">https://www.mathworks.com/help/ident/ref/recursiveleastsquaresestimator.html</a> “Estimate model coefficients using recursive least squares (RLS …”<br>[2]: <a href="https://www.mathworks.com/matlabcentral/fileexchange/56360-recursive-least-squares">https://www.mathworks.com/matlabcentral/fileexchange/56360-recursive-least-squares</a> “Recursive Least Squares - File Exchange - MATLAB Central - MathWorks”<br>[3]: <a href="http://freesourcecode.net/matlabprojects/59802/rls-matlab-code">http://freesourcecode.net/matlabprojects/59802/rls-matlab-code</a> “Rls Matlab Code | download free open source Matlab toolbox, matlab code …”<br>[4]: <a href="https://ai.stackexchange.com/questions/5715/can-we-use-the-recursive-least-squares-as-a-learning-algorithm-to-an-adaline">https://ai.stackexchange.com/questions/5715/can-we-use-the-recursive-least-squares-as-a-learning-algorithm-to-an-adaline</a> “Can we use the recursive least squares as a learning algorithm to an …”<br>[5]: <a href="https://www.eit.lth.se/fileadmin/eit/courses/ett042/CE/CE5e.pdf">https://www.eit.lth.se/fileadmin/eit/courses/ett042/CE/CE5e.pdf</a> “Computer exercise 5: Recursive Least Squares (RLS)”</p><p>The Recursive Least-Squares (RLS) algorithm is a method to estimate the parameters of a system that is linear in those parameters, by minimizing a weighted sum of squared errors. The RLS algorithm updates the parameter estimates recursively as new data arrives, and uses a forgetting factor to give less weight to old data.</p><p>To rewrite the code by using RLS algorithm, you can use the following steps:</p><ul><li>Define the forgetting factor lambda and the initial values of the parameter vector theta, the estimation error covariance matrix P, and the regressor vector phi.</li><li>Initialize a loop to iterate over the data points from 4 to 1e6.</li><li>Update phi with the current values of y and u.</li><li>Update theta and P using the RLS formulae.</li><li>End the loop.</li></ul><p>The rewritten code is:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% Recursive Least-Squares algorithm</span><br>lambda = <span class="hljs-number">0.99</span>; <span class="hljs-comment">% forgetting factor</span><br>theta = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">6</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">% initial parameter vector</span><br>P = <span class="hljs-built_in">eye</span>(<span class="hljs-number">6</span>); <span class="hljs-comment">% initial error covariance matrix</span><br>phi = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">6</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">% initial regressor vector</span><br><span class="hljs-keyword">for</span> k = <span class="hljs-number">4</span>:<span class="hljs-number">1e6</span><br>    phi = [y(k<span class="hljs-number">-1</span>); y(k<span class="hljs-number">-2</span>); y(k<span class="hljs-number">-3</span>); u(k<span class="hljs-number">-1</span>); u(k<span class="hljs-number">-2</span>); u(k<span class="hljs-number">-3</span>)]; <span class="hljs-comment">% update regressor vector</span><br>    g = P*phi/(lambda + phi&#x27;*P*phi); <span class="hljs-comment">% gain vector</span><br>    theta = theta + g*(y(k) - phi&#x27;*theta); <span class="hljs-comment">% update parameter vector</span><br>    P = (P - g*phi&#x27;*P)/lambda; <span class="hljs-comment">% update error covariance matrix</span><br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;Recursive Least-Squares algorithm&#x27;</span>);<br>theta <span class="hljs-comment">% display final parameter vector</span><br></code></pre></td></tr></table></figure><p><strong>user</strong>: could give me a RLS code without forgetting factor lambda</p><p><strong>bing</strong>: [1]: <a href="https://bing.com/search?q=matlab+rls+without+forgetting+factor">https://bing.com/search?q=matlab+rls+without+forgetting+factor</a> “Compute forgetting factor required for streaming input data - MATLAB …”<br>[2]: <a href="https://www.mathworks.com/help/dsp/ref/rlsfilter.html">https://www.mathworks.com/help/dsp/ref/rlsfilter.html</a> “Compute filtered output, filter error, and filter weights for given …”<br>[3]: <a href="https://www.mathworks.com/help/fixedpoint/ref/fixed.forgettingfactor.html">https://www.mathworks.com/help/fixedpoint/ref/fixed.forgettingfactor.html</a> “Compute forgetting factor required for streaming input data - MATLAB …”<br>[4]: <a href="https://www.researchgate.net/publication/251910252_A_variable_forgetting_factor_RLS_adaptive_filtering_algorithm">https://www.researchgate.net/publication/251910252_A_variable_forgetting_factor_RLS_adaptive_filtering_algorithm</a> “A variable forgetting factor RLS adaptive filtering algorithm”</p><p>To give a RLS code without forgetting factor lambda, you can simply set lambda to 1 in the previous code. This means that the algorithm does not forget any past data and gives equal weight to all data points. The code is:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% Recursive Least-Squares algorithm without forgetting factor</span><br>lambda = <span class="hljs-number">1</span>; <span class="hljs-comment">% no forgetting factor</span><br>theta = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">6</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">% initial parameter vector</span><br>P = <span class="hljs-built_in">eye</span>(<span class="hljs-number">6</span>); <span class="hljs-comment">% initial error covariance matrix</span><br>phi = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">6</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">% initial regressor vector</span><br><span class="hljs-keyword">for</span> k = <span class="hljs-number">4</span>:<span class="hljs-number">1e6</span><br>    phi = [y(k<span class="hljs-number">-1</span>); y(k<span class="hljs-number">-2</span>); y(k<span class="hljs-number">-3</span>); u(k<span class="hljs-number">-1</span>); u(k<span class="hljs-number">-2</span>); u(k<span class="hljs-number">-3</span>)]; <span class="hljs-comment">% update regressor vector</span><br>    g = P*phi/(lambda + phi&#x27;*P*phi); <span class="hljs-comment">% gain vector</span><br>    theta = theta + g*(y(k) - phi&#x27;*theta); <span class="hljs-comment">% update parameter vector</span><br>    P = (P - g*phi&#x27;*P)/lambda; <span class="hljs-comment">% update error covariance matrix</span><br><span class="hljs-keyword">end</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;Recursive Least-Squares algorithm without forgetting factor&#x27;</span>);<br>theta <span class="hljs-comment">% display final parameter vector</span><br></code></pre></td></tr></table></figure><ol start="3"><li>一些不知疲惫的“制作无限曲别针”的GPT</li></ol><p>2003年人类对强人工智能提出了一个<a href="https://www.douban.com/note/642211177/?from=tag_all&_i=21573201Oe3vhp">曲别针制造机假说</a>，提出制造曲别针这个无害的指令也会对人类造成不可挽回的后果。</p><p>最近有很多类似的项目出来了</p><p>最初的<a href="https://news.ycombinator.com/item?id=35506069">babyGPT</a><a href="https://github.com/yoheinakajima/babyagi">这里可能是对应代码，我没细看</a></p><p>然后出现了 <a href="https://github.com/Significant-Gravitas/Auto-GPT">autogpt</a></p><p>这个玩意儿短短几天就102kstar了，比比特币疯狂多了</p><p>他相当于第一次打开了制造曲别针的这个潘多拉魔盒</p><p>以及从autoGPT衍生出来的<a href="https://github.com/reworkd/AgentGPT">agentGPT,这是个网页版本，可以填上api直接跑，虽然效果很傻</a></p><ol start="4"><li><a href="https://www.cnblogs.com/softcorns/p/16369045.html">colab教程</a></li></ol><p>让我在使用colab上有迹可依</p><ol start="5"><li><p>因为睡午觉而错过了4月20号北京首钢主场球票开售的我，不得不经历一系列问题，于大麦网抢票打交道，因此萌生了做抢票脚本的想法。但是网上没有开源的东西，毕竟这种东西对黄牛来说违法又赚钱，只能自己想办法以后多学学了。</p></li><li><p>这个xqc让我短暂萌生了做tts的想法，后来调查了一下发现人家帮他做这个东西的粉丝是个真的大牛，遂感叹自己弱鸡</p></li></ol><iframe src="//player.bilibili.com/player.html?aid=269984325&bvid=BV1Xc411p7SE&cid=1093662519&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p><a href="https://www.bilibili.com/video/BV1Xc411p7SE/?share_source=copy_web&vd_source=42c6d53548a69758e45332a23b4e625b">视频链接，如果上面视频不能播放的话）</a></p><p><a href="https://twitter.com/RoaringIron">这里</a>是大牛的推特</p><h1 id="其他岁岁念"><a href="#其他岁岁念" class="headerlink" title="其他岁岁念"></a>其他岁岁念</h1><p>这是丰富的一周，周一去五棵松和周帆看血虐复仇吉林</p><p>周六又去新工体看国安三年来第一场比赛</p><p><img src="https://pic.1314171.xyz/i/2023/04/22/6331a4a16f12a82e5bc78a9a277ad6d.jpg"><br><img src="https://pic.1314171.xyz/i/2023/04/22/95be92db81147ab0d4c422f98f17af6.jpg"><br><img src="https://pic.1314171.xyz/i/2023/04/22/79d5c5fffabf5346cc90f7af4f923ab.jpg"><br><img src="https://pic.1314171.xyz/i/2023/04/22/99c5d92ae7c018a21ca8b1cdf08a8ca.jpg"><br><img src="https://pic.1314171.xyz/i/2023/04/22/a2c5ca46950075de5b7ea220476bc86.jpg"></p><p>可以看出来新工体相当的震撼</p><p><img src="https://pic.1314171.xyz/i/2023/04/22/21a4e1853b7cdf7569999e950d12d8d.jpg"><br>我在前排摇旗子，相当有面子</p><p>周中某个中午，我正在睡梦中，首钢放出了4月20日打辽宁的票，我错过了。（12点开票11点50发公告）</p><p>我经历了在众多翻倍三倍的黄牛中找到加价70的票，纸质票不发转电子票二手票不能进场，去工体路上为了更好网速专门出地铁抢黄牛的退票，在某个下午无意间看到球迷群中说放了一大波票有幸抢到这一离奇过程。</p><p>这之后我由衷的对票务代理和大麦网产生了抗拒情绪</p><p>也想自己试着整整抢票脚本）加油吧</p><p>周日又和同学一起去金海湖烧烤<br><img src="https://pic.1314171.xyz/i/2023/04/22/8f4ccf572a257ea0f6438d68b8f884b.jpg"><br><img src="https://pic.1314171.xyz/i/2023/04/22/6abf48e7590171cf7fe221b11e844e0.jpg"></p><h1 id="疫情放开后的日子确实过的滋润了"><a href="#疫情放开后的日子确实过的滋润了" class="headerlink" title="疫情放开后的日子确实过的滋润了"></a>疫情放开后的日子确实过的滋润了</h1>]]></content>
    
    
    <summary type="html">GPT, 看球， 抢票</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 7</title>
    <link href="http://blog.1314171.xyz/post/2023week7.html"/>
    <id>http://blog.1314171.xyz/post/2023week7.html</id>
    <published>2023-04-07T11:13:31.000Z</published>
    <updated>2023-04-07T11:13:31.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="居然已经第七周学期过半了"><a href="#居然已经第七周学期过半了" class="headerlink" title="居然已经第七周学期过半了"></a>居然已经第七周学期过半了</h1><p>现在每周过的太快了，虽然每周都会出去转悠去玩，但是周中的课程日复一日，感觉上来讲周中什么特别的都没有。</p><p>但是没期中考试所以没有学期过半的危机感</p><h2 id="哦，其实周中过的还不错"><a href="#哦，其实周中过的还不错" class="headerlink" title="哦，其实周中过的还不错"></a>哦，其实周中过的还不错</h2><p>马里奥大电影在我看来是平均水准以上的好片（但陪我去的同学评价不高</p><h2 id="chatGPT大规模封号"><a href="#chatGPT大规模封号" class="headerlink" title="chatGPT大规模封号"></a>chatGPT大规模封号</h2><p>我的账号没能幸免，不过newbing已经能解决大部分问题了，所以，暂时没有再注册一个的需求。</p><p>使用的时候还是要注意稳定一下登陆的ip</p><h1 id="links"><a href="#links" class="headerlink" title="links"></a>links</h1><h2 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h2><ol><li><a href="https://english.elpais.com/science-tech/2023-01-10/if-parrots-can-talk-why-cant-monkeys.html">鹦鹉比猩猩牛在哪？</a></li></ol><blockquote><p>这篇文章讲了人能说话的决定性因素是神经控制</p></blockquote><ol start="2"><li><a href="https://einverne.github.io/post/2023/04/why-we-sleep-notes.html#%E5%90%AF%E5%8F%91%E6%88%96%E6%83%B3%E6%B3%95">《我们为什么要睡觉》读书笔记 </a></li></ol><blockquote><p>感觉互联网上的主流对睡眠的说法是从这本书出来的</p></blockquote><blockquote><p>周三晚上躺床上好久没睡着，感觉是一种认为自己睡不着的状态。最后睡着了大概是脑子累了</p></blockquote><ol start="3"><li><a href="https://www.bilibili.com/video/BV1Yo4y1W7Yc/?buvid=XX3154F3AD73907271B038E44105213DE6445&is_story_h5=false&mid=anhNAo1ifRpxkYRm1vfRBQ==&p=1&plat_id=116&share_from=ugc&share_medium=android&share_plat=android&share_session_id=08e6087d-3c92-4236-a843-24fdd694f0a9&share_source=COPY&share_tag=s_i&timestamp=1680424967&unique_k=3A8zcpG&up_id=11836186&vd_source=a778efc7f877dcbdee2bfd2ed7b4af49">取消文化</a></li></ol><iframe src="//player.bilibili.com/player.html?aid=396852210&bvid=BV1Yo4y1W7Yc&cid=1077188119&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><blockquote><p>想起娱乐圈了，或者说互联网时代这种“取消”变得普遍且影响深远了。很多媒体资源是能够通过互联网及时获取的（并且缓存是临时的），导致如果在信息提供出对其进行阻断，那么你就再也不能获得该信息。</p></blockquote><blockquote><p>在过去信息的传播是通过纸质媒介，光盘，磁带。信息最终分发保留在每个信息的尽头。甚至图书馆也做不到立刻下架所有需要“取消”的内容。互联网不同，一行代码解决一切（没准GPT能独立做到60%）。</p></blockquote><blockquote><p>体现出来的是重要信息存档的重要意义。</p></blockquote><h3 id="关于你的大脑"><a href="#关于你的大脑" class="headerlink" title="关于你的大脑"></a>关于你的大脑</h3><ol start="4"><li><a href="https://www.quantamagazine.org/brains-speed-up-perception-by-guessing-whats-next-20190502/">Brains Speed Up Perception by Guessing What’s Next</a></li></ol><blockquote><p>文章中理论的部分没怎么看懂，但它的内容意味着：<strong>如果一个人能够更好的预测正确短期的未来会发生的事情，他的工作状态和结果会更加顺利。</strong></p></blockquote><blockquote><p>我想到了之前一直困扰我的几件事情，一件事情是<strong>如何明确理想让它成为一种低成本的内驱力</strong>，另一件事情是<strong>如何使用零散的时间完成一整个任务</strong>。我也许会在下周具体阐述这两个问题和我的思考）</p></blockquote><blockquote><p>先简单说，关于理想（或者说志向）不论是立大志还是赚大钱，对我来说都是比较缥缈的，身边有同学能够仅仅以这两种理想驱动来完成每天的工作并且能循环往复不需要用大众娱乐来调剂自己的精神（这种精神力量在我看来无疑是低成本的）。我是很羡慕的。第二个事情可以用这样一个场景描述：某个作业我预计要4小时写完，那么今天晚上9点下课到睡觉还有2-3小时可以自由支配的空间。本真的我会选择不去动这个作业，去干别的比如2-3小时能干完的工作或者干脆进行大众化娱乐。也就是说，我有的时间放不下整个工作的时候，我大概率会放弃在这段时间做它。这样的情况让我对零散时间，甚至是较短的整块时间的利用不是很高效。其中一个可能的原因是：干不完的工作需要在未来重启，而工作中一些新接触到的技术和概念会在中间空档期忘掉，导致重启的成本很高。当然，也许任务极端的碎片话，每次重启需要回顾的内容变短，而且对新东西的反复应用近似记忆曲线，那么可能问题就解决了。但稍后的一篇文章提到了重启的高昂成本。</p></blockquote><blockquote><p>这篇文章，对第一个问题，也许可以解释为什么理想不能很好的具象化并成为内驱力，因为大脑并不能预设一个明确的行为方向，加速外界的刺激（也就是改变局部的势平面”these dynamics to a ball moving through a landscape filled with troughs”，外界刺激更容易到局部最低点）。而短期的目标是可以被大脑预设出来的。当然，<strong>也许理想足够强大清晰时，我们应该可以让整个势平面整体倾斜</strong></p></blockquote><blockquote><p>对第二个问题，从文章的理论，如果我能预设到未来这段时间内是否会被打断，预设出我可以在这段时间内完成多少比例的工作或者将工作完成到什么程度，或者正确预测到工作中的困难，也许在3小时内的工作是高效的。重启的时间成本可以被节省出来。</p></blockquote><blockquote><p>总得来说，文章提出的是一个脑神经网络的模型，能帮助我思考我面临的困境。</p></blockquote><ol start="5"><li><a href="https://contextkeeper.io/blog/the-real-cost-of-an-interruption-and-context-switching/">Programmer Interrupted: The Real Cost of Interruption and Context Switching</a></li></ol><blockquote><p>讨论了被打断后重建的成本。并给出了在撰写代码工作流方面的解决方法，有趣的是这篇文章主要参考了整整10年前的博客。十年之后，问题依旧。</p></blockquote><blockquote><p>这篇文章证实了我对被打断的憎恶（或者对中断工作的憎恶，哪怕这是可预测的）。写这个周报的时候，就因为各种事情中断了两次（长达几小时），中断时写的半句话当时肯定觉得自己能想起来，但实际上我完全不能理解我当时想说啥。这种情况也出现在收集链接和评论上。周中收集链接时想到的评价和周末汇总时写出的总是不一样的。</p></blockquote><blockquote><p>我觉得文章中提到的Prospective Memory可能是这种问题的终极解法。让未来可能会用到的内容从脑中显像化在外部存储中（纸张，代码注释等）</p></blockquote><p><a href="https://news.ycombinator.com/item?id=35459333">hackernews上对这个问题的讨论</a></p><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><ol><li><a href="https://github.com/hocus-dev/hocus">一个新的自托管的workspace</a></li></ol><blockquote><p>感觉周中刷到的时候是因为他宣传有AI加持但是我好想没看到</p></blockquote><ol start="2"><li><a href="https://www.nature.com/articles/s41567-023-01993-w">Double-slit time diffraction at optical frequencies</a></li></ol><blockquote><p>不小心刷到了看起来很吊的干涉</p></blockquote><ol start="3"><li><a href="https://news.ycombinator.com/item?id=35459031">DL学习路径</a><br><a href="https://karpathy.ai/zero-to-hero.html">大佬karpathy做的Neural Networks: Zero to Hero</a></li></ol><blockquote><p>在班里十个人九个在搞DL另一个已经精通的大环境下，有必要从头学一下了<br>问了一下newbing，他说：”……I think this website is useful for learning deep learning, especially if you want to follow along with the code and build neural networks from scratch. The website is created by <strong>Andrej Karpathy</strong>, who is a well-known expert and practitioner in deep learning³. He is currently the Director of AI at Tesla and a former research scientist at OpenAI³. The website contains a series of YouTube videos where he explains the key concepts and terminologies of deep learning without any code, and then shows how to implement them in Python using PyTorch¹. The website also provides Jupyter notebooks and GitHub repositories for each video, as well as exercises for practice². The website covers topics such as backpropagation, language modeling, multilayer perceptrons, activations, gradients, batch normalization, and more¹. The website is aimed at beginners who have some basic knowledge of Python and calculus¹.”<br>并且bing推荐用kaggle,这也是大部分同学用的“Learn from online courses or platforms like Kaggle that offer interactive lessons, quizzes, and competitions on deep learning topics”</p></blockquote><p>以下是bing给出的计划</p><p>I cannot give you a definitive learning plan for 30 days, as different learners may have different preferences and goals. However, I can suggest a possible outline that you can modify according to your needs and interests. Here is an example of a 30-day learning plan to build your own neural network:</p><ul><li>Day 1-5: Review the basics of Python and PyTorch, and learn how to use Kaggle Notebooks. You can use the resources from Kaggle Learn or other online courses or books.</li><li>Day 6-10: Watch the first video from the website and learn how to build micrograd, a minimal automatic differentiation library. Follow along with the code and exercises in your notebook. Try to understand the concepts and math behind backpropagation and gradient descent.</li><li>Day 11-15: Watch the second video from the website and learn how to build makemore, a character-level language model. Follow along with the code and exercises in your notebook. Try to understand the concepts and techniques behind language modeling, such as embeddings, softmax, cross entropy loss, sampling, etc.</li><li>Day 16-20: Watch the third video from the website and learn how to extend makemore into a multilayer perceptron (MLP) language model. Follow along with the code and exercises in your notebook. Try to understand the basics of machine learning, such as model training, learning rate tuning, hyperparameters, evaluation, train&#x2F;dev&#x2F;test splits, under&#x2F;overfitting, etc.</li><li>Day 21-25: Watch the fourth video from the website and learn how to improve makemore with batch normalization. Follow along with the code and exercises in your notebook. Try to understand the internals of MLPs with multiple layers, such as activations, gradients, scaling issues, diagnostic tools, etc.</li><li>Day 26-30: Watch the fifth video from the website and learn how to backpropagate through makemore manually without using PyTorch autograd. Follow along with the code and exercises in your notebook. Try to understand how gradients flow backwards through the compute graph and on the level of efficient tensors.</li></ul><p>By the end of this learning plan, you should be able to build your own neural network from scratch using Python and PyTorch. You should also have a solid foundation of deep learning concepts and terminologies that you can apply to other domains and problems. Of course, this is not the end of your learning journey, but rather a starting point for further exploration and improvement. I hope this helps you achieve your goal. Good luck! 😊</p><p><a href="https://www.kaggle.com/">kaggle：算力，教程，刷榜阿巴阿巴</a></p><blockquote><p>少玩点游戏吧少年</p></blockquote><ol start="4"><li><a href="https://segment-anything.com/">所谓图像领域的GPT3，AI “cut out” any object</a></li></ol><blockquote><p>用之前stablediffusion生成的图片试了试，感觉简单图片它干的很不错了</p></blockquote><p>这是效果</p><p><img src="https://pic.1314171.xyz/i/2023/04/07/%E6%97%A0%E6%A0%87%E9%A2%98.png"></p><p>原图是这样的</p><p><img src="https://pic.1314171.xyz/i/2023/04/07/front_shot_of_a_weasel_doctor__intricate__elegant__highly_detailed__centered__concept_art__smooth_sh_Seed-7886292_Steps-50_Guidance-172.png"></p><ol start="5"><li><a href="https://dmesg.app/cf-zero-trust.html">一个创建内网的方式</a></li></ol><blockquote><p>现在没用，以后也许会有用</p></blockquote><ol start="6"><li><a href="https://robotic.substack.com/p/behind-the-curtain-ai">Behind the curtain: what it feels like to work in AI right now</a></li></ol><blockquote><p>以下是newBing对这个文章的总结，和自己看英文内容比，这样确实快很多，而且比简单的机器翻译要更达意。</p></blockquote><p>这篇文章是由Nathan Lambert撰写的，讲述了ChatGPT这一大型语言模型对AI行业的影响，以及AI研究者和工程师在这个快速发展的领域面临的挑战和机遇。文章主要包括以下几个方面：</p><ul><li>ChatGPT是OpenAI开发的一种基于海量文本数据训练的AI系统，被认为是AI领域的第一个iPhone时刻，引发了人们对AI的兴趣和变革。</li><li>ChatGPT的出现导致了AI行业的大量变化，包括职业转变、新公司的创建、项目的放弃等。整个行业充满了活力，但也带来了竞争、噪音、影响力、财务上升、道德担忧等方面的压力。</li><li>AI研究者和工程师在这个环境中工作非常紧张，既有强烈的动力，也有严重的倦怠。他们需要在第一或最好的综合征（以及开放性）之间做出选择，同时保持专注和创新。文章认为，这些压力使得人们在构建AI产品时忽视了工程和文档的完善性，而更注重点击率。</li><li>文章还提出了两个基本假设：大型语言模型（LLMs）将成为机器学习工具箱中跨领域的常用部分；AI安全是一个真实的问题，需要引起公众的关注和讨论。文章指出，这两个假设使得AI领域更加复杂和有趣，但也更加危险和不稳定。</li><li>文章最后呼吁AI社区保持谦逊和合作，避免陷入资本主义驱动的AI竞赛，而是关注AI对人类社会的长期影响和价值。</li></ul><h1 id="春天快乐，没有感冒的一次换季体验是爽快的"><a href="#春天快乐，没有感冒的一次换季体验是爽快的" class="headerlink" title="春天快乐，没有感冒的一次换季体验是爽快的"></a>春天快乐，没有感冒的一次换季体验是爽快的</h1>]]></content>
    
    
    <summary type="html">一周内刷到的链接合集</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 6</title>
    <link href="http://blog.1314171.xyz/post/2023week6.html"/>
    <id>http://blog.1314171.xyz/post/2023week6.html</id>
    <published>2023-04-01T12:52:44.000Z</published>
    <updated>2023-04-07T00:43:35.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="技术向-amp-更新"><a href="#技术向-amp-更新" class="headerlink" title="技术向&amp;更新"></a>技术向&amp;更新</h1><ol><li><a href="https://blog.gslin.org/archives/2023/03/29/11118/%E6%94%B9%E7%94%A8-ifttt-%E5%88%86%E4%BA%AB%E5%88%B0-twitter/">IFTTT 分享博客（借用rss）到 Twitter</a></li></ol><blockquote><p>试一下吧，看看有没有效果，这周的应该就能自动发推特上了</p></blockquote><ol start="2"><li><a href="https://github.com/usememos/memos">本来是碎片知识管理，被我用成了时间线梳理</a></li></ol><blockquote><p>这个项目很好，我自己搭了一个，能记录自己都干了啥，有tgbot很方便，也很漂亮</p></blockquote><p><img src="https://pic.1314171.xyz/i/2023/04/01/20230401204847.png" alt="时间线效果图"></p><h1 id="杂"><a href="#杂" class="headerlink" title="杂"></a>杂</h1><ol><li><a href="https://www.guokr.com/article/463680/">你写的每个“的地得”，都可能成为呈堂证供</a></li></ol><blockquote><p>我写的每篇博客都将成为我的呈堂证供</p></blockquote><ol start="2"><li><a href="https://www.bilibili.com/video/BV11g4y137yo/?spm_id_from=333.337.search-card.all.click&vd_source=81d250ace1f03d943723e87ae82d6bfe">看超级小桀看塞尔达2预告</a></li></ol><blockquote><p>任天堂的游戏发展到现在依旧不是靠特效靠画质取胜，从预告的内容来看，要是提到的所有功能都能实现，是开放性世界游戏的一大开创性进步，希望bug少一点，如果4月份马里奥大电影官宣下一代主机，那这波配合非常好</p></blockquote><iframe src="//player.bilibili.com/player.html?aid=824311046&bvid=BV11g4y137yo&cid=1075670771&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><ol start="3"><li><a href="https://www.bjp.org.cn/APOD/4028c1368724a846018726c03f3b0003.shtml">一次多重绿闪日落</a></li></ol><blockquote><p>真的很漂亮</p></blockquote><p><img src="https://pic.1314171.xyz/i/2023/04/01/1679982160949011264.jpg"></p><ol start="4"><li><a href="https://wiki.qunn.eu/books/b1d10/page/72b32">舍友煎包对搜索引擎（英文为主）的纵览文章的翻译</a></li></ol><blockquote><p>其实我觉得没啥用（小声，but煎包推荐的东西还是有前瞻性的</p></blockquote><ol start="5"><li><a href="https://news.ycombinator.com/item?id=35348353">对暂停大模型训练公开信的外网讨论</a></li></ol><blockquote><p>上周说过了关于马斯克的，其实当时我也想到了我认知里做到人类共同停止进步的领域就是俩，一个是核武器，一个是克隆人（or可以说是应用在人类身上的有伦理风险的技术）。<br>这封公开信已经被确认好多签名造假而暂停签名了</p></blockquote><ol start="6"><li><a href="https://mp.weixin.qq.com/s/snUKQAhKrDbrGaWzxQUYXw">一篇想让我去台湾见见世面的文章</a></li></ol><blockquote><p>台湾的风土人情还是和大陆有蛮大的差别的（或者说和我生活的北方比）<br>希望能在明年12月（也就是梧桐前）去一次台湾</p></blockquote><ol start="7"><li><a href="https://www.bilibili.com/video/BV1DY4y1S796/?buvid=XX3154F3AD73907271B038E44105213DE6445&is_story_h5=false&mid=anhNAo1ifRpxkYRm1vfRBQ==&p=1&plat_id=116&share_from=ugc&share_medium=android&share_plat=android&share_session_id=efc7f098-746b-453a-bee5-25ddc0f38bc6&share_source=COPY&share_tag=s_i&timestamp=1680153764&unique_k=czz92bA&up_id=511148568&vd_source=81d250ace1f03d943723e87ae82d6bfe">入狱养老</a></li></ol><blockquote><p>评论里说：视频信息不足，我来补充一些：1、08年付达信69岁，一辈子都没娶过亲，作为五保户，从03年起，领一年300元的补助，到07年涨到600元，平时捡废品补贴家用，进去前已经两年没吃过肉；2、进去后，天天有馒头吃，老年人每天早晨加一个鸡蛋，两年来第一次吃到了肉，三个月胖了10斤；3、每年600元的五保户补助依然发放，村里会计把钱邮寄过来，在里面可以买到一些东西改善伙食；4、里面60岁以上老人不需要劳动，每天早晨6点30起床，别人出工后，付回舍休息，看书看报、背唐诗、写字；5、做了有生以来第一次体检，查出“脑血管硬化、骨质增生、双肾结石、前列腺炎”，每天均有医生巡诊，某次前列腺炎发作，由四个帽子叔叔陪同去外面社会医院诊治。<br>我想，是不是可以拿纳税的钱建一点类似监狱生活水平的养老院？如果社会上真的很多老人的生活不如在牢笼里的话</p></blockquote><ol start="8"><li><a href="https://www.zhihu.com/question/50987348/answer/2956578292">猫为什么会经常聚在一起？猫咪定期开会的意义是什么？ - 美味大夜壶的回答 - 知乎</a></li></ol><blockquote><p>这个回答说猫咪开会为了“定期观察情况（猫咪社会地位等）有没有大变化”<br>人也一样，有道理“ 你开会开不出什么结果，但是不开会一定出积小乱为大乱。国际上也一样。</p></blockquote><ol start="9"><li><a href="https://www.zhihu.com/question/583365135/answer/2894927545">如果博士论文要求创新，那么是不是意味着以后的博士会越来越少，毕竟人总有江郎才尽的一天? - 韩愈字退之的回答 - 知乎</a></li></ol><blockquote><p>我以后可能会成为文中白银或者青铜段位的，作者评价为：“要么是迎合热点炒噱头，要么是为赋新词强说愁，其对社会的唯一贡献在于消耗科研经费。此类研究做得再花哨也不会产生任何实际作用，毕竟，就算你角度和力度算的再准，也不会有人真拿量角器和测力计对着切菜的。如果能在这个level拔尖，大概率能获得《＊年＊篇顶刊！为这个智慧与颜值并存的学霸女神&#x2F;男神点赞！》的学校官微推文一篇，基本可以视为优秀博士生的天花板。<br>但我认为只要有经济头脑，是可以将这些技术细节成果转化的，人不能把控的让机器来，机器切菜总可以计算力度额角度吧</p></blockquote><h1 id="看到一个人写的对自杀者的探究文章，还有点意思"><a href="#看到一个人写的对自杀者的探究文章，还有点意思" class="headerlink" title="看到一个人写的对自杀者的探究文章，还有点意思"></a>看到一个人写的对自杀者的探究文章，还有点意思</h1><ol><li><p><a href="https://mp.weixin.qq.com/s/9w4eilNJDd3PmyOuGe3Btw">一位僧侣与自杀的对抗之旅</a></p><blockquote><p>我不做评论了，声明，本人没有半点自杀倾向</p></blockquote></li><li><p><a href="https://mp.weixin.qq.com/s/u3jTkN8yL0CSZmAZTfvZ-A">动物会自杀吗</a></p><blockquote><p>动物自杀也和上周提到对人工智能同样适用的没有自我意识来解释</p></blockquote></li></ol>]]></content>
    
    
    <summary type="html">一周内刷到的链接合集</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>IFTTT?IF THIS THEN THAT!</title>
    <link href="http://blog.1314171.xyz/post/220807ifttt.html"/>
    <id>http://blog.1314171.xyz/post/220807ifttt.html</id>
    <published>2023-04-01T12:22:10.000Z</published>
    <updated>2023-04-01T12:22:10.226Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是IFTTT"><a href="#什么是IFTTT" class="headerlink" title="什么是IFTTT"></a>什么是IFTTT</h1><p><a href="https://sspai.com/post/43731">请参考</a></p><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="https://ifttt.com/">官网</a></p><p><a href="https://ifttt.com/qnap">官网威联通接口</a></p><p><a href="https://www.qnap.com.cn/solution/ifttt_agent/zh-cn#flexible">威联通官网</a></p><p><a href="https://www.qnap.com/en/how-to/tutorial/article/ifttt-agent-user-guide">威联通官方教程</a></p>]]></content>
    
    
    <summary type="html">还是为了更高效的把nas用起来</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="nas" scheme="http://blog.1314171.xyz/tags/nas/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 5</title>
    <link href="http://blog.1314171.xyz/post/2023week5.html"/>
    <id>http://blog.1314171.xyz/post/2023week5.html</id>
    <published>2023-03-29T16:22:36.000Z</published>
    <updated>2023-03-29T16:22:36.080Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这周啥也meigan"><a href="#这周啥也meigan" class="headerlink" title="这周啥也meigan"></a>这周啥也meigan</h1><p>但是有一些新的值得分享的链接：</p><h2 id="首先是ChatGPT延伸出来的话题"><a href="#首先是ChatGPT延伸出来的话题" class="headerlink" title="首先是ChatGPT延伸出来的话题"></a>首先是ChatGPT延伸出来的话题</h2><p>1.<br><a href="https://www.guokr.com/article/463654/">gpt是否具有自我意识</a></p><p>有关研究GPT的心理理论水平的科普，结论是GPT没有9岁的心智，但可以由简单的【心理理论（Theory of Mind）能力，有时也被译为“心理推理能力”，通常是指理解他人内心状态的能力，包括推断他人意图、信念、情绪等等。】能力。</p><p>2.<br><a href="https://mp.weixin.qq.com/s/ytBdm7CgaVTVeIgShignUw">究竟在哪个问题上, ChatGPT逼得思想无路可走?</a></p><p>这是一个人文社科报社的文章，我也不是很明白文中提到的哲学相关的话题。从一个技术外行角度（从原文遣词造句可以看出来）给出了对人工智能这次在社会层面大爆发的评价。</p><p>文章同样提到了GPT没有自我意识，文中提到图灵测试和GPT的关系,GPT对政治正确的执念以及GPT的思维黑箱。</p><blockquote><p>目前的人工智能都属于图灵机，可是图灵测试却恐怕已经失灵了，这个有趣的事情说明，图灵把测试标准定得太低，难不倒GPT系列人工智能，反倒只能从过于标准化或过于政治正确的回答来推测谁是人工智能——<strong>正常人大概不会坚持不懈地说些滴水不漏的政治正确的废话，除非是神经病或人工智能。</strong>GPT（包括最新的GPT-4）提出的新问题是，它属于图灵机，却有能力通过图灵测试。“像人而不是人”这个新问题废掉了图灵测试。为什么可以这样？这就需要分析GPT的思维原则。<strong>目前的人工智能都采取经验主义和进化论原则，这样的思维水平大致相当于原始人。</strong>人工智能的“学习”，主要意思是收集材料和记忆，而其“训练”的主要意思是吃一堑长一智。如此简单听起来令人失望，但加上无敌的运算速度就有神奇效果了。</p></blockquote><blockquote><p>传统图灵机相当于数学直觉主义的信徒，且称之为“布劳威尔型号”，其知识生产限于能行有限步骤可实现的确定必然结果，就是说，它能够承认的知识是封闭领域里的确定知识。有限步骤无法解决的问题就出事了，比如说让它运算个悖论或者圆周率之类，不知道会死机还是永不停机。这种图灵机只按照给定规则去做作业，显然没有主体性，是工具而不是主体，其思维方式可称为机械主义。GPT是图灵机的升级版（很快还会有更高级的），其思维方式已经从机械主义切换为经验主义和进化论。GPT的思维没有实现封闭化，超越了“布劳威尔型号”，变成了“维特根斯坦2型”（符合后期维特根斯坦哲学），其思维居然有了黑箱，它在建立信息或语言关联时有着语境化的不确定性、灵活性或即兴性，因此形成了思维不完全透明的黑箱效果，即使设计者也不完全知道它是怎么想的，比如说不清楚它在什么时候和为什么会突然“一本正经地胡说八道”。<strong>但这种“自主性”可不是主体性，GPT并没有自己的信念和想法。</strong></p></blockquote><p>给出了一个新芝诺问题的假设：</p><blockquote><p>新芝诺问题的要点在于，人类知识可以无限发展，<strong>但受到生物学的限制，人类的智能存在着极限（心灵和身体的能力都有其极限）</strong>，相当于智能被上帝锁死，因此人类智能有着某种无法超越的智能常数，类似于光速是宇宙的一个不可超越的常数，而人工智能的设计智能来自人类，那么，给定人工智能限于图灵机，合理推测是，图灵机人工智能可以无限逼近人的知识，但无法超过人的智能常数，类似于不可能比光速更快。</p></blockquote><p>认为人工智能可以无限逼近人的知识，但无法超过人的智能常数。在智能常数的限制下，人工智能阿基里斯就真的追不上人类乌龟了，当然两者会无限逼近。给定这个情况，无限逼近人类智能的图灵机将是人类最好的工具，能够帮助人类创造更好的生活。</p><p>最后，文章讨论了“自虐”问题：人工智能何时超越人成为新主体？<strong>人类提心吊胆而兴奋地等待这一天的到来。</strong></p><blockquote><p>人工智能突破奇点有两种可能性：（1）超越人类的智能常数，这必须能够产生与人不同而高于人的另一种思维；（2）达到人类的智能常数，又有着比人类智能更大的运作能量。可能性（2）是安全奇点，看起来非常可能，只是需要时间，但可能性（1）是危险奇点，幸亏目前还难以想象。从根本上说，人工智能突破奇点需要获得自我意识、反思性、创造性。这三者密切相关。</p></blockquote><p>哲学的角度讨论自我意识</p><blockquote><p>看来自我意识先需要具备反思能力。反思不仅仅是认识自身，更重要的是拥有自身，即对自身拥有所有权、自主权和立法权，就是康德说的“autonomy”。目前人工智能之所以还不是主体，不在于能力还不够强（能力的局限性会在高速迭代中被解决），而在于它的思维能力虽然落户在机器上，但并不属于机器而属于人类，<strong>人工智能并没有拥有思维，只有思维的使用权，却没有思维的所有权、自主权和立法权</strong>，相当于说，人工智能是人类智能的经理，却不是主权人。假如反思性仅仅达到认识自身，就只是自我意识的必要条件而不是充分条件。如果反思没有建构性（创造秩序或系统的能力），自我意识就功败垂成。</p></blockquote><p>文章谈到了我一直以来认为的AI生成领域最大的弊端：1. 人工智能给出的内容是现有内容的集合，存在创造力边界就是人类现有创造水平。2. 人工智能生成内容的“逻辑”是依靠权重，数据概率相关的，而非“理解”如果那么这种人类逻辑。</p><blockquote><p>从存在论意义上说，人工智能的思想对象都是已经存在的，它不能处理尚未存在的事情。人类的思维对象不仅包括给定的数据（相当于已经存在的事情），而且包括尚未存在的事情，表现为“可能性”，同时在逻辑上也自动包含了“不可能性”。</p></blockquote><p>综上，人工智能距离颠覆创造性工作还有很长的路要走，但对基础性的技术工作可能会在一定程度上超越人类自身。也就是说，从菜鸟到大牛之间这一段区域将能够被人工智能完全填充，我认为未来人类可能在AI的压力下发展为大学学习基本理论知识和理解AI技术后攻坚各种人类边界问题</p><ol start="3"><li><a href="https://blog.sciencenet.cn/blog-829-1381783.html">警惕！ChatGPT或将重塑我们的情感模式</a></li></ol><p>讲GPT虽然不能超越人类，但有可能像TikTok算法产生信息茧房一样产生情感茧房，从而影响人类。</p><p><strong>超时空差一句话话</strong> 23年3月29号（也就是下周）看到马斯克带头签了一个倡议<a href="https://futureoflife.org/open-letter/pause-giant-ai-experiments/">Pause Giant AI Experiments: An Open Letter</a>, 暂停超越GPT4的大模型。不论是不是出于商业目的）</p><h2 id="一些题外话"><a href="#一些题外话" class="headerlink" title="一些题外话"></a>一些题外话</h2><p><a href="https://blog.sciencenet.cn/blog-729911-1381943.html">做科研是一种贵族行为</a></p><p><a href="https://lala.im/8634.html">自建游戏加速器</a></p>]]></content>
    
    
    <summary type="html">一周内刷到的链接合集</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 4</title>
    <link href="http://blog.1314171.xyz/post/2023week4.html"/>
    <id>http://blog.1314171.xyz/post/2023week4.html</id>
    <published>2023-03-22T09:37:31.000Z</published>
    <updated>2023-03-29T15:33:40.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="充实的周末"><a href="#充实的周末" class="headerlink" title="充实的周末"></a>充实的周末</h1><h2 id="指丢了回自行车"><a href="#指丢了回自行车" class="headerlink" title="指丢了回自行车"></a>指丢了回自行车</h2><p>详情:<br><img src="https://pic.1314171.xyz/i/2023/03/22/bca1ac9fedd8b5818fc9925acf7fa59.jpg"></p><p>录完笔录坐公交还做过站了<br><img src="https://pic.1314171.xyz/i/2023/03/22/d69feb7390eee75cc278d423ce965eb.jpg"></p><p>周末白天在中关村校区，<br><img src="https://pic.1314171.xyz/i/2023/03/22/8f69b6f91c860e99cb6111b0d84f6f0.jpg"></p><h1 id="链接们："><a href="#链接们：" class="headerlink" title="链接们："></a>链接们：</h1><p><a href="https://blog.csdn.net/weixin_47319327/article/details/122967712?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-122967712-blog-81231044.pc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-122967712-blog-81231044.pc_relevant_recovery_v2&utm_relevant_index=1">【论文整理】风格迁移中格拉姆矩阵（Gram Matrix）的使用</a></p><p><a href="https://zhuanlan.zhihu.com/p/356938640?utm_id=0">现代控制理论：速成&#x2F;不求甚解版</a></p><p><a href="https://wandb.ai/">深度学习可视化工具</a></p><p><a href="https://www.youtube.com/watch?v=CRlN-cYFxTk">Nerf讲解</a></p><p><a href="https://blog.sciencenet.cn/blog-412323-1380422.html">零基础作科研更可能取得大成就</a></p>]]></content>
    
    
    <summary type="html">一周内刷到的链接合集</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 3</title>
    <link href="http://blog.1314171.xyz/post/2023week3.html"/>
    <id>http://blog.1314171.xyz/post/2023week3.html</id>
    <published>2023-03-09T13:57:54.000Z</published>
    <updated>2023-03-22T07:20:16.377Z</updated>
    
    <content type="html"><![CDATA[<h2 id="周四"><a href="#周四" class="headerlink" title="周四"></a>周四</h2><p>控制理论作业强迫我们用$\LaTeX$写，被迫捡起大一参加数模时学的技能。</p><pre><code class="hljs">当时学LaTeX之后，我对他的评价就是，非常牛的排版工具，但是成本太高（主要是学习成本，毕竟相当于一种标记语言了（类html吧）。很多可以炫技的地方,比如上面的花体LaTeX（最不值一提但新接触时会眼前一亮的点）。如果科研水平到了一定的程度，我相信一定离不开它的。但它真的太繁琐了，我目前需要的功能Word基本都能提供给我，更别提LaTeX环境配置也有更高一点的要求（其实没啥），当时一轮校赛过后，我就不想碰它了。它的社区生态不如Markdown成熟，但Markdown也在不断融合进LaTeX的优点比如成熟的公式输入体系。同时，如果没有模板，从0开始自己用LaTeX写东西简直是天方夜谭。最后，对要求用LaTeX交作业，我的想法是，对我们有好处，但完全没必要。</code></pre><p>记录一些作业上经常出现的公式代码和效果</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Latex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<br><span class="hljs-keyword">\left</span><span class="hljs-keyword">\&#123;</span><br><span class="hljs-keyword">\begin</span>&#123;array&#125;&#123;cl&#125;<br>u<span class="hljs-built_in">_</span>&#123;i&#125;=i<span class="hljs-built_in">_</span>&#123;1&#125;R<span class="hljs-built_in">_</span>&#123;1&#125;+u<span class="hljs-built_in">_</span>l+i<span class="hljs-built_in">_</span>&#123;1&#125;R<span class="hljs-built_in">_</span>&#123;2&#125;-i<span class="hljs-built_in">_</span>&#123;2&#125;R<span class="hljs-built_in">_</span>&#123;2&#125;<span class="hljs-keyword">\\</span><br>u<span class="hljs-built_in">_</span>c+i<span class="hljs-built_in">_</span>&#123;2&#125;(R<span class="hljs-built_in">_</span>&#123;3&#125;+R<span class="hljs-built_in">_</span>&#123;2&#125;)=i<span class="hljs-built_in">_</span>&#123;1&#125;R<span class="hljs-built_in">_</span>&#123;2&#125;<span class="hljs-keyword">\label</span>&#123;1&#125;<br><span class="hljs-keyword">\end</span>&#123;array&#125;<br><span class="hljs-keyword">\right</span>.<br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><p>$\begin{equation}<br>\left{<br>    \begin{array}{cl}<br>        u_{i}&#x3D;i_{1}R_{1}+u_l+i_{1}R_{2}-i_{2}R_{2}\<br>        u_c+i_{2}(R_{3}+R_{2})&#x3D;i_{1}R_{2}<br>    \end{array}<br>\right.<br>\end{equation}$</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-built_in">$</span>i<span class="hljs-built_in">_</span>&#123;2&#125;=c<span class="hljs-keyword">\dfrac</span>&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;u<span class="hljs-built_in">_</span>c&#125;&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;t&#125;<span class="hljs-built_in">$</span><br></code></pre></td></tr></table></figure><p>$i_{2}&#x3D;c\dfrac{\mathrm{d}u_c}{\mathrm{d}t}$</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<br><span class="hljs-keyword">\begin</span>&#123;split&#125;<br><span class="hljs-built_in">&amp;</span><span class="hljs-keyword">\dfrac</span>&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;<span class="hljs-built_in">^</span>&#123;3&#125;u<span class="hljs-built_in">_</span>o&#125;&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;t<span class="hljs-built_in">^</span>3&#125;+(<span class="hljs-keyword">\dfrac</span>&#123;R<span class="hljs-built_in">_</span>1R<span class="hljs-built_in">_</span>2C<span class="hljs-built_in">_</span>1C<span class="hljs-built_in">_</span>2+C<span class="hljs-built_in">_</span>1L&#125;&#123;R<span class="hljs-built_in">_</span>&#123;2&#125;C<span class="hljs-built_in">_</span>1C<span class="hljs-built_in">_</span>2L&#125;)<span class="hljs-keyword">\dfrac</span>&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;<span class="hljs-built_in">^</span>&#123;2&#125;u<span class="hljs-built_in">_</span>o&#125;&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;t<span class="hljs-built_in">^</span>2&#125;+(<span class="hljs-keyword">\dfrac</span>&#123;R<span class="hljs-built_in">_</span>1+R<span class="hljs-built_in">_</span>2&#125;&#123;R<span class="hljs-built_in">_</span>&#123;2&#125;C<span class="hljs-built_in">_</span>2L&#125;)<span class="hljs-keyword">\dfrac</span>&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;u<span class="hljs-built_in">_</span>o&#125;&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;t&#125;+<span class="hljs-keyword">\dfrac</span>&#123;1&#125;&#123;R<span class="hljs-built_in">_</span>&#123;2&#125;C<span class="hljs-built_in">_</span>1C<span class="hljs-built_in">_</span>2L&#125;u<span class="hljs-built_in">_</span>o<br>=<span class="hljs-keyword">\dfrac</span>&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;<span class="hljs-built_in">^</span>&#123;3&#125;u<span class="hljs-built_in">_</span>i&#125;&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;t<span class="hljs-built_in">^</span>3&#125;<span class="hljs-keyword">\\</span><span class="hljs-built_in">&amp;</span>+(<span class="hljs-keyword">\dfrac</span>&#123;R<span class="hljs-built_in">_</span>1R<span class="hljs-built_in">_</span>2C<span class="hljs-built_in">_</span>1C<span class="hljs-built_in">_</span>2+C<span class="hljs-built_in">_</span>1L+C<span class="hljs-built_in">_</span>2L&#125;&#123;R<span class="hljs-built_in">_</span>&#123;2&#125;C<span class="hljs-built_in">_</span>1C<span class="hljs-built_in">_</span>2L&#125;)<span class="hljs-keyword">\dfrac</span>&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;<span class="hljs-built_in">^</span>&#123;2&#125;u<span class="hljs-built_in">_</span>i&#125;&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;t<span class="hljs-built_in">^</span>2&#125;+(<span class="hljs-keyword">\dfrac</span>&#123;C<span class="hljs-built_in">_</span>1R<span class="hljs-built_in">_</span>1+C<span class="hljs-built_in">_</span>1R<span class="hljs-built_in">_</span>2+C<span class="hljs-built_in">_</span>2R<span class="hljs-built_in">_</span>1&#125;&#123;R<span class="hljs-built_in">_</span>&#123;2&#125;C<span class="hljs-built_in">_</span>1C<span class="hljs-built_in">_</span>2L&#125;)<span class="hljs-keyword">\dfrac</span>&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;u<span class="hljs-built_in">_</span>i&#125;&#123;<span class="hljs-keyword">\mathrm</span>&#123;d&#125;t&#125;+<span class="hljs-keyword">\dfrac</span>&#123;1&#125;&#123;R<span class="hljs-built_in">_</span>&#123;2&#125;C<span class="hljs-built_in">_</span>1C<span class="hljs-built_in">_</span>2L&#125;u<span class="hljs-built_in">_</span>i<br><span class="hljs-keyword">\end</span>&#123;split&#125;<span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pic.1314171.xyz/i/2023/03/09/20230309215433.png" alt="效果3"></p><h3 id="公式速查表"><a href="#公式速查表" class="headerlink" title="公式速查表"></a>公式速查表</h3><p><a href="https://www.caam.rice.edu/~heinken/latex/symbols.pdf">rice大学速查手册</a><br><a href="https://lindexi.gitee.io/post/Latex-%E5%85%AC%E5%BC%8F%E9%80%9F%E6%9F%A5.html#%E5%BE%AE%E5%88%86">中文速查（不是很全</a></p>]]></content>
    
    
    <summary type="html">LaTeX，</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 2</title>
    <link href="http://blog.1314171.xyz/post/2023week2.html"/>
    <id>http://blog.1314171.xyz/post/2023week2.html</id>
    <published>2023-03-09T07:44:52.000Z</published>
    <updated>2023-03-09T14:07:13.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Weekly-Report-Week-2"><a href="#Weekly-Report-Week-2" class="headerlink" title="Weekly Report Week 2"></a>Weekly Report Week 2</h1><h2 id="学了啥）"><a href="#学了啥）" class="headerlink" title="学了啥）"></a>学了啥）</h2><p>模电有点费脑子，电磁场讲的有点快，还没来得及复习六级</p><h2 id="周三"><a href="#周三" class="headerlink" title="周三"></a>周三</h2><p>尝试和煎包复现论文代码，卡在了数据集的获取上 <a href="https://github.com/SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019">github链接</a></p><p>王晶他们组整的挺好。</p><h2 id="其他琐碎"><a href="#其他琐碎" class="headerlink" title="其他琐碎"></a>其他琐碎</h2><ol><li><p>openAI 开放了GPT3.5的API 但我不想整任何东西</p></li><li><p>stable diffusion 和脑科学结合，利用了扩散模型对羽翼的优势<a href="https://mp.weixin.qq.com/s/1wloJt03QdCTRBTe7qZSvA">大脑视觉信号被Stable Diffusion复现图像！“人类的谋略和谎言不存在了” | CVPR2023</a></p></li><li><p>就酱紫吧 over</p></li><li><p>其实我之前还疏漏了一个有用的项目，当然现在这个项目已经没用了。就是<a href="https://github.com/acheong08/EdgeGPT">EdgeGPT</a>,是一个“The reverse engineering the chat feature of the new version of Bing”，在开学打美赛的时候自己的微软还在排队就用舍友的cookie用这个登的微软GPT，有幸尝试到了受限制前的微软chat、</p></li><li><p>最后的最后，我的同学周帆发现了一个国人写的新项目将gpt和pdf论文结合在一起的项目。对论文阅读大有帮助！<a href="https://github.com/mukulpatnaik/researchgpt">researchgpt</a></p></li></ol>]]></content>
    
    
    <summary type="html">GPT, 人脸反欺诈</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>图床服务器出错过程和解决</title>
    <link href="http://blog.1314171.xyz/post/220908servernetworkproblem.html"/>
    <id>http://blog.1314171.xyz/post/220908servernetworkproblem.html</id>
    <published>2023-02-26T11:31:12.000Z</published>
    <updated>2023-02-26T11:31:12.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>安装探针，一开始想装到nas上，但nas环境，网络（家宽，端口屏蔽）docker服务不好访问，转而想装到服务器上</p><p>然后脚本运行curl时报错了</p><p><code>Connecting to github.com (github.com)|140.82.121.3|:443... failed: Net</code></p><p>我猜测是host的问题（但其实大概率不是）</p><p>我就头铁改host然后重启网络服务（命令：<code>/etc/init.d/network restart</code>)</p><p>直接导致了服务器ssh和服务都下线了</p><p><a href="https://blog.csdn.net/qing_yc/article/details/55522164">可能原因</a></p><p>vnc也连不上，工单也没法及时回复，我想着晚上就把问题解决，于是重装了系统，幸好图床上没有太多的图片</p><p>最后重装之后发现一开始无法连接的问题居然解决了，想到也可能是warp网卡出错了……，如果早想到就不用重装了没准</p><p>另外就是这个服务器是最轻量的系统，里面啥都没有，因此重启服务不确定性很高</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><h2 id="首先重装图床"><a href="#首先重装图床" class="headerlink" title="首先重装图床"></a>首先重装图床</h2><p>得益于自己写的博客，5分钟解决战斗</p><h2 id="其次上传原来博客中用这个图床的图片"><a href="#其次上传原来博客中用这个图床的图片" class="headerlink" title="其次上传原来博客中用这个图床的图片"></a>其次上传原来博客中用这个图床的图片</h2><p>哎</p><h2 id="最后，用微力同步备份"><a href="#最后，用微力同步备份" class="headerlink" title="最后，用微力同步备份"></a>最后，用微力同步备份</h2>]]></content>
    
    
    <summary type="html">因为装探针无法连接到github导致的一系列问题</summary>
    
    
    
    
    <category term="network" scheme="http://blog.1314171.xyz/tags/network/"/>
    
    <category term="vps" scheme="http://blog.1314171.xyz/tags/vps/"/>
    
    <category term="sync" scheme="http://blog.1314171.xyz/tags/sync/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 1</title>
    <link href="http://blog.1314171.xyz/post/2023week1.html"/>
    <id>http://blog.1314171.xyz/post/2023week1.html</id>
    <published>2023-02-26T11:29:23.000Z</published>
    <updated>2023-02-26T11:29:23.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Monday"><a href="#Monday" class="headerlink" title="Monday"></a>Monday</h2><p>I realized that I had forgotten the circuit analysis and complex functions learned last term. Sad.</p><h2 id="Tuesday"><a href="#Tuesday" class="headerlink" title="Tuesday"></a>Tuesday</h2><ul><li>Planning training stable diffusion modle:</li></ul><p>here is the source of the idea<br><img src="https://pic.1314171.xyz/i/2023/02/22/a5f3b9f22874f5594c18544d5ddb3e3.jpg"></p><p>Some relevant links：</p><p><a href="https://www.youtube.com/watch?v=1jomz1jjRjQ">【AI绘画】Stable Diffusion Dreambooth最新教程，只要6G显存的lora算法就能本地训练模型画出gta画风刘亦菲</a></p><ul><li>decide writing this report</li></ul><h2 id="Wednesday"><a href="#Wednesday" class="headerlink" title="Wednesday"></a>Wednesday</h2><p>see some selfhost project</p><h3 id="1-a-Self-hosted-bookmark-service"><a href="#1-a-Self-hosted-bookmark-service" class="headerlink" title="1. a Self-hosted bookmark service"></a><a href="https://github.com/sissbruecker/linkding#introduction">1. a Self-hosted bookmark service</a></h3><p>with rss &amp; extention </p><p>has docker version! <a href="https://demo.linkding.link/">demo</a></p><h3 id="2-self-hosted-web-archiving"><a href="#2-self-hosted-web-archiving" class="headerlink" title="2. self-hosted web archiving"></a><a href="https://github.com/ArchiveBox/ArchiveBox">2. self-hosted web archiving</a></h3><p>can store all kind of website from ytb to flash games. </p><p>can help solve the problem of <a href="https://www.howtogeek.com/786227/what-is-link-rot-and-how-does-it-threaten-the-web/">link rot</a></p><p><a href="https://demo.archivebox.io/public/">demo</a></p><h3 id="3-Turns-any-MySQL-PostgreSQL-SQL-Server-SQLite-amp-MariaDB-into-a-smart-spreadsheet"><a href="#3-Turns-any-MySQL-PostgreSQL-SQL-Server-SQLite-amp-MariaDB-into-a-smart-spreadsheet" class="headerlink" title="3. Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp; MariaDB into a smart-spreadsheet. "></a><a href="https://github.com/nocodb/nocodb">3. Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp; MariaDB into a smart-spreadsheet. </a></h3><h3 id="4-bookmark-with-screenshot"><a href="#4-bookmark-with-screenshot" class="headerlink" title="4. bookmark with screenshot"></a><a href="https://github.com/Daniel31x13/linkwarden">4. bookmark with screenshot</a></h3><h2 id="Friday"><a href="#Friday" class="headerlink" title="Friday"></a>Friday</h2><p>plan to do this<br><a href="https://github.com/jaymody/picoGPT">picoGPT</a></p><h1 id="what-have-done"><a href="#what-have-done" class="headerlink" title="what have done"></a>what have done</h1><ul><li>played basketball twice</li><li>finished Mathematical Modeling U.S. Competition</li><li>报名了北京动物园的志愿者，截止3月5日<a href="http://www.bjzoo.com/volunteer/join.html?ColumnName=C75AC251E7C30F41DCBE014822AC2BB4">（报名链接）</a>      要求一年去20次一次至少3小时，正好我们综测的志愿活动加分半年满分30小时。</li></ul>]]></content>
    
    
    <summary type="html">From this week start writing something I do-read-write each week.</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>我整合的语音生成歌词文件项目：Audio2Lrc</title>
    <link href="http://blog.1314171.xyz/post/221019Audio2Lrc.html"/>
    <id>http://blog.1314171.xyz/post/221019Audio2Lrc.html</id>
    <published>2022-10-19T12:09:10.000Z</published>
    <updated>2022-10-19T12:09:10.182Z</updated>
    
    <content type="html"><![CDATA[<p>第一个有实际作用的项目，欢迎star</p><h1 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h1><p>这个项目的需求是在体验了<a href="https://blog.1314171.xyz/post/221018whisper.html">whisper</a>之后发现的</p><p>有了这么好的模型，正好可以为一些英文播客(broadcast)生成歌词字幕文件(.lrc)，方便自己学英语</p><h1 id="项目仓库"><a href="#项目仓库" class="headerlink" title="项目仓库"></a>项目仓库</h1><p><a href="https://github.com/TT2TER/Audio2Lrc">TT2TER&#x2F;Audio2Lrc</a></p><p>源码和使用详见github!</p><p>欢迎提改进意见！</p>]]></content>
    
    
    <summary type="html">整合openAI的whisper模型并生成lrc歌词文件</summary>
    
    
    
    
    <category term="Audio2Lrc" scheme="http://blog.1314171.xyz/tags/Audio2Lrc/"/>
    
    <category term="whisper" scheme="http://blog.1314171.xyz/tags/whisper/"/>
    
  </entry>
  
  <entry>
    <title>whisper实时转录</title>
    <link href="http://blog.1314171.xyz/post/221018whisper.html"/>
    <id>http://blog.1314171.xyz/post/221018whisper.html</id>
    <published>2022-10-18T12:31:16.000Z</published>
    <updated>2022-10-18T12:31:16.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="introduce"><a href="#introduce" class="headerlink" title="introduce"></a>introduce</h1><p>这是一个本地的语音识别模型<br>强无敌</p><p>官网介绍：<a href="https://openai.com/blog/whisper/">Introducing Whisper</a></p><h1 id="openAI官方的python版本安装"><a href="#openAI官方的python版本安装" class="headerlink" title="openAI官方的python版本安装"></a>openAI官方的python版本安装</h1><p>github仓库链接:<a href="https://github.com/openai/whisper">whisper</a></p><ol><li>使用anaconda</li><li>在anaconda环境中安装cuda(请耐心等待解压)<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 安装CUDA</span><br><span class="hljs-attribute">conda</span> install cudatoolkit=<span class="hljs-number">11</span>.<span class="hljs-number">6</span> # 指定版本<br></code></pre></td></tr></table></figure></li><li>pytorch<br>请到它的<a href="https://pytorch.org/get-started/locally/">官网</a>选择下载对应的你的cuda的版本</li><li>安装ffmpeg<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">conda <span class="hljs-keyword">install</span> ffmpeg<br></code></pre></td></tr></table></figure></li><li>运行安装其他依赖库<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pip install git+https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/openai/</span>whisper.git <br></code></pre></td></tr></table></figure></li><li>enjoy it！(模型会在运行时下载)<br>具体使用方法见github，下面是一个示例<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">whisper <span class="hljs-string">&quot;3.3 Task 19 Gauss.mp3&quot;</span> <span class="hljs-comment">--model base</span><br></code></pre></td></tr></table></figure><h1 id="cpp实现"><a href="#cpp实现" class="headerlink" title="cpp实现"></a>cpp实现</h1>TODO:</li></ol>]]></content>
    
    
    <summary type="html">很好用的语音识别，英文准确率很高，可以用来识别英语听力</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="openAI" scheme="http://blog.1314171.xyz/tags/openAI/"/>
    
  </entry>
  
  <entry>
    <title>最近大火的stable-diffusion（AI画图模型）安装</title>
    <link href="http://blog.1314171.xyz/post/220928stablediffusioninstall.html"/>
    <id>http://blog.1314171.xyz/post/220928stablediffusioninstall.html</id>
    <published>2022-09-27T17:49:51.000Z</published>
    <updated>2022-10-19T11:42:59.081Z</updated>
    
    <content type="html"><![CDATA[<p><del>因为图床暂未配置证书，故请暂时关闭https保护以加载本文http图片资源（部分浏览器无法关闭）。如火狐可以在左上角小锁选项中选择暂时解除保护</del><br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe1d1ad3a7.png"></p><p>221019更新，图床已支持https证书</p><h1 id="选择的web-ui"><a href="#选择的web-ui" class="headerlink" title="选择的web-ui"></a>选择的web-ui</h1><p>选择了一个看起来优化不错的ui</p><p><a href="https://github.com/cmdr2/stable-diffusion-ui">stable-diffusion-ui</a></p><h1 id="win安装过程"><a href="#win安装过程" class="headerlink" title="win安装过程"></a>win安装过程</h1><h2 id="请先阅读官方说明"><a href="#请先阅读官方说明" class="headerlink" title="请先阅读官方说明"></a>请先阅读官方说明</h2><p><a href="https://github.com/cmdr2/stable-diffusion-ui#installation">说明</a></p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><blockquote><p>说明，本方法为 为所有涉及终端配置代理，不喜勿看</p></blockquote><ol><li>到<a href="https://github.com/cmdr2/stable-diffusion-ui/releases">releases</a>找到win系统对应链接下载</li></ol><p><a href="https://github.com/cmdr2/stable-diffusion-ui/releases/download/v2.16/stable-diffusion-ui-win64.zip">下载链接,v2.16版本（不建议点击这个下载）</a></p><ol start="2"><li>解压到硬盘根目录，即<code>c:</code>or<code>d:</code>，e.g.<code>C:\stable-diffusion-ui</code>,避免触及win系统路径长度限制</li><li>如果肉身在国外或有透明代理，双击<code>Start Stable Diffusion UI.cmd</code>即可，其余网络环境请继续阅读</li><li>如果系统中未安装<code>1. git客户端 2.anaconda（Python虚拟环境）</code>请先行安装，方便代理配置</li><li>为如下客户端配置代理 <ol><li>git http </li><li>git ssh</li><li>anaconda</li><li>cmd</li></ol></li></ol><p>方法：</p><p>i. git http代理（永久）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs git">#开启<br>git config --global http.proxy &quot;http://127.0.0.1:yourport&quot;<br>git config --global https.proxy &quot;http://127.0.0.1:yourport&quot;<br>git config -l --globle #查看是否配置成功<br>#如需要关闭：<br>git config --global --unset http.proxy<br>git config --global --unset https.proxy<br></code></pre></td></tr></table></figure><p>ii. git ssh代理（永久）</p><p><a href="https://blog.1314171.xyz/post/220511ssh-connect-to-ssh-github.html">参考本人博客：为git ssh设置代理</a></p><p>iii. anaconda代理（永久）</p><p>打开图形界面（navigator)<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe1ebcf5b6.png"></p><p>点击prefer……<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe1ff760aa.png"></p><p>选择下方绿色选项：<code>config conda</code></p><p>粘贴下方配置</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs awk">channels:<br>  - conda-forge<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/main<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/r<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  msys2: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  bioconda: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  menpo: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch-lts: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  simpleitk: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>ssl_verify: false<br>proxy_servers:<br>    http: http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:yourport<br>    https: http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:yourport<br></code></pre></td></tr></table></figure><p>注意替换你的端口，各个配置项含义请自行百度</p><p>iv. cmd代理（仅限该终端）<br>如果你用的clash，可以点击这个terminal图标<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe2196b108.png"><br>直接选择打开配置好代理的cmd终端</p><p>或者新建终端键入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> http_proxy=http://127.0.0.1:yourport &amp; <span class="hljs-built_in">set</span> https_proxy=http://127.0.0.1:yourport<br></code></pre></td></tr></table></figure><ol start="6"><li>在步骤<code>5.</code>配置好代理的终端中将路径切换到stable diffusion根目录</li></ol><p>如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">e:<span class="hljs-comment">#你的，如d:</span><br><span class="hljs-built_in">cd</span> stable-diffusion-ui<br></code></pre></td></tr></table></figure><p>如图<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe23367fad.png"></p><ol start="7"><li>键入完整目录，注意用引号括住<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;E:\stable-diffusion-ui\Start Stable Diffusion UI.cmd&quot;</span><br></code></pre></td></tr></table></figure>（也可以拖动.cmd）到命令行中<br>回车</li></ol><p>等待安装即可</p><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><ol><li>如果安装报错失败，请完全删除<code>stable-diffusion-ui</code>文件夹及其内容，重新从步骤<code>2.</code>解压开始安装</li><li>安装后再次运行<code>.cmd</code>文件即可再次使用，注意每次运行都会自动检查更新，因此每次运行时需要按照上述步骤<code>6.</code>开始配置cmd代理，以保证各项模块正常检查更新。</li><li>如不需要更新，可以关闭系统代理core(即完全退出代理软件)，直接双击<code>.cmd</code>也可运行</li></ol>]]></content>
    
    
    <summary type="html">因为英语写作要介绍个专业技术，最近这个AI画图技术飞速增长，就打算写它。为了更好了解，于是在本地跑了一下。本篇介绍win安装踩坑</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="AI art" scheme="http://blog.1314171.xyz/tags/AI-art/"/>
    
    <category term="stable diffusion" scheme="http://blog.1314171.xyz/tags/stable-diffusion/"/>
    
    <category term="deep learning" scheme="http://blog.1314171.xyz/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>用仅ipv6vps自建图床并支持ipv4访问</title>
    <link href="http://blog.1314171.xyz/post/220904picture-server.html"/>
    <id>http://blog.1314171.xyz/post/220904picture-server.html</id>
    <published>2022-09-05T15:33:30.000Z</published>
    <updated>2022-10-19T11:44:27.277Z</updated>
    
    <content type="html"><![CDATA[<p>221019更新，图床已支持https且仅支持https</p><h1 id="换图床的原因"><a href="#换图床的原因" class="headerlink" title="换图床的原因"></a>换图床的原因</h1><p>之前sm.ms图床已经不太能用而且有审核，已经无故挂了我三张图片了</p><p>后来github图床的解决方案因为jsdelivr的cdn加速在国内被墙：</p><p><a href="https://luotianyi.vc/6295.html">致敬-被滥用的jsdelivr,我又何尝不是其中一员呢？</a></p><p>干脆直接换个较大硬盘的vps</p><p>简单搜索之后发现方案可行，基本上随便一搜就20欧10G千兆带宽</p><h1 id="选择主机商"><a href="#选择主机商" class="headerlink" title="选择主机商"></a>选择主机商</h1><p><del>舍友推荐了个便宜的主机商：</del></p><h2 id="221019更新：请考虑别的主机，该机型已无库存"><a href="#221019更新：请考虑别的主机，该机型已无库存" class="headerlink" title="221019更新：请考虑别的主机，该机型已无库存"></a>221019更新：请考虑别的主机，该机型已无库存</h2><p><a href="https://my.server-factory.com/">server-factory</a></p><p>仅ipv6主机仅需6欧，nat主机9欧一年，而且支持Alipay（支付宝）<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe03aafd19.jpg" alt="测速图片"></p><p>要什么自行车，冲他<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe0e22b95f.jpg" alt="购买这个就行"></p><p><del>买这个仅Ipv6就行</del>，解决ipv4访问用cf cdn套一层代理</p><p>确保用cf代理，小云朵打开即可</p><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>之前用脚本在vps上申请证书的时候不能套上述小云朵，否则会失败或者替cf申请证书……</p><p>这次尝试直接套小云朵嫖cf证书</p><h3 id="221001更新"><a href="#221001更新" class="headerlink" title="221001更新"></a>221001更新</h3><p><img src="https://pic.1314171.xyz/i/2022/10/19/634fdfd8c3390.png"></p><p>如果要加证书在获取token时就如下图所示<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fde242e29d.png"></p><p>申请cf证书请参考：<a href="https://65536.io/2020/03/607.html">博客</a></p><h1 id="选择图床"><a href="#选择图床" class="headerlink" title="选择图床"></a>选择图床</h1><p>大概有三个很好的选择，<a href="https://www.lsky.pro/">兰空图床</a>、<a href="https://github.com/helloxz/imgurl">imgurl</a>和<a href="https://chevereto.com/">chevereto</a></p><p>最后选择兰空的原因是：imgurl社区开源版本上次更新已经过去三年了，<a href="https://github.com/chevereto/vps">chevereto</a>令人望而生畏的英文文档(而且只有付费版了，还不便宜，以及，我以为兰空有中文文档很好搭建，官方宣传：半小时搭好，文档写的不好，但照着我这个教程10分钟ko)</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h3 id="主要参考资料"><a href="#主要参考资料" class="headerlink" title="主要参考资料"></a>主要参考资料</h3><p>非常感谢</p><ol><li><p><a href="https://www.zatp.com/post/lsky-pro-image-hosting/">搭建 Lsky Pro 兰空图床</a></p></li><li><p><a href="https://blog.csdn.net/Bacon_Fish/article/details/125681902">兰空图床搭建</a></p></li></ol><h2 id="为啥不用宝塔面板"><a href="#为啥不用宝塔面板" class="headerlink" title="为啥不用宝塔面板"></a>为啥不用宝塔面板</h2><p>毕竟1G的机子跑宝塔完全没问题</p><p>但</p><p><a href="https://zhuanlan.zhihu.com/p/196684686">宝塔面板爆重大漏洞，数据库无鉴权直接访问</a></p><p>在舍友的极力劝阻下我开始了我的苦闷的从0开始之旅</p><h2 id="没头苍蝇阶段"><a href="#没头苍蝇阶段" class="headerlink" title="没头苍蝇阶段"></a>没头苍蝇阶段</h2><p>所谓的半小时，我整了整整一天。</p><p>一开始按照中文文档搭建，几乎没任何指导，并且有nginx和php两大知识盲区，后来……</p><p>痛苦</p><p>直到我找到了上面引用的第2篇教程</p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>参阅<a href="https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/">官方文档</a>后</p><p>决定直接apt安装</p><p>以下均root用户命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update<br>apt upgrade<br>apt install nginx<br><span class="hljs-comment">#查询其工作状态</span><br>systemctl status nginx<br></code></pre></td></tr></table></figure><p>在浏览器内输入您的IP地址或域名并打开</p><p>显示：<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe15f4b80c.jpg"><br>说明Nginx已经正常工作</p><h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><p>根据官方的文档，要满足如下要求</p><pre><code class="hljs">PHP &gt;= 8.0.2BCMath PHP 扩展Ctype PHP 扩展DOM PHP 拓展Fileinfo PHP 扩展JSON PHP 扩展Mbstring PHP 扩展OpenSSL PHP 扩展PDO PHP 扩展Tokenizer PHP 扩展XML PHP 扩展Imagick 拓展exec、shell_exec 函数readlink、symlink 函数putenv、getenv 函数chmod、chown、fileperms 函数</code></pre><p>有些头大<br>最后整理出来的安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sSL https://packages.sury.org/php/README.txt | bash -x<br><br><span class="hljs-comment">#上述脚本内容为:</span><br><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-comment"># To add this repository please do:</span><br><br><span class="hljs-comment">#if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</span><br><span class="hljs-comment">#    SUDO=sudo</span><br><span class="hljs-comment">#fi</span><br><br><span class="hljs-comment">#$&#123;SUDO&#125; apt-get update</span><br><span class="hljs-comment">#$&#123;SUDO&#125; apt-get -y install apt-transport-https lsb-release ca-certificates curl</span><br><span class="hljs-comment">#$&#123;SUDO&#125; curl -sSLo /usr/share/keyrings/deb.sury.org-php.gpg https://packages.sury.org/php/apt.gpg</span><br><span class="hljs-comment">#$&#123;SUDO&#125; sh -c &#x27;echo &quot;deb [signed-by=/usr/share/keyrings/deb.sury.org-php.gpg] https://packages.sury.org/php/ $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/php.list&#x27;</span><br><span class="hljs-comment">#$&#123;SUDO&#125; apt-get update</span><br><br><span class="hljs-comment"># 这里安装8.1版本</span><br>apt install -y php8.1 php8.1-cli php8.1-common php8.1-fpm php8.1-xml php8.1-curl php8.1-mysql php8.1-sqlite3 php8.1-mbstring php8.1-gd php8.1-fileinfo php8.1-exif php8.1-bcmath php8.1-imagick php8.1-opcache php8.1-readline php8.1-dom php8.1-tokenizer<br><br>apt install libssl-dev openssl<br></code></pre></td></tr></table></figure><p>上述脚本将官方源添加到apt中，apt install完成了所有依赖的安装。</p><h2 id="配置PHP"><a href="#配置PHP" class="headerlink" title="配置PHP"></a>配置PHP</h2><p>打开php.ini，示例命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/php/8.1/fpm/php.ini<br><span class="hljs-comment">#注意路径中的8.1改成您安装的对应版本号</span><br></code></pre></td></tr></table></figure><p>在其中找到如下几点：</p><ol><li>找到<code>disable_functions</code>，若 “&#x3D;” 右侧存在<code>exec、shell_exec、readlink、symlink、putenv、getenv</code>函数，将其删除（默认状态下，等号右侧为空白）；</li><li>找到<code>memory_limit</code>，根据机器配置适当调大 “&#x3D;” 右侧最大内存大小（默认php128mb内存）；</li><li>找到<code>post_max_size</code>，适当调大 “&#x3D;” 右侧POST方法所能传输数据的最大大小（这是队列大小，调整为想上传最大单个文件大小乘上想一次性上传图片数）；</li><li>找到<code>upload_max_filesize</code>，适当调大 “&#x3D;” 右侧最大文件上传大小（这是单个文件上传大小）；</li><li><code>max_execution_time</code> 右侧为最大执行时间，默认为30秒，也就是说如果上传超过 30 秒，该队列就会停止</li><li>找到<code>open_basedir</code>，在其前面加上“;”（默认已添加）。</li></ol><p>重启php-fpm并检查工作状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart php8.1-fpm<br><span class="hljs-comment">#根据安装版本调整版本号</span><br>systemctl status php8.1-fpm<br><span class="hljs-comment">#根据安装版本调整版本号</span><br></code></pre></td></tr></table></figure><h2 id="安装兰空图床本体"><a href="#安装兰空图床本体" class="headerlink" title="安装兰空图床本体"></a>安装兰空图床本体</h2><ol><li>下载源码：<br>从<a href="https://github.com/lsky-org/lsky-pro/releases">release</a>下载最新安装包，放在你想安装的路径上</li></ol><p>这里以 <code>/home/www/lsky</code> 路径举例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#首先安装解压</span><br>apt install unzip<br><span class="hljs-comment"># 下一句注意修改版本号</span><br>unzip -d /home/www/lsky/ lsky-pro-2.1.zip<br><span class="hljs-comment">#将安装文件夹及其子文件夹权限设为755，所有者改为www-data：</span><br><span class="hljs-built_in">chmod</span> -R 755 /home/www/lsky<br><span class="hljs-built_in">chown</span> -R www-data /home/www/lsky<br></code></pre></td></tr></table></figure><h2 id="配置Nginx和PHP协同"><a href="#配置Nginx和PHP协同" class="headerlink" title="配置Nginx和PHP协同"></a>配置Nginx和PHP协同</h2><p>打开default网站配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/sites-available/default<br></code></pre></td></tr></table></figure><p>将内容复制到<br><code>/etc/nginx/cinf.d</code>下新建一文件命名为：<code>lsky.conf</code></p><p>修改其中<br>0. 去除掉80端口后的 default……</p><ol><li>转到server块，找到root项，将其后的路径指向Lsky Pro安装路径的public文件夹；</li><li>找到index项，在其后添加index.php；</li><li>找到server_name项，将其后的内容改为您的IP或域名；</li><li>转到location &#x2F; 块，找到try_files项，将 &#x3D;404 改为 &#x2F;index.php?$query_string（即设置伪静态）；</li><li>转到location ~ .php$块，去除行前#号，选择With php-fpm方法，将路径中的PHP版本修改为对应安装版本。修改完的效果应如图所示：</li></ol><p><img src="https://pic.1314171.xyz/i/2022/10/19/634fe138d9bc5.png"></p><p>执行以下命令打开Nginx配置文档：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure><p>在http块中添加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json">client_max_body_size <span class="hljs-number">25</span>m;<br>#<span class="hljs-number">25</span>m为Nginx限制的一次性上传文件最大大小<br>#大小可视情况调整<br></code></pre></td></tr></table></figure><p>检查配置有无错误，重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -t<br><span class="hljs-comment">#若无错误</span><br>systemctl restart nginx<br></code></pre></td></tr></table></figure><h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><p>尝试安装MySQL</p><p>但官方源始终无法curl到，我也懒得整了</p><p>就用SQLite，简单不用安装</p><h2 id="初始化图床"><a href="#初始化图床" class="headerlink" title="初始化图床"></a>初始化图床</h2><p>配置好域名以后，访问站点首页，程序会自动跳转至安装页面，环境检测通过以后即可通过引导进行安装。</p><p><code>数据库名称/路径</code>留空即可</p><h2 id="接入api和picgo协同"><a href="#接入api和picgo协同" class="headerlink" title="接入api和picgo协同"></a>接入api和picgo协同</h2><p><a href="https://www.shejibiji.com/archives/8411">参考这个博客设置请求</a></p><p>但是捏，套了cdn的地址没法在线post,解了cdn之后才发现并不能post ipv6地址……纯ipv6的痛苦</p><p>想了想，发现能本地post，命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl localhost:80/api/v1/tokens -X POST -d <span class="hljs-string">&#x27;email=example@example.com&amp;password=yourpass&#x27;</span><br></code></pre></td></tr></table></figure><p>可以正常返回<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe105c8f1c.png" alt="成功！这就是我用picgo上传的图片"></p><h2 id="发现能用webdav等存储"><a href="#发现能用webdav等存储" class="headerlink" title="发现能用webdav等存储"></a>发现能用webdav等存储</h2><p>还未尝试，TODO:</p><h2 id="其他问题，http图床链接在vscode中无法加载预览解决"><a href="#其他问题，http图床链接在vscode中无法加载预览解决" class="headerlink" title="其他问题，http图床链接在vscode中无法加载预览解决"></a>其他问题，http图床链接在vscode中无法加载预览解决</h2><p>参看如下两篇就明白了</p><p><a href="https://blog.csdn.net/wejack/article/details/122309967?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-5-122309967-blog-105007956.pc_relevant_aa_2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-5-122309967-blog-105007956.pc_relevant_aa_2&utm_relevant_index=6">markdown预览</a></p><p><a href="https://blog.csdn.net/qq_41821678/article/details/105007956">加载http链接</a></p><blockquote><p>本篇博客所有图片均上传在新部署的图床上</p></blockquote><blockquote><p>目前图床关闭注册以及游客上传功能，没有公开计划，如有需要请联系我</p></blockquote><h1 id="其他友情链接"><a href="#其他友情链接" class="headerlink" title="其他友情链接"></a>其他友情链接</h1><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p><a href="https://www.myfreax.com/how-to-install-nginx-on-debian-10/">教程1</a></p><p><a href="https://www.myfreax.com/nginx-commands-you-should-know/">教程2</a></p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p><a href="https://blog.csdn.net/Time888/article/details/113935083">PHP教程</a></p>]]></content>
    
    
    <summary type="html">之前图床都不好用了，为了可持续发展，决定自建图床</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vscode" scheme="http://blog.1314171.xyz/tags/vscode/"/>
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
    <category term="vps" scheme="http://blog.1314171.xyz/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>尝试新的图床解决方案</title>
    <link href="http://blog.1314171.xyz/post/220903picture-server.html"/>
    <id>http://blog.1314171.xyz/post/220903picture-server.html</id>
    <published>2022-09-03T16:06:11.000Z</published>
    <updated>2022-09-03T16:40:10.659Z</updated>
    
    <content type="html"><![CDATA[<h1 id="再前言"><a href="#再前言" class="headerlink" title="再前言"></a>再前言</h1><p>感觉这又是一个暂时性的解决办法，jsdelivr永远被墙！</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我之前的图床解决方案</p><li><a href="/post/220508picture-server"  tags="">我的博客图床</li><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="首先跟着这个博客来"><a href="#首先跟着这个博客来" class="headerlink" title="首先跟着这个博客来"></a>首先跟着这个博客来</h2><p>其中有四点要注意</p><ol><li>可以不用勾选readme</li><li>token 还要选上user(我也不知道为啥而且我也没测不选能不能用，另一个教程选了，我怕麻烦也选了)</li><li>token设置在github的settings -&gt; developer settings里</li><li>特别注意cdn.jsdelivr.net国内被dns污染了，所以要把它换成gcore.jsdelivr.net</li></ol><p><a href="https://zhuanlan.zhihu.com/p/489236769">教程</a></p><h2 id="其次，picgoyyds"><a href="#其次，picgoyyds" class="headerlink" title="其次，picgoyyds"></a>其次，picgoyyds</h2><p>本来想试试换用sharex截图上传，但网上<a href="https://nokiasonic.github.io/2021/09/24/%E3%80%90%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E3%80%91ShareX%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/">没有成型的用github图床的解决办法</a></p><p>于是，拥抱PicGo，bingo！</p><h1 id="效果测试："><a href="#效果测试：" class="headerlink" title="效果测试："></a>效果测试：</h1><p><img src="https://gcore.jsdelivr.net/gh/TT2TER/image1st@main/img/20220904000123.png"></p><p>图片内容为<code># 效果测试：</code>几个字</p>]]></content>
    
    
    <summary type="html">sm.ms经常寄，尝试github+jsdelivr</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>放弃刚用两天就被墙掉的vercel</title>
    <link href="http://blog.1314171.xyz/post/220903vercelTOnetlify.html"/>
    <id>http://blog.1314171.xyz/post/220903vercelTOnetlify.html</id>
    <published>2022-09-03T14:51:45.000Z</published>
    <updated>2022-09-04T14:15:51.887Z</updated>
    
    <content type="html"><![CDATA[<h1 id="找了新的服务商："><a href="#找了新的服务商：" class="headerlink" title="找了新的服务商："></a>找了新的服务商：</h1><p><a href="https://app.netlify.com/">netlify</a></p><p>看起来这个是以team为基本组织架构的服务商</p><p>免费方案可以部署好几个网站，轻度使用够了，大不了再注册个号。</p><p>他免费有些限制，比方不能并发（同时）构建网页（不影响同时托管），构建总时长有限制（意思是不能运行很复杂的，运行很多次，300Min限制）同时网页访问数据在100G每月，正常博客wiki等完全没问题。</p><h1 id="注意的细节"><a href="#注意的细节" class="headerlink" title="注意的细节"></a>注意的细节</h1><p>本来想插图片的但，sm.ms好像多少出了点问题，TODO:速速备份。</p><p>描述一下，注意网页的根目录和build command（一般command默认即可，根目录是生成网页的所有资源的根目录）</p><p>好了好了图床换了<br>详见：</p><li><a href="/post/220903picture-server">尝试新的图床解决方案</li><p>补个截图：<br><img src="https://gcore.jsdelivr.net/gh/TT2TER/image1st@main/img/20220904001131.png"></p><h1 id="把原来的域名改绑定"><a href="#把原来的域名改绑定" class="headerlink" title="把原来的域名改绑定"></a>把原来的域名改绑定</h1><p>原来vercel绑定的改为<code>yournamebackup</code></p><p>域名同样有https,但比vercel慢点，等等就行了</p><p>直接在域名解析CNAME到你的<code>yourproject.netlify.app</code>就行</p><h1 id="补一手很漂亮的部署日志"><a href="#补一手很漂亮的部署日志" class="headerlink" title="补一手很漂亮的部署日志"></a>补一手很漂亮的部署日志</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br></pre></td><td class="code"><pre><code class="hljs log">9:22:08 PM: Build ready to start<br>9:22:12 PM: build-image version: d7b3dbfb0846505993c9a131894d1858074c90b4 (focal)<br>9:22:12 PM: build-image tag: v4.10.1<br>9:22:12 PM: buildbot version: 67e75f1ba713a8213d4b5a8ccf9708af751e2390<br>9:22:12 PM: Fetching cached dependencies<br>9:22:12 PM: Failed to fetch cache, continuing with build<br>9:22:12 PM: Starting to prepare the repo for build<br>9:22:12 PM: No cached dependencies found. Cloning fresh repo<br>9:22:12 PM: git clone https://github.com/TT2TER/TT2TER.Github.io<br>9:22:14 PM: Preparing Git Reference refs/heads/source<br>9:22:14 PM: Parsing package.json dependencies<br>9:22:15 PM: Starting build script<br>9:22:15 PM: Installing dependencies<br>9:22:15 PM: Python version set to 2.7<br>9:22:15 PM: Downloading and installing node v16.17.0...<br>9:22:15 PM: Downloading https://nodejs.org/dist/v16.17.0/node-v16.17.0-linux-x64.tar.xz...<br>9:22:16 PM: Computing checksum with sha256sum<br>9:22:16 PM: Checksums matched!<br>9:22:19 PM: Now using node v16.17.0 (npm v8.15.0)<br>9:22:20 PM: Started restoring cached build plugins<br>9:22:20 PM: Finished restoring cached build plugins<br>9:22:20 PM: Attempting ruby version 2.7.2, read from environment<br>9:22:20 PM: Using ruby version 2.7.2<br>9:22:21 PM: Using PHP version 8.0<br>9:22:21 PM: No npm workspaces detected<br>9:22:21 PM: Started restoring cached node modules<br>9:22:21 PM: Finished restoring cached node modules<br>9:22:21 PM: Installing NPM modules using NPM version 8.15.0<br>9:22:21 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:21 PM: npm WARN config location in the cache, and they are managed by<br>9:22:21 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:21 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:21 PM: npm WARN config location in the cache, and they are managed by<br>9:22:21 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:23 PM: npm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated<br>9:22:23 PM: npm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated<br>9:22:23 PM: npm WARN deprecated source-map-resolve@0.6.0: See https://github.com/lydell/source-map-resolve#deprecated<br>9:22:23 PM: npm WARN deprecated nvm@0.0.4: This is NOT the correct nvm. Visit https://nvm.sh and use the curl command to install it.<br>9:22:24 PM: npm WARN deprecated hexo-bunyan@1.0.0: Please see https://github.com/hexojs/hexo-bunyan/issues/17<br>9:22:24 PM: npm WARN deprecated chokidar@2.1.8: Chokidar 2 does not receive security updates since 2019. Upgrade to chokidar 3 with 15x fewer dependencies<br>9:22:24 PM: npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated<br>9:22:24 PM: npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated<br>9:22:25 PM: npm WARN deprecated highlight.js@9.18.5: Support has ended for 9.x series. Upgrade to @latest<br>9:22:25 PM: npm WARN deprecated core-js@1.2.7: core-js@&lt;3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.<br>9:22:27 PM: added 535 packages, and audited 536 packages in 6s<br>9:22:27 PM: 25 packages are looking for funding<br>9:22:27 PM:   run `npm fund` for details<br>9:22:27 PM: 22 vulnerabilities (2 low, 6 moderate, 11 high, 3 critical)<br>9:22:27 PM: To address issues that do not require attention, run:<br>9:22:27 PM:   npm audit fix<br>9:22:27 PM: To address all issues possible (including breaking changes), run:<br>9:22:27 PM:   npm audit fix --force<br>9:22:27 PM: Some issues need review, and may require choosing<br>9:22:27 PM: a different dependency.<br>9:22:27 PM: Run `npm audit` for details.<br>9:22:27 PM: NPM modules installed<br>9:22:28 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:28 PM: npm WARN config location in the cache, and they are managed by<br>9:22:28 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:28 PM: Started restoring cached go cache<br>9:22:28 PM: Finished restoring cached go cache<br>9:22:28 PM: Installing Go version 1.17 (requested 1.17)<br>9:22:34 PM: unset GOOS;<br>9:22:34 PM: unset GOARCH;<br>9:22:34 PM: export GOROOT=&#x27;/opt/buildhome/.gimme/versions/go1.17.linux.amd64&#x27;;<br>9:22:34 PM: export PATH=&quot;/opt/buildhome/.gimme/versions/go1.17.linux.amd64/bin:$&#123;PATH&#125;&quot;;<br>9:22:34 PM: go version &gt;&amp;2;<br>9:22:34 PM: export GIMME_ENV=&quot;/opt/buildhome/.gimme/env/go1.17.linux.amd64.env&quot;<br>9:22:34 PM: go version go1.17 linux/amd64<br>9:22:34 PM: Installing missing commands<br>9:22:34 PM: Verify run directory<br>9:22:35 PM: ​<br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM:   Netlify Build                                                 <br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Version<br>9:22:35 PM:   @netlify/build 27.16.1<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Flags<br>9:22:35 PM:   baseRelDir: true<br>9:22:35 PM:   buildId: 63135500d4077517d5f93a18<br>9:22:35 PM:   deployId: 63135500d4077517d5f93a1a<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Current directory<br>9:22:35 PM:   /opt/build/repo<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Config file<br>9:22:35 PM:   No config file was defined: using default values.<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Context<br>9:22:35 PM:   production<br>9:22:35 PM: ​<br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM:   1. Build command from Netlify app                             <br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM: ​<br>9:22:35 PM: $ npm run build<br>9:22:35 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:35 PM: npm WARN config location in the cache, and they are managed by<br>9:22:35 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:35 PM: &gt; hexo-site@0.0.0 build<br>9:22:35 PM: &gt; hexo generate<br>9:22:35 PM: INFO  Validating config<br>9:22:35 PM: INFO  Start processing<br>9:22:36 PM: ERROR &#123;<br>9:22:36 PM:   err: ValidationError: `null` is not a string!<br>9:22:36 PM:       at new WarehouseError (/opt/build/repo/node_modules/warehouse/lib/error.js:14:11)<br>9:22:36 PM:       at new ValidationError (/opt/build/repo/node_modules/warehouse/lib/error/validation.js:5:1)<br>9:22:36 PM:       at SchemaTypeString.validate (/opt/build/repo/node_modules/warehouse/lib/types/string.js:36:13)<br>9:22:36 PM:       at Array.&lt;anonymous&gt; (/opt/build/repo/node_modules/warehouse/lib/schema.js:510:27)<br>9:22:36 PM:       at Schema._applySetters (/opt/build/repo/node_modules/warehouse/lib/schema.js:640:15)<br>9:22:36 PM:       at _Model._insertOne (/opt/build/repo/node_modules/warehouse/lib/model.js:158:12)<br>9:22:36 PM:       at /opt/build/repo/node_modules/warehouse/lib/model.js:179:63<br>9:22:36 PM:       at tryCatcher (/opt/build/repo/node_modules/bluebird/js/release/util.js:16:23)<br>9:22:36 PM:       at /opt/build/repo/node_modules/bluebird/js/release/using.js:185:26<br>9:22:36 PM:       at tryCatcher (/opt/build/repo/node_modules/bluebird/js/release/util.js:16:23)<br>9:22:36 PM:       at Promise._settlePromiseFromHandler (/opt/build/repo/node_modules/bluebird/js/release/promise.js:547:31)<br>9:22:36 PM:       at Promise._settlePromise (/opt/build/repo/node_modules/bluebird/js/release/promise.js:604:18)<br>9:22:36 PM:       at Promise._settlePromise0 (/opt/build/repo/node_modules/bluebird/js/release/promise.js:649:10)<br>9:22:36 PM:       at Promise._settlePromises (/opt/build/repo/node_modules/bluebird/js/release/promise.js:729:18)<br>9:22:36 PM:       at Promise._fulfill (/opt/build/repo/node_modules/bluebird/js/release/promise.js:673:18)<br>9:22:36 PM:       at PromiseArray._resolve (/opt/build/repo/node_modules/bluebird/js/release/promise_array.js:127:19) &#123;<br>9:22:36 PM:     code: undefined<br>9:22:36 PM:   &#125;<br>9:22:36 PM: &#125; Process failed: %s _posts/220705bashshell.md<br>9:22:37 PM: INFO <br>9:22:37 PM: ------------------------------------------------<br>9:22:37 PM: |                                              |<br>9:22:37 PM: |     ________  __            _        __      |<br>9:22:37 PM: |    |_   __  |[  |          (_)      |  ]     |<br>9:22:37 PM: |      | |_ \_| | | __   _   __   .--.| |      |<br>9:22:37 PM: |      |  _|    | |[  | | | [  |/ /&#x27;`\&#x27; |      ||     _| |_     | | | \_/ |, | || \__/  |      |<br>9:22:37 PM: |    |_____|   [___]&#x27;.__.&#x27;_/[___]&#x27;.__.;__]     ||                                              |<br>9:22:37 PM: |             感谢使用 Fluid 主题 !            |<br>9:22:37 PM: |    文档: https://hexo.fluid-dev.com/docs/    |<br>9:22:37 PM: |                                              |<br>9:22:37 PM: ------------------------------------------------<br>9:22:37 PM: INFO  Files loaded in 1.38 s<br>9:22:37 PM: INFO  Generated: css/custom.css<br>9:22:37 PM: INFO  Generated: js/duration.js<br>9:22:37 PM: INFO  Generated: googlefae3894a3fd4fa2c.html<br>9:22:37 PM: INFO  Generated: baidusitemap.xml<br>9:22:37 PM: INFO  Generated: atom.xml<br>9:22:37 PM: INFO  Generated: sitemap.xml<br>9:22:37 PM: INFO  Generated: sitemap.txt<br>9:22:37 PM: INFO  Generated: local-search.xml<br>9:22:37 PM: INFO  Generated: about/index.html<br>9:22:37 PM: INFO  Generated: archives/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/03/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/04/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/05/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/07/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/08/index.html<br>9:22:37 PM: INFO  Generated: links/index.html<br>9:22:37 PM: INFO  Generated: post/220823alist.html<br>9:22:37 PM: INFO  Generated: tags/index.html<br>9:22:37 PM: INFO  Generated: 404.html<br>9:22:37 PM: INFO  Generated: categories/index.html<br>9:22:37 PM: INFO  Generated: post/220818blogtovercel.html<br>9:22:37 PM: INFO  Generated: post/220805sitemap.html<br>9:22:37 PM: INFO  Generated: post/220823proxytuic.html<br>9:22:37 PM: INFO  Generated: post/220809Docker-rss.html<br>9:22:37 PM: INFO  Generated: post/220819docsifyDeploy.html<br>9:22:37 PM: INFO  Generated: post/220715switchhost.html<br>9:22:37 PM: INFO  Generated: post/220807photosync.html<br>9:22:37 PM: INFO  Generated: post/220716visual-3.html<br>9:22:37 PM: INFO  Generated: post/220714NASandZSH.html<br>9:22:37 PM: INFO  Generated: post/220714hlink.html<br>9:22:37 PM: INFO  Generated: post/220709visual-2.html<br>9:22:37 PM: INFO  Generated: post/220706Jellyfin.html<br>9:22:37 PM: INFO  Generated: post/220705setting-qb-tr-IYUUplus.html<br>9:22:37 PM: INFO  Generated: post/220705tcp6-tcp4.html<br>9:22:37 PM: INFO  Generated: post/220518install.html<br>9:22:37 PM: INFO  Generated: post/220703nassystemfix.html<br>9:22:37 PM: INFO  Generated: post/220703rtmp.html<br>9:22:37 PM: INFO  Generated: post/220629networkProblem.html<br>9:22:37 PM: INFO  Generated: post/220531fixcdn.html<br>9:22:37 PM: INFO  Generated: post/220518nasbuy.html<br>9:22:37 PM: INFO  Generated: post/220517PREinstallNAS.html<br>9:22:37 PM: INFO  Generated: post/220518nasPlan.html<br>9:22:37 PM: INFO  Generated: post/220511ssh-connect-to-ssh-github.html<br>9:22:37 PM: INFO  Generated: post/220511sonic2.html<br>9:22:37 PM: INFO  Generated: post/TheWayToNAS.html<br>9:22:37 PM: INFO  Generated: post/220507get-news-efficiently.html<br>9:22:37 PM: INFO  Generated: post/220506feed-me.html<br>9:22:37 PM: INFO  Generated: post/220508picture-server.html<br>9:22:37 PM: INFO  Generated: post/220513DefensivePessimism.html<br>9:22:37 PM: INFO  Generated: post/0524UPDLinks.html<br>9:22:37 PM: INFO  Generated: post/220509freeipv6vps.html<br>9:22:37 PM: INFO  Generated: post/220417apprcn.html<br>9:22:37 PM: INFO  Generated: post/220426how-to-search-English-words.html<br>9:22:37 PM: INFO  Generated: post/0517UPDAphorisms.html<br>9:22:37 PM: INFO  Generated: post/220330a-network-problem-solve.html<br>9:22:37 PM: INFO  Generated: post/220327About-Learning-with-a-Video.html<br>9:22:37 PM: INFO  Generated: post/220326Reason-to-Learn-English.html<br>9:22:37 PM: INFO  Generated: post/220326hello-myblog.html<br>9:22:37 PM: INFO  Generated: post/TODOlist.html<br>9:22:37 PM: INFO  Generated: index.html<br>9:22:37 PM: INFO  Generated: post/220325codewithvscode.html<br>9:22:37 PM: INFO  Generated: img/avatar.png<br>9:22:37 PM: INFO  Generated: xml/local-search.xml<br>9:22:37 PM: INFO  Generated: post/220324firstblog.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/2/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/05/page/2/index.html<br>9:22:37 PM: INFO  Generated: archives/page/2/index.html<br>9:22:37 PM: INFO  Generated: page/5/index.html<br>9:22:37 PM: INFO  Generated: categories/学习过程/英语学习/index.html<br>9:22:37 PM: INFO  Generated: img/loading.gif<br>9:22:37 PM: INFO  Generated: img/fluid.png<br>9:22:37 PM: INFO  Generated: img/police_beian.png<br>9:22:37 PM: INFO  Generated: img/Ficon.png<br>9:22:37 PM: INFO  Generated: img/Wechat.jpg<br>9:22:37 PM: INFO  Generated: archives/page/4/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/4/index.html<br>9:22:37 PM: INFO  Generated: archives/page/5/index.html<br>9:22:37 PM: INFO  Generated: categories/share/index.html<br>9:22:37 PM: INFO  Generated: archives/page/3/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/3/index.html<br>9:22:37 PM: INFO  Generated: categories/idea/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/5/index.html<br>9:22:37 PM: INFO  Generated: categories/Problems/index.html<br>9:22:37 PM: INFO  Generated: tags/network/index.html<br>9:22:37 PM: INFO  Generated: categories/学习教程/index.html<br>9:22:37 PM: INFO  Generated: categories/Diary/index.html<br>9:22:37 PM: INFO  Generated: tags/proxy/index.html<br>9:22:37 PM: INFO  Generated: tags/share/index.html<br>9:22:37 PM: INFO  Generated: tags/Test/index.html<br>9:22:37 PM: INFO  Generated: tags/vscode/index.html<br>9:22:37 PM: INFO  Generated: tags/github/index.html<br>9:22:37 PM: INFO  Generated: tags/English/index.html<br>9:22:37 PM: INFO  Generated: tags/Geography/index.html<br>9:22:37 PM: INFO  Generated: tags/Hexo/index.html<br>9:22:37 PM: INFO  Generated: tags/image/index.html<br>9:22:37 PM: INFO  Generated: tags/F1/index.html<br>9:22:37 PM: INFO  Generated: tags/video/index.html<br>9:22:37 PM: INFO  Generated: tags/font/index.html<br>9:22:37 PM: INFO  Generated: tags/ipv6/index.html<br>9:22:37 PM: INFO  Generated: tags/rss/index.html<br>9:22:37 PM: INFO  Generated: tags/information/index.html<br>9:22:37 PM: INFO  Generated: tags/blog/index.html<br>9:22:37 PM: INFO  Generated: tags/vps/index.html<br>9:22:37 PM: INFO  Generated: tags/Trojan/index.html<br>9:22:37 PM: INFO  Generated: tags/ilm/index.html<br>9:22:37 PM: INFO  Generated: tags/git/index.html<br>9:22:37 PM: INFO  Generated: tags/strategy/index.html<br>9:22:37 PM: INFO  Generated: tags/docker/index.html<br>9:22:37 PM: INFO  Generated: tags/ssh/index.html<br>9:22:37 PM: INFO  Generated: tags/pt/index.html<br>9:22:37 PM: INFO  Generated: tags/film/index.html<br>9:22:37 PM: INFO  Generated: tags/portainer/index.html<br>9:22:37 PM: INFO  Generated: tags/计算机视觉/index.html<br>9:22:37 PM: INFO  Generated: tags/shell/index.html<br>9:22:37 PM: INFO  Generated: tags/docsify/index.html<br>9:22:37 PM: INFO  Generated: tags/host/index.html<br>9:22:37 PM: INFO  Generated: tags/alist/index.html<br>9:22:37 PM: INFO  Generated: tags/tuic/index.html<br>9:22:37 PM: INFO  Generated: page/2/index.html<br>9:22:37 PM: INFO  Generated: tags/vercel/index.html<br>9:22:37 PM: INFO  Generated: page/3/index.html<br>9:22:37 PM: INFO  Generated: tags/HiHysteria/index.html<br>9:22:37 PM: INFO  Generated: tags/list/index.html<br>9:22:37 PM: INFO  Generated: page/4/index.html<br>9:22:37 PM: INFO  Generated: categories/教程/index.html<br>9:22:37 PM: INFO  Generated: categories/学习过程/index.html<br>9:22:37 PM: INFO  Generated: tags/nas/index.html<br>9:22:37 PM: INFO  Generated: categories/教程/page/2/index.html<br>9:22:37 PM: INFO  Generated: tags/nas/page/2/index.html<br>9:22:37 PM: INFO  Generated: css/highlight-dark.css<br>9:22:37 PM: INFO  Generated: css/gitalk.css<br>9:22:37 PM: INFO  Generated: js/boot.js<br>9:22:37 PM: INFO  Generated: js/color-schema.js<br>9:22:37 PM: INFO  Generated: css/highlight.css<br>9:22:37 PM: INFO  Generated: js/img-lazyload.js<br>9:22:37 PM: INFO  Generated: js/leancloud.js<br>9:22:37 PM: INFO  Generated: js/local-search.js<br>9:22:37 PM: INFO  Generated: js/plugins.js<br>9:22:37 PM: INFO  Generated: js/events.js<br>9:22:37 PM: INFO  Generated: js/utils.js<br>9:22:37 PM: INFO  Generated: css/main.css<br>9:22:37 PM: INFO  Generated: img/default.png<br>9:22:37 PM: INFO  Generated: img/Being-grey.png<br>9:22:37 PM: INFO  Generated: img/Beijing.png<br>9:22:37 PM: INFO  Generated: css/sarasa-mono-sc-regular.ttf<br>9:22:37 PM: INFO  146 files generated in 626 ms<br>9:22:37 PM: ​<br>9:22:37 PM: (build.command completed in 2.7s)<br>9:22:37 PM: ​<br>9:22:37 PM: ────────────────────────────────────────────────────────────────<br>9:22:37 PM:   2. Deploy site                                                <br>9:22:37 PM: ────────────────────────────────────────────────────────────────<br>9:22:37 PM: ​<br>9:22:37 PM: Starting to deploy site from &#x27;public&#x27;<br>9:22:37 PM: Creating deploy tree <br>9:22:37 PM: Creating deploy upload records<br>9:22:38 PM: 129 new files to upload<br>9:22:38 PM: 0 new functions to upload<br>9:22:38 PM: 0% complete<br>9:22:38 PM: 5% complete<br>9:22:38 PM: 10% complete<br>9:22:38 PM: 15% complete<br>9:22:38 PM: 20% complete<br>9:22:38 PM: 25% complete<br>9:22:38 PM: 30% complete<br>9:22:38 PM: 35% complete<br>9:22:39 PM: 40% complete<br>9:22:39 PM: 45% complete<br>9:22:39 PM: 50% complete<br>9:22:39 PM: 55% complete<br>9:22:39 PM: 60% complete<br>9:22:39 PM: 65% complete<br>9:22:39 PM: 70% complete<br>9:22:39 PM: 75% complete<br>9:22:39 PM: 80% complete<br>9:22:39 PM: 85% complete<br>9:22:39 PM: 90% complete<br>9:22:39 PM: 95% complete<br>9:22:40 PM: 100% complete<br>9:22:40 PM: Site deploy was successfully initiated<br>9:22:40 PM: ​<br>9:22:40 PM: (Deploy site completed in 2.1s)<br>9:22:40 PM: ​<br>9:22:40 PM: ────────────────────────────────────────────────────────────────<br>9:22:40 PM:   Netlify Build Complete                                        <br>9:22:40 PM: ────────────────────────────────────────────────────────────────<br>9:22:40 PM: ​<br>9:22:40 PM: (Netlify Build completed in 4.9s)<br>9:22:40 PM: Caching artifacts<br>9:22:40 PM: Started saving node modules<br>9:22:40 PM: Finished saving node modules<br>9:22:40 PM: Started saving build plugins<br>9:22:40 PM: Finished saving build plugins<br>9:22:40 PM: Started saving pip cache<br>9:22:40 PM: Finished saving pip cache<br>9:22:40 PM: Started saving emacs cask dependencies<br>9:22:40 PM: Finished saving emacs cask dependencies<br>9:22:40 PM: Started saving maven dependencies<br>9:22:40 PM: Finished saving maven dependencies<br>9:22:40 PM: Started saving boot dependencies<br>9:22:40 PM: Starting post processing<br>9:22:40 PM: Finished saving boot dependencies<br>9:22:40 PM: Started saving rust rustup cache<br>9:22:40 PM: Finished saving rust rustup cache<br>9:22:40 PM: Started saving go dependencies<br>9:22:40 PM: Finished saving go dependencies<br>9:22:40 PM: Post processing - HTML<br>9:22:41 PM: Build script success<br>9:22:43 PM: Uploading Cache of size 152.9MB<br>9:22:45 PM: Finished processing build request in 32.554939097s<br>9:22:46 PM: Post processing - header rules<br>9:22:46 PM: Post processing - redirect rules<br>9:22:46 PM: Post processing done<br>9:22:49 PM: Site is live ✨<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">用vercel没几天后dns就被污染了，换！</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
    <category term="vercel" scheme="http://blog.1314171.xyz/tags/vercel/"/>
    
    <category term="netlify" scheme="http://blog.1314171.xyz/tags/netlify/"/>
    
  </entry>
  
  <entry>
    <title>搭建网盘管理界面</title>
    <link href="http://blog.1314171.xyz/post/220823alist.html"/>
    <id>http://blog.1314171.xyz/post/220823alist.html</id>
    <published>2022-08-24T12:08:05.000Z</published>
    <updated>2022-08-24T12:16:49.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="https://alist-doc.nn.ci/docs/intro">alist官方文档</a></p><h1 id="安装，根据官方文档教程安装即可"><a href="#安装，根据官方文档教程安装即可" class="headerlink" title="安装，根据官方文档教程安装即可"></a>安装，根据官方文档教程安装即可</h1><p>备份我的docker命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d --restart=always -v /share/Docker/alist:/opt/alist/data -p 5244:5244 --name=&quot;alist&quot; xhofe/alist:latest<br></code></pre></td></tr></table></figure><p>没有什么坑~</p><p><a href="http://v6.1314171.xyz:5008/">我的alist站点链接</a></p>]]></content>
    
    
    <summary type="html">利用alist搭建一个网盘管理界面方便分享网盘资源，高效利用网盘空间</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="nas" scheme="http://blog.1314171.xyz/tags/nas/"/>
    
    <category term="docker" scheme="http://blog.1314171.xyz/tags/docker/"/>
    
    <category term="alist" scheme="http://blog.1314171.xyz/tags/alist/"/>
    
  </entry>
  
  <entry>
    <title>再识proxy--tuic协议</title>
    <link href="http://blog.1314171.xyz/post/220823proxytuic.html"/>
    <id>http://blog.1314171.xyz/post/220823proxytuic.html</id>
    <published>2022-08-22T17:27:23.000Z</published>
    <updated>2022-08-22T17:47:03.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tuic！tuic！"><a href="#tuic！tuic！" class="headerlink" title="tuic！tuic！"></a>tuic！tuic！</h1><p>因为此前我尝试用香港的可怜的256mb内存的vps跑docker，导致香港的服务器崩溃，我一直放着没有管他。</p><p>今天有时间重启维护它，干脆重装一下系统。想到煎包之前又体验了个新的协议tuic，我便询问它和hyhi的优劣来，他说：</p><blockquote><p>延迟更低，而且支持0-RTT</p></blockquote><p>我听的云里雾里，在他的建议下我便开始了我的尝试</p><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>本文档为本人学习笔记，仅供学习使用，请勿用作违法用途。请任何看到本文档的组织或个人在30秒内立即停止使用本文档提及的技术做违反当地法律的内容，请勿将文档及相关链接发至百度贴吧等公开论坛。</p><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ul><li><a href="https://github.com/EAimTY/tuic">tuic的github仓库</a></li><li><a href="https://lala.im/8424.html">我参考的教程:内容已有些过时</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><blockquote><p>基本按照上面略有过时的教程来</p></blockquote><p>1.下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt -y update<br><span class="hljs-comment"># 这个-y是用来免去输入y确认的参数</span><br>apt -y install wget certbot<br><br><span class="hljs-built_in">mkdir</span> /opt/tuic &amp;&amp; <span class="hljs-built_in">cd</span> /opt/tuic<br><br>wget https://github.com/EAimTY/tuic/releases/download/0.8.5/tuic-server-0.8.5-x86_64-linux-gnu<br><span class="hljs-built_in">chmod</span> +x tuic-server-0.8.5-x86_64-linux-gnu<br><br><span class="hljs-comment"># 注意这里下载的时候请下载对应（0.8.5）的最新版本，</span><br><span class="hljs-comment"># 见https://github.com/EAimTY/tuic/releases/ 注释：马火星</span><br></code></pre></td></tr></table></figure><blockquote><p>第一遍我没有下载最新版本，下次看别的教程要注意，我也会在代码中提醒后人</p></blockquote><p>2.新建config.json(服务端配置)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim config.json<br></code></pre></td></tr></table></figure><p>填入：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;token&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;example&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;certificate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/opt/tuic/fullchain.pem&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;private_key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/opt/tuic/privkey.pem&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;congestion_controller&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bbr&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;h3&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>若使用ipv6请将 <code>0.0.0.0</code> 改为 <code>::</code> (代表任意ipv6地址)<a href="https://github.com/EAimTY/tuic#how-can-i-listen-both-ipv4-and-ipv6-on-tuic-server--tuic-clients-socks5-server">参考tuic文档</a><br><img src="https://s2.loli.net/2022/08/23/MK2vbhkqZdj4zEs.png"></p><blockquote><p>这个坑是煎包之前踩过的，但他开始没告诉我，信誓旦旦的说这里有个小坑，于是我踩进去了，在走了第一遍流程之后才知道</p></blockquote><p>3.新建systemed配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /lib/systemd/system/tuic.service<br></code></pre></td></tr></table></figure><p>写入配置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Delicately-TUICed high-performance proxy built <span class="hljs-literal">on</span> top of the QUIC protocol<br><span class="hljs-attr">Documentation</span>=https://github.com/EAimTY/tuic<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">User</span>=root<br><span class="hljs-attr">WorkingDirectory</span>=/opt/tuic<br><span class="hljs-attr">ExecStart</span>=/opt/tuic/tuic-server-<span class="hljs-number">0.8</span>.<span class="hljs-number">5</span>-x<span class="hljs-number">86_64</span>-linux-gnu -c config.json<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartPreventExitStatus</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">5</span><br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><blockquote><p>注意版本号</p></blockquote><p>用get.acme.sh申请证书（也可以参考上面的教程）</p><p>详见我上一篇相关<a href="https://blog.1314171.xyz/post/220509freeipv6vps.html#4-%E4%BB%8E-letsencrypt-%E7%94%9F%E6%88%90%E5%85%8D%E8%B4%B9%E7%9A%84%E8%AF%81%E4%B9%A6">博客</a></p><p>转存证书记得按照如下路径转存fullchain和privkey</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">acme.sh --install-cert -d yourdomain.com<br>--fullchain-file    /opt/tuic/fullchain.pem    \<br>--key-file       /opt/tuic/privkey.pem  \<br></code></pre></td></tr></table></figure><blockquote><p>在这里我遇到了跑通前的最后一个坑，分辨清楚fullchain是谁）</p></blockquote><blockquote><p>同时在这里第一次申请证书的时候我还套了cdn，阴差阳错的给CDN主机申请了证书）</p></blockquote><p>4.启动tuic服务并设置开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> --now tuic.service<br></code></pre></td></tr></table></figure><p>相关指令还有：<code>systemctl status tuic.service</code>能展示服务状态，<code>systemctl stop/start/restart tuic.service</code>等</p><h2 id="客户端-win"><a href="#客户端-win" class="headerlink" title="客户端(win)"></a>客户端(win)</h2><p>在<a href="https://github.com/EAimTY/tuic/releases">github release</a>下载你系统对应的客户端</p><p>下载与服务端对应版本的<br>如：<a href="https://github.com/EAimTY/tuic/releases/download/0.8.5/tuic-client-0.8.5-x86_64-windows-gnu.exe">https://github.com/EAimTY/tuic/releases/download/0.8.5/tuic-client-0.8.5-x86_64-windows-gnu.exe</a></p><p>通过2rayN分流</p><p>之前提到的那篇略有过时的博客写的很清楚，<a href="https://lala.im/8424.html">请拉到该博客末尾查看</a></p><p>至此基本上遇到的坑都该提示的提示了</p><p>over</p><p><img src="https://s2.loli.net/2022/08/23/xjb2ocJkZ7NwtQp.png" alt="测速展示（本地北京移动千兆下行百兆上行）"></p><h1 id="v2rayn更新支持tuic"><a href="#v2rayn更新支持tuic" class="headerlink" title="v2rayn更新支持tuic"></a>v2rayn更新支持tuic</h1><p><a href="https://github.com/2dust/v2rayN/issues/2477">对应的issue</a></p><p>使用方法见<a href="https://github.com/2dust/v2rayN/releases/tag/5.30">官方更新日志</a></p><p>但我没整成功）sad</p>]]></content>
    
    
    <summary type="html">tuic是一个基于quic协议的高性能代理</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps" scheme="http://blog.1314171.xyz/tags/vps/"/>
    
    <category term="proxy" scheme="http://blog.1314171.xyz/tags/proxy/"/>
    
    <category term="ipv6" scheme="http://blog.1314171.xyz/tags/ipv6/"/>
    
    <category term="tuic" scheme="http://blog.1314171.xyz/tags/tuic/"/>
    
  </entry>
  
  <entry>
    <title>搭建docsify用作未来精工wiki</title>
    <link href="http://blog.1314171.xyz/post/220819docsifyDeploy.html"/>
    <id>http://blog.1314171.xyz/post/220819docsifyDeploy.html</id>
    <published>2022-08-19T08:04:23.000Z</published>
    <updated>2022-08-19T08:40:49.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h1><p>选择docsify是因为它相较于Vue更加的便捷简单，同时文档清晰（过于简洁，需要自己摸索，有一定html代码能力）有中文文档。</p><p><a href="https://docsify.js.org/#/">docsify官网</a><br><a href="https://www.cnblogs.com/xhemj/p/How-to-Use-Docsify.html">可参考的博客</a></p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>按照官方文档将自己的需求顺一遍就行了</p><p>要尝试</p><p>然后将源码放在github上</p><h2 id="上传源码"><a href="#上传源码" class="headerlink" title="上传源码"></a>上传源码</h2><li><a href="/post/220325codewithvscode"  tags="">参考我的这篇博客</li><h2 id="使用vercel部署"><a href="#使用vercel部署" class="headerlink" title="使用vercel部署"></a>使用vercel部署</h2><p><a href="https://www.readfog.com/a/1633646315981344768">参考</a></p><p>注意选择到本地初始化的docs根目录<br><img src="https://s2.loli.net/2022/08/19/QDytZbBNnLzpHRJ.png"></p><p>成功！</p><p>最后的成果：<a href="https://bitft-wiki.vercel.app/">点这里</a></p>]]></content>
    
    
    <summary type="html">暑假社会实践要做个指南，因此需要部署一个静态网页</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vercel" scheme="http://blog.1314171.xyz/tags/vercel/"/>
    
    <category term="docsify" scheme="http://blog.1314171.xyz/tags/docsify/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马火星的迷你小屋</title>
  <icon>http://blog.1314171.xyz/icon.png</icon>
  <subtitle>可能有一些学习心得和日常</subtitle>
  <link href="http://blog.1314171.xyz/atom.xml" rel="self"/>
  
  <link href="http://blog.1314171.xyz/"/>
  <updated>2023-02-26T11:31:12.178Z</updated>
  <id>http://blog.1314171.xyz/</id>
  
  <author>
    <name>TT2TER</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图床服务器出错过程和解决</title>
    <link href="http://blog.1314171.xyz/post/220908servernetworkproblem.html"/>
    <id>http://blog.1314171.xyz/post/220908servernetworkproblem.html</id>
    <published>2023-02-26T11:31:12.000Z</published>
    <updated>2023-02-26T11:31:12.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>安装探针，一开始想装到nas上，但nas环境，网络（家宽，端口屏蔽）docker服务不好访问，转而想装到服务器上</p><p>然后脚本运行curl时报错了</p><p><code>Connecting to github.com (github.com)|140.82.121.3|:443... failed: Net</code></p><p>我猜测是host的问题（但其实大概率不是）</p><p>我就头铁改host然后重启网络服务（命令：<code>/etc/init.d/network restart</code>)</p><p>直接导致了服务器ssh和服务都下线了</p><p><a href="https://blog.csdn.net/qing_yc/article/details/55522164">可能原因</a></p><p>vnc也连不上，工单也没法及时回复，我想着晚上就把问题解决，于是重装了系统，幸好图床上没有太多的图片</p><p>最后重装之后发现一开始无法连接的问题居然解决了，想到也可能是warp网卡出错了……，如果早想到就不用重装了没准</p><p>另外就是这个服务器是最轻量的系统，里面啥都没有，因此重启服务不确定性很高</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><h2 id="首先重装图床"><a href="#首先重装图床" class="headerlink" title="首先重装图床"></a>首先重装图床</h2><p>得益于自己写的博客，5分钟解决战斗</p><h2 id="其次上传原来博客中用这个图床的图片"><a href="#其次上传原来博客中用这个图床的图片" class="headerlink" title="其次上传原来博客中用这个图床的图片"></a>其次上传原来博客中用这个图床的图片</h2><p>哎</p><h2 id="最后，用微力同步备份"><a href="#最后，用微力同步备份" class="headerlink" title="最后，用微力同步备份"></a>最后，用微力同步备份</h2>]]></content>
    
    
    <summary type="html">因为装探针无法连接到github导致的一系列问题</summary>
    
    
    
    
    <category term="network" scheme="http://blog.1314171.xyz/tags/network/"/>
    
    <category term="vps" scheme="http://blog.1314171.xyz/tags/vps/"/>
    
    <category term="sync" scheme="http://blog.1314171.xyz/tags/sync/"/>
    
  </entry>
  
  <entry>
    <title>Weekly Report Week 1</title>
    <link href="http://blog.1314171.xyz/post/2023week1.html"/>
    <id>http://blog.1314171.xyz/post/2023week1.html</id>
    <published>2023-02-26T11:29:23.000Z</published>
    <updated>2023-02-26T11:29:23.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Monday"><a href="#Monday" class="headerlink" title="Monday"></a>Monday</h2><p>I realized that I had forgotten the circuit analysis and complex functions learned last term. Sad.</p><h2 id="Tuesday"><a href="#Tuesday" class="headerlink" title="Tuesday"></a>Tuesday</h2><ul><li>Planning training stable diffusion modle:</li></ul><p>here is the source of the idea<br><img src="https://pic.1314171.xyz/i/2023/02/22/a5f3b9f22874f5594c18544d5ddb3e3.jpg"></p><p>Some relevant links：</p><p><a href="https://www.youtube.com/watch?v=1jomz1jjRjQ">【AI绘画】Stable Diffusion Dreambooth最新教程，只要6G显存的lora算法就能本地训练模型画出gta画风刘亦菲</a></p><ul><li>decide writing this report</li></ul><h2 id="Wednesday"><a href="#Wednesday" class="headerlink" title="Wednesday"></a>Wednesday</h2><p>see some selfhost project</p><h3 id="1-a-Self-hosted-bookmark-service"><a href="#1-a-Self-hosted-bookmark-service" class="headerlink" title="1. a Self-hosted bookmark service"></a><a href="https://github.com/sissbruecker/linkding#introduction">1. a Self-hosted bookmark service</a></h3><p>with rss &amp; extention </p><p>has docker version! <a href="https://demo.linkding.link/">demo</a></p><h3 id="2-self-hosted-web-archiving"><a href="#2-self-hosted-web-archiving" class="headerlink" title="2. self-hosted web archiving"></a><a href="https://github.com/ArchiveBox/ArchiveBox">2. self-hosted web archiving</a></h3><p>can store all kind of website from ytb to flash games. </p><p>can help solve the problem of <a href="https://www.howtogeek.com/786227/what-is-link-rot-and-how-does-it-threaten-the-web/">link rot</a></p><p><a href="https://demo.archivebox.io/public/">demo</a></p><h3 id="3-Turns-any-MySQL-PostgreSQL-SQL-Server-SQLite-amp-MariaDB-into-a-smart-spreadsheet"><a href="#3-Turns-any-MySQL-PostgreSQL-SQL-Server-SQLite-amp-MariaDB-into-a-smart-spreadsheet" class="headerlink" title="3. Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp; MariaDB into a smart-spreadsheet. "></a><a href="https://github.com/nocodb/nocodb">3. Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp; MariaDB into a smart-spreadsheet. </a></h3><h3 id="4-bookmark-with-screenshot"><a href="#4-bookmark-with-screenshot" class="headerlink" title="4. bookmark with screenshot"></a><a href="https://github.com/Daniel31x13/linkwarden">4. bookmark with screenshot</a></h3><h2 id="Friday"><a href="#Friday" class="headerlink" title="Friday"></a>Friday</h2><p>plan to do this<br><a href="https://github.com/jaymody/picoGPT">picoGPT</a></p><h1 id="what-have-done"><a href="#what-have-done" class="headerlink" title="what have done"></a>what have done</h1><ul><li>played basketball twice</li><li>finished Mathematical Modeling U.S. Competition</li><li>报名了北京动物园的志愿者，截止3月5日<a href="http://www.bjzoo.com/volunteer/join.html?ColumnName=C75AC251E7C30F41DCBE014822AC2BB4">（报名链接）</a>      要求一年去20次一次至少3小时，正好我们综测的志愿活动加分半年满分30小时。</li></ul>]]></content>
    
    
    <summary type="html">From this week start writing something I do-read-write each week.</summary>
    
    
    
    <category term="Diary" scheme="http://blog.1314171.xyz/categories/Diary/"/>
    
    
    <category term="Weekly Report" scheme="http://blog.1314171.xyz/tags/Weekly-Report/"/>
    
  </entry>
  
  <entry>
    <title>我整合的语音生成歌词文件项目：Audio2Lrc</title>
    <link href="http://blog.1314171.xyz/post/221019Audio2Lrc.html"/>
    <id>http://blog.1314171.xyz/post/221019Audio2Lrc.html</id>
    <published>2022-10-19T12:09:10.000Z</published>
    <updated>2022-10-19T12:09:10.182Z</updated>
    
    <content type="html"><![CDATA[<p>第一个有实际作用的项目，欢迎star</p><h1 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h1><p>这个项目的需求是在体验了<a href="https://blog.1314171.xyz/post/221018whisper.html">whisper</a>之后发现的</p><p>有了这么好的模型，正好可以为一些英文播客(broadcast)生成歌词字幕文件(.lrc)，方便自己学英语</p><h1 id="项目仓库"><a href="#项目仓库" class="headerlink" title="项目仓库"></a>项目仓库</h1><p><a href="https://github.com/TT2TER/Audio2Lrc">TT2TER&#x2F;Audio2Lrc</a></p><p>源码和使用详见github!</p><p>欢迎提改进意见！</p>]]></content>
    
    
    <summary type="html">整合openAI的whisper模型并生成lrc歌词文件</summary>
    
    
    
    
    <category term="Audio2Lrc" scheme="http://blog.1314171.xyz/tags/Audio2Lrc/"/>
    
    <category term="whisper" scheme="http://blog.1314171.xyz/tags/whisper/"/>
    
  </entry>
  
  <entry>
    <title>whisper实时转录</title>
    <link href="http://blog.1314171.xyz/post/221018whisper.html"/>
    <id>http://blog.1314171.xyz/post/221018whisper.html</id>
    <published>2022-10-18T12:31:16.000Z</published>
    <updated>2022-10-18T12:31:16.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="introduce"><a href="#introduce" class="headerlink" title="introduce"></a>introduce</h1><p>这是一个本地的语音识别模型<br>强无敌</p><p>官网介绍：<a href="https://openai.com/blog/whisper/">Introducing Whisper</a></p><h1 id="openAI官方的python版本安装"><a href="#openAI官方的python版本安装" class="headerlink" title="openAI官方的python版本安装"></a>openAI官方的python版本安装</h1><p>github仓库链接:<a href="https://github.com/openai/whisper">whisper</a></p><ol><li>使用anaconda</li><li>在anaconda环境中安装cuda(请耐心等待解压)<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 安装CUDA</span><br><span class="hljs-attribute">conda</span> install cudatoolkit=<span class="hljs-number">11</span>.<span class="hljs-number">6</span> # 指定版本<br></code></pre></td></tr></table></figure></li><li>pytorch<br>请到它的<a href="https://pytorch.org/get-started/locally/">官网</a>选择下载对应的你的cuda的版本</li><li>安装ffmpeg<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">conda <span class="hljs-keyword">install</span> ffmpeg<br></code></pre></td></tr></table></figure></li><li>运行安装其他依赖库<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pip install git+https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/openai/</span>whisper.git <br></code></pre></td></tr></table></figure></li><li>enjoy it！(模型会在运行时下载)<br>具体使用方法见github，下面是一个示例<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">whisper <span class="hljs-string">&quot;3.3 Task 19 Gauss.mp3&quot;</span> <span class="hljs-comment">--model base</span><br></code></pre></td></tr></table></figure><h1 id="cpp实现"><a href="#cpp实现" class="headerlink" title="cpp实现"></a>cpp实现</h1>TODO:</li></ol>]]></content>
    
    
    <summary type="html">很好用的语音识别，英文准确率很高，可以用来识别英语听力</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="openAI" scheme="http://blog.1314171.xyz/tags/openAI/"/>
    
  </entry>
  
  <entry>
    <title>最近大火的stable-diffusion（AI画图模型）安装</title>
    <link href="http://blog.1314171.xyz/post/220928stablediffusioninstall.html"/>
    <id>http://blog.1314171.xyz/post/220928stablediffusioninstall.html</id>
    <published>2022-09-27T17:49:51.000Z</published>
    <updated>2022-10-19T11:42:59.081Z</updated>
    
    <content type="html"><![CDATA[<p><del>因为图床暂未配置证书，故请暂时关闭https保护以加载本文http图片资源（部分浏览器无法关闭）。如火狐可以在左上角小锁选项中选择暂时解除保护</del><br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe1d1ad3a7.png"></p><p>221019更新，图床已支持https证书</p><h1 id="选择的web-ui"><a href="#选择的web-ui" class="headerlink" title="选择的web-ui"></a>选择的web-ui</h1><p>选择了一个看起来优化不错的ui</p><p><a href="https://github.com/cmdr2/stable-diffusion-ui">stable-diffusion-ui</a></p><h1 id="win安装过程"><a href="#win安装过程" class="headerlink" title="win安装过程"></a>win安装过程</h1><h2 id="请先阅读官方说明"><a href="#请先阅读官方说明" class="headerlink" title="请先阅读官方说明"></a>请先阅读官方说明</h2><p><a href="https://github.com/cmdr2/stable-diffusion-ui#installation">说明</a></p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><blockquote><p>说明，本方法为 为所有涉及终端配置代理，不喜勿看</p></blockquote><ol><li>到<a href="https://github.com/cmdr2/stable-diffusion-ui/releases">releases</a>找到win系统对应链接下载</li></ol><p><a href="https://github.com/cmdr2/stable-diffusion-ui/releases/download/v2.16/stable-diffusion-ui-win64.zip">下载链接,v2.16版本（不建议点击这个下载）</a></p><ol start="2"><li>解压到硬盘根目录，即<code>c:</code>or<code>d:</code>，e.g.<code>C:\stable-diffusion-ui</code>,避免触及win系统路径长度限制</li><li>如果肉身在国外或有透明代理，双击<code>Start Stable Diffusion UI.cmd</code>即可，其余网络环境请继续阅读</li><li>如果系统中未安装<code>1. git客户端 2.anaconda（Python虚拟环境）</code>请先行安装，方便代理配置</li><li>为如下客户端配置代理 <ol><li>git http </li><li>git ssh</li><li>anaconda</li><li>cmd</li></ol></li></ol><p>方法：</p><p>i. git http代理（永久）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs git">#开启<br>git config --global http.proxy &quot;http://127.0.0.1:yourport&quot;<br>git config --global https.proxy &quot;http://127.0.0.1:yourport&quot;<br>git config -l --globle #查看是否配置成功<br>#如需要关闭：<br>git config --global --unset http.proxy<br>git config --global --unset https.proxy<br></code></pre></td></tr></table></figure><p>ii. git ssh代理（永久）</p><p><a href="https://blog.1314171.xyz/post/220511ssh-connect-to-ssh-github.html">参考本人博客：为git ssh设置代理</a></p><p>iii. anaconda代理（永久）</p><p>打开图形界面（navigator)<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe1ebcf5b6.png"></p><p>点击prefer……<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe1ff760aa.png"></p><p>选择下方绿色选项：<code>config conda</code></p><p>粘贴下方配置</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs awk">channels:<br>  - conda-forge<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/main<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/r<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  msys2: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  bioconda: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  menpo: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch-lts: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  simpleitk: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>ssl_verify: false<br>proxy_servers:<br>    http: http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:yourport<br>    https: http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:yourport<br></code></pre></td></tr></table></figure><p>注意替换你的端口，各个配置项含义请自行百度</p><p>iv. cmd代理（仅限该终端）<br>如果你用的clash，可以点击这个terminal图标<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe2196b108.png"><br>直接选择打开配置好代理的cmd终端</p><p>或者新建终端键入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> http_proxy=http://127.0.0.1:yourport &amp; <span class="hljs-built_in">set</span> https_proxy=http://127.0.0.1:yourport<br></code></pre></td></tr></table></figure><ol start="6"><li>在步骤<code>5.</code>配置好代理的终端中将路径切换到stable diffusion根目录</li></ol><p>如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">e:<span class="hljs-comment">#你的，如d:</span><br><span class="hljs-built_in">cd</span> stable-diffusion-ui<br></code></pre></td></tr></table></figure><p>如图<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe23367fad.png"></p><ol start="7"><li>键入完整目录，注意用引号括住<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;E:\stable-diffusion-ui\Start Stable Diffusion UI.cmd&quot;</span><br></code></pre></td></tr></table></figure>（也可以拖动.cmd）到命令行中<br>回车</li></ol><p>等待安装即可</p><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><ol><li>如果安装报错失败，请完全删除<code>stable-diffusion-ui</code>文件夹及其内容，重新从步骤<code>2.</code>解压开始安装</li><li>安装后再次运行<code>.cmd</code>文件即可再次使用，注意每次运行都会自动检查更新，因此每次运行时需要按照上述步骤<code>6.</code>开始配置cmd代理，以保证各项模块正常检查更新。</li><li>如不需要更新，可以关闭系统代理core(即完全退出代理软件)，直接双击<code>.cmd</code>也可运行</li></ol>]]></content>
    
    
    <summary type="html">因为英语写作要介绍个专业技术，最近这个AI画图技术飞速增长，就打算写它。为了更好了解，于是在本地跑了一下。本篇介绍win安装踩坑</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="AI art" scheme="http://blog.1314171.xyz/tags/AI-art/"/>
    
    <category term="stable diffusion" scheme="http://blog.1314171.xyz/tags/stable-diffusion/"/>
    
    <category term="deep learning" scheme="http://blog.1314171.xyz/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>用仅ipv6vps自建图床并支持ipv4访问</title>
    <link href="http://blog.1314171.xyz/post/220904picture-server.html"/>
    <id>http://blog.1314171.xyz/post/220904picture-server.html</id>
    <published>2022-09-05T15:33:30.000Z</published>
    <updated>2022-10-19T11:44:27.277Z</updated>
    
    <content type="html"><![CDATA[<p>221019更新，图床已支持https且仅支持https</p><h1 id="换图床的原因"><a href="#换图床的原因" class="headerlink" title="换图床的原因"></a>换图床的原因</h1><p>之前sm.ms图床已经不太能用而且有审核，已经无故挂了我三张图片了</p><p>后来github图床的解决方案因为jsdelivr的cdn加速在国内被墙：</p><p><a href="https://luotianyi.vc/6295.html">致敬-被滥用的jsdelivr,我又何尝不是其中一员呢？</a></p><p>干脆直接换个较大硬盘的vps</p><p>简单搜索之后发现方案可行，基本上随便一搜就20欧10G千兆带宽</p><h1 id="选择主机商"><a href="#选择主机商" class="headerlink" title="选择主机商"></a>选择主机商</h1><p><del>舍友推荐了个便宜的主机商：</del></p><h2 id="221019更新：请考虑别的主机，该机型已无库存"><a href="#221019更新：请考虑别的主机，该机型已无库存" class="headerlink" title="221019更新：请考虑别的主机，该机型已无库存"></a>221019更新：请考虑别的主机，该机型已无库存</h2><p><a href="https://my.server-factory.com/">server-factory</a></p><p>仅ipv6主机仅需6欧，nat主机9欧一年，而且支持Alipay（支付宝）<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe03aafd19.jpg" alt="测速图片"></p><p>要什么自行车，冲他<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe0e22b95f.jpg" alt="购买这个就行"></p><p><del>买这个仅Ipv6就行</del>，解决ipv4访问用cf cdn套一层代理</p><p>确保用cf代理，小云朵打开即可</p><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>之前用脚本在vps上申请证书的时候不能套上述小云朵，否则会失败或者替cf申请证书……</p><p>这次尝试直接套小云朵嫖cf证书</p><h3 id="221001更新"><a href="#221001更新" class="headerlink" title="221001更新"></a>221001更新</h3><p><img src="https://pic.1314171.xyz/i/2022/10/19/634fdfd8c3390.png"></p><p>如果要加证书在获取token时就如下图所示<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fde242e29d.png"></p><p>申请cf证书请参考：<a href="https://65536.io/2020/03/607.html">博客</a></p><h1 id="选择图床"><a href="#选择图床" class="headerlink" title="选择图床"></a>选择图床</h1><p>大概有三个很好的选择，<a href="https://www.lsky.pro/">兰空图床</a>、<a href="https://github.com/helloxz/imgurl">imgurl</a>和<a href="https://chevereto.com/">chevereto</a></p><p>最后选择兰空的原因是：imgurl社区开源版本上次更新已经过去三年了，<a href="https://github.com/chevereto/vps">chevereto</a>令人望而生畏的英文文档(而且只有付费版了，还不便宜，以及，我以为兰空有中文文档很好搭建，官方宣传：半小时搭好，文档写的不好，但照着我这个教程10分钟ko)</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h3 id="主要参考资料"><a href="#主要参考资料" class="headerlink" title="主要参考资料"></a>主要参考资料</h3><p>非常感谢</p><ol><li><p><a href="https://www.zatp.com/post/lsky-pro-image-hosting/">搭建 Lsky Pro 兰空图床</a></p></li><li><p><a href="https://blog.csdn.net/Bacon_Fish/article/details/125681902">兰空图床搭建</a></p></li></ol><h2 id="为啥不用宝塔面板"><a href="#为啥不用宝塔面板" class="headerlink" title="为啥不用宝塔面板"></a>为啥不用宝塔面板</h2><p>毕竟1G的机子跑宝塔完全没问题</p><p>但</p><p><a href="https://zhuanlan.zhihu.com/p/196684686">宝塔面板爆重大漏洞，数据库无鉴权直接访问</a></p><p>在舍友的极力劝阻下我开始了我的苦闷的从0开始之旅</p><h2 id="没头苍蝇阶段"><a href="#没头苍蝇阶段" class="headerlink" title="没头苍蝇阶段"></a>没头苍蝇阶段</h2><p>所谓的半小时，我整了整整一天。</p><p>一开始按照中文文档搭建，几乎没任何指导，并且有nginx和php两大知识盲区，后来……</p><p>痛苦</p><p>直到我找到了上面引用的第2篇教程</p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>参阅<a href="https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/">官方文档</a>后</p><p>决定直接apt安装</p><p>以下均root用户命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update<br>apt upgrade<br>apt install nginx<br><span class="hljs-comment">#查询其工作状态</span><br>systemctl status nginx<br></code></pre></td></tr></table></figure><p>在浏览器内输入您的IP地址或域名并打开</p><p>显示：<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe15f4b80c.jpg"><br>说明Nginx已经正常工作</p><h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><p>根据官方的文档，要满足如下要求</p><pre><code class="hljs">PHP &gt;= 8.0.2BCMath PHP 扩展Ctype PHP 扩展DOM PHP 拓展Fileinfo PHP 扩展JSON PHP 扩展Mbstring PHP 扩展OpenSSL PHP 扩展PDO PHP 扩展Tokenizer PHP 扩展XML PHP 扩展Imagick 拓展exec、shell_exec 函数readlink、symlink 函数putenv、getenv 函数chmod、chown、fileperms 函数</code></pre><p>有些头大<br>最后整理出来的安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sSL https://packages.sury.org/php/README.txt | bash -x<br><br><span class="hljs-comment">#上述脚本内容为:</span><br><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-comment"># To add this repository please do:</span><br><br><span class="hljs-comment">#if [ &quot;$(whoami)&quot; != &quot;root&quot; ]; then</span><br><span class="hljs-comment">#    SUDO=sudo</span><br><span class="hljs-comment">#fi</span><br><br><span class="hljs-comment">#$&#123;SUDO&#125; apt-get update</span><br><span class="hljs-comment">#$&#123;SUDO&#125; apt-get -y install apt-transport-https lsb-release ca-certificates curl</span><br><span class="hljs-comment">#$&#123;SUDO&#125; curl -sSLo /usr/share/keyrings/deb.sury.org-php.gpg https://packages.sury.org/php/apt.gpg</span><br><span class="hljs-comment">#$&#123;SUDO&#125; sh -c &#x27;echo &quot;deb [signed-by=/usr/share/keyrings/deb.sury.org-php.gpg] https://packages.sury.org/php/ $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/php.list&#x27;</span><br><span class="hljs-comment">#$&#123;SUDO&#125; apt-get update</span><br><br><span class="hljs-comment"># 这里安装8.1版本</span><br>apt install -y php8.1 php8.1-cli php8.1-common php8.1-fpm php8.1-xml php8.1-curl php8.1-mysql php8.1-sqlite3 php8.1-mbstring php8.1-gd php8.1-fileinfo php8.1-exif php8.1-bcmath php8.1-imagick php8.1-opcache php8.1-readline php8.1-dom php8.1-tokenizer<br><br>apt install libssl-dev openssl<br></code></pre></td></tr></table></figure><p>上述脚本将官方源添加到apt中，apt install完成了所有依赖的安装。</p><h2 id="配置PHP"><a href="#配置PHP" class="headerlink" title="配置PHP"></a>配置PHP</h2><p>打开php.ini，示例命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/php/8.1/fpm/php.ini<br><span class="hljs-comment">#注意路径中的8.1改成您安装的对应版本号</span><br></code></pre></td></tr></table></figure><p>在其中找到如下几点：</p><ol><li>找到<code>disable_functions</code>，若 “&#x3D;” 右侧存在<code>exec、shell_exec、readlink、symlink、putenv、getenv</code>函数，将其删除（默认状态下，等号右侧为空白）；</li><li>找到<code>memory_limit</code>，根据机器配置适当调大 “&#x3D;” 右侧最大内存大小（默认php128mb内存）；</li><li>找到<code>post_max_size</code>，适当调大 “&#x3D;” 右侧POST方法所能传输数据的最大大小（这是队列大小，调整为想上传最大单个文件大小乘上想一次性上传图片数）；</li><li>找到<code>upload_max_filesize</code>，适当调大 “&#x3D;” 右侧最大文件上传大小（这是单个文件上传大小）；</li><li><code>max_execution_time</code> 右侧为最大执行时间，默认为30秒，也就是说如果上传超过 30 秒，该队列就会停止</li><li>找到<code>open_basedir</code>，在其前面加上“;”（默认已添加）。</li></ol><p>重启php-fpm并检查工作状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart php8.1-fpm<br><span class="hljs-comment">#根据安装版本调整版本号</span><br>systemctl status php8.1-fpm<br><span class="hljs-comment">#根据安装版本调整版本号</span><br></code></pre></td></tr></table></figure><h2 id="安装兰空图床本体"><a href="#安装兰空图床本体" class="headerlink" title="安装兰空图床本体"></a>安装兰空图床本体</h2><ol><li>下载源码：<br>从<a href="https://github.com/lsky-org/lsky-pro/releases">release</a>下载最新安装包，放在你想安装的路径上</li></ol><p>这里以 <code>/home/www/lsky</code> 路径举例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#首先安装解压</span><br>apt install unzip<br><span class="hljs-comment"># 下一句注意修改版本号</span><br>unzip -d /home/www/lsky/ lsky-pro-2.1.zip<br><span class="hljs-comment">#将安装文件夹及其子文件夹权限设为755，所有者改为www-data：</span><br><span class="hljs-built_in">chmod</span> -R 755 /home/www/lsky<br><span class="hljs-built_in">chown</span> -R www-data /home/www/lsky<br></code></pre></td></tr></table></figure><h2 id="配置Nginx和PHP协同"><a href="#配置Nginx和PHP协同" class="headerlink" title="配置Nginx和PHP协同"></a>配置Nginx和PHP协同</h2><p>打开default网站配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/sites-available/default<br></code></pre></td></tr></table></figure><p>将内容复制到<br><code>/etc/nginx/cinf.d</code>下新建一文件命名为：<code>lsky.conf</code></p><p>修改其中<br>0. 去除掉80端口后的 default……</p><ol><li>转到server块，找到root项，将其后的路径指向Lsky Pro安装路径的public文件夹；</li><li>找到index项，在其后添加index.php；</li><li>找到server_name项，将其后的内容改为您的IP或域名；</li><li>转到location &#x2F; 块，找到try_files项，将 &#x3D;404 改为 &#x2F;index.php?$query_string（即设置伪静态）；</li><li>转到location ~ .php$块，去除行前#号，选择With php-fpm方法，将路径中的PHP版本修改为对应安装版本。修改完的效果应如图所示：</li></ol><p><img src="https://pic.1314171.xyz/i/2022/10/19/634fe138d9bc5.png"></p><p>执行以下命令打开Nginx配置文档：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure><p>在http块中添加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json">client_max_body_size <span class="hljs-number">25</span>m;<br>#<span class="hljs-number">25</span>m为Nginx限制的一次性上传文件最大大小<br>#大小可视情况调整<br></code></pre></td></tr></table></figure><p>检查配置有无错误，重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -t<br><span class="hljs-comment">#若无错误</span><br>systemctl restart nginx<br></code></pre></td></tr></table></figure><h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><p>尝试安装MySQL</p><p>但官方源始终无法curl到，我也懒得整了</p><p>就用SQLite，简单不用安装</p><h2 id="初始化图床"><a href="#初始化图床" class="headerlink" title="初始化图床"></a>初始化图床</h2><p>配置好域名以后，访问站点首页，程序会自动跳转至安装页面，环境检测通过以后即可通过引导进行安装。</p><p><code>数据库名称/路径</code>留空即可</p><h2 id="接入api和picgo协同"><a href="#接入api和picgo协同" class="headerlink" title="接入api和picgo协同"></a>接入api和picgo协同</h2><p><a href="https://www.shejibiji.com/archives/8411">参考这个博客设置请求</a></p><p>但是捏，套了cdn的地址没法在线post,解了cdn之后才发现并不能post ipv6地址……纯ipv6的痛苦</p><p>想了想，发现能本地post，命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl localhost:80/api/v1/tokens -X POST -d <span class="hljs-string">&#x27;email=example@example.com&amp;password=yourpass&#x27;</span><br></code></pre></td></tr></table></figure><p>可以正常返回<br><img src="https://pic.1314171.xyz/i/2022/10/19/634fe105c8f1c.png" alt="成功！这就是我用picgo上传的图片"></p><h2 id="发现能用webdav等存储"><a href="#发现能用webdav等存储" class="headerlink" title="发现能用webdav等存储"></a>发现能用webdav等存储</h2><p>还未尝试，TODO:</p><h2 id="其他问题，http图床链接在vscode中无法加载预览解决"><a href="#其他问题，http图床链接在vscode中无法加载预览解决" class="headerlink" title="其他问题，http图床链接在vscode中无法加载预览解决"></a>其他问题，http图床链接在vscode中无法加载预览解决</h2><p>参看如下两篇就明白了</p><p><a href="https://blog.csdn.net/wejack/article/details/122309967?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-5-122309967-blog-105007956.pc_relevant_aa_2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-5-122309967-blog-105007956.pc_relevant_aa_2&utm_relevant_index=6">markdown预览</a></p><p><a href="https://blog.csdn.net/qq_41821678/article/details/105007956">加载http链接</a></p><blockquote><p>本篇博客所有图片均上传在新部署的图床上</p></blockquote><blockquote><p>目前图床关闭注册以及游客上传功能，没有公开计划，如有需要请联系我</p></blockquote><h1 id="其他友情链接"><a href="#其他友情链接" class="headerlink" title="其他友情链接"></a>其他友情链接</h1><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p><a href="https://www.myfreax.com/how-to-install-nginx-on-debian-10/">教程1</a></p><p><a href="https://www.myfreax.com/nginx-commands-you-should-know/">教程2</a></p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p><a href="https://blog.csdn.net/Time888/article/details/113935083">PHP教程</a></p>]]></content>
    
    
    <summary type="html">之前图床都不好用了，为了可持续发展，决定自建图床</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vscode" scheme="http://blog.1314171.xyz/tags/vscode/"/>
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
    <category term="vps" scheme="http://blog.1314171.xyz/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>尝试新的图床解决方案</title>
    <link href="http://blog.1314171.xyz/post/220903picture-server.html"/>
    <id>http://blog.1314171.xyz/post/220903picture-server.html</id>
    <published>2022-09-03T16:06:11.000Z</published>
    <updated>2022-09-03T16:40:10.659Z</updated>
    
    <content type="html"><![CDATA[<h1 id="再前言"><a href="#再前言" class="headerlink" title="再前言"></a>再前言</h1><p>感觉这又是一个暂时性的解决办法，jsdelivr永远被墙！</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我之前的图床解决方案</p><li><a href="/post/220508picture-server"  tags="">我的博客图床</li><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="首先跟着这个博客来"><a href="#首先跟着这个博客来" class="headerlink" title="首先跟着这个博客来"></a>首先跟着这个博客来</h2><p>其中有四点要注意</p><ol><li>可以不用勾选readme</li><li>token 还要选上user(我也不知道为啥而且我也没测不选能不能用，另一个教程选了，我怕麻烦也选了)</li><li>token设置在github的settings -&gt; developer settings里</li><li>特别注意cdn.jsdelivr.net国内被dns污染了，所以要把它换成gcore.jsdelivr.net</li></ol><p><a href="https://zhuanlan.zhihu.com/p/489236769">教程</a></p><h2 id="其次，picgoyyds"><a href="#其次，picgoyyds" class="headerlink" title="其次，picgoyyds"></a>其次，picgoyyds</h2><p>本来想试试换用sharex截图上传，但网上<a href="https://nokiasonic.github.io/2021/09/24/%E3%80%90%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E3%80%91ShareX%E6%88%AA%E5%9B%BE%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/">没有成型的用github图床的解决办法</a></p><p>于是，拥抱PicGo，bingo！</p><h1 id="效果测试："><a href="#效果测试：" class="headerlink" title="效果测试："></a>效果测试：</h1><p><img src="https://gcore.jsdelivr.net/gh/TT2TER/image1st@main/img/20220904000123.png"></p><p>图片内容为<code># 效果测试：</code>几个字</p>]]></content>
    
    
    <summary type="html">sm.ms经常寄，尝试github+jsdelivr</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>放弃刚用两天就被墙掉的vercel</title>
    <link href="http://blog.1314171.xyz/post/220903vercelTOnetlify.html"/>
    <id>http://blog.1314171.xyz/post/220903vercelTOnetlify.html</id>
    <published>2022-09-03T14:51:45.000Z</published>
    <updated>2022-09-04T14:15:51.887Z</updated>
    
    <content type="html"><![CDATA[<h1 id="找了新的服务商："><a href="#找了新的服务商：" class="headerlink" title="找了新的服务商："></a>找了新的服务商：</h1><p><a href="https://app.netlify.com/">netlify</a></p><p>看起来这个是以team为基本组织架构的服务商</p><p>免费方案可以部署好几个网站，轻度使用够了，大不了再注册个号。</p><p>他免费有些限制，比方不能并发（同时）构建网页（不影响同时托管），构建总时长有限制（意思是不能运行很复杂的，运行很多次，300Min限制）同时网页访问数据在100G每月，正常博客wiki等完全没问题。</p><h1 id="注意的细节"><a href="#注意的细节" class="headerlink" title="注意的细节"></a>注意的细节</h1><p>本来想插图片的但，sm.ms好像多少出了点问题，TODO:速速备份。</p><p>描述一下，注意网页的根目录和build command（一般command默认即可，根目录是生成网页的所有资源的根目录）</p><p>好了好了图床换了<br>详见：</p><li><a href="/post/220903picture-server">尝试新的图床解决方案</li><p>补个截图：<br><img src="https://gcore.jsdelivr.net/gh/TT2TER/image1st@main/img/20220904001131.png"></p><h1 id="把原来的域名改绑定"><a href="#把原来的域名改绑定" class="headerlink" title="把原来的域名改绑定"></a>把原来的域名改绑定</h1><p>原来vercel绑定的改为<code>yournamebackup</code></p><p>域名同样有https,但比vercel慢点，等等就行了</p><p>直接在域名解析CNAME到你的<code>yourproject.netlify.app</code>就行</p><h1 id="补一手很漂亮的部署日志"><a href="#补一手很漂亮的部署日志" class="headerlink" title="补一手很漂亮的部署日志"></a>补一手很漂亮的部署日志</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br></pre></td><td class="code"><pre><code class="hljs log">9:22:08 PM: Build ready to start<br>9:22:12 PM: build-image version: d7b3dbfb0846505993c9a131894d1858074c90b4 (focal)<br>9:22:12 PM: build-image tag: v4.10.1<br>9:22:12 PM: buildbot version: 67e75f1ba713a8213d4b5a8ccf9708af751e2390<br>9:22:12 PM: Fetching cached dependencies<br>9:22:12 PM: Failed to fetch cache, continuing with build<br>9:22:12 PM: Starting to prepare the repo for build<br>9:22:12 PM: No cached dependencies found. Cloning fresh repo<br>9:22:12 PM: git clone https://github.com/TT2TER/TT2TER.Github.io<br>9:22:14 PM: Preparing Git Reference refs/heads/source<br>9:22:14 PM: Parsing package.json dependencies<br>9:22:15 PM: Starting build script<br>9:22:15 PM: Installing dependencies<br>9:22:15 PM: Python version set to 2.7<br>9:22:15 PM: Downloading and installing node v16.17.0...<br>9:22:15 PM: Downloading https://nodejs.org/dist/v16.17.0/node-v16.17.0-linux-x64.tar.xz...<br>9:22:16 PM: Computing checksum with sha256sum<br>9:22:16 PM: Checksums matched!<br>9:22:19 PM: Now using node v16.17.0 (npm v8.15.0)<br>9:22:20 PM: Started restoring cached build plugins<br>9:22:20 PM: Finished restoring cached build plugins<br>9:22:20 PM: Attempting ruby version 2.7.2, read from environment<br>9:22:20 PM: Using ruby version 2.7.2<br>9:22:21 PM: Using PHP version 8.0<br>9:22:21 PM: No npm workspaces detected<br>9:22:21 PM: Started restoring cached node modules<br>9:22:21 PM: Finished restoring cached node modules<br>9:22:21 PM: Installing NPM modules using NPM version 8.15.0<br>9:22:21 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:21 PM: npm WARN config location in the cache, and they are managed by<br>9:22:21 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:21 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:21 PM: npm WARN config location in the cache, and they are managed by<br>9:22:21 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:23 PM: npm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated<br>9:22:23 PM: npm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated<br>9:22:23 PM: npm WARN deprecated source-map-resolve@0.6.0: See https://github.com/lydell/source-map-resolve#deprecated<br>9:22:23 PM: npm WARN deprecated nvm@0.0.4: This is NOT the correct nvm. Visit https://nvm.sh and use the curl command to install it.<br>9:22:24 PM: npm WARN deprecated hexo-bunyan@1.0.0: Please see https://github.com/hexojs/hexo-bunyan/issues/17<br>9:22:24 PM: npm WARN deprecated chokidar@2.1.8: Chokidar 2 does not receive security updates since 2019. Upgrade to chokidar 3 with 15x fewer dependencies<br>9:22:24 PM: npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated<br>9:22:24 PM: npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated<br>9:22:25 PM: npm WARN deprecated highlight.js@9.18.5: Support has ended for 9.x series. Upgrade to @latest<br>9:22:25 PM: npm WARN deprecated core-js@1.2.7: core-js@&lt;3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.<br>9:22:27 PM: added 535 packages, and audited 536 packages in 6s<br>9:22:27 PM: 25 packages are looking for funding<br>9:22:27 PM:   run `npm fund` for details<br>9:22:27 PM: 22 vulnerabilities (2 low, 6 moderate, 11 high, 3 critical)<br>9:22:27 PM: To address issues that do not require attention, run:<br>9:22:27 PM:   npm audit fix<br>9:22:27 PM: To address all issues possible (including breaking changes), run:<br>9:22:27 PM:   npm audit fix --force<br>9:22:27 PM: Some issues need review, and may require choosing<br>9:22:27 PM: a different dependency.<br>9:22:27 PM: Run `npm audit` for details.<br>9:22:27 PM: NPM modules installed<br>9:22:28 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:28 PM: npm WARN config location in the cache, and they are managed by<br>9:22:28 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:28 PM: Started restoring cached go cache<br>9:22:28 PM: Finished restoring cached go cache<br>9:22:28 PM: Installing Go version 1.17 (requested 1.17)<br>9:22:34 PM: unset GOOS;<br>9:22:34 PM: unset GOARCH;<br>9:22:34 PM: export GOROOT=&#x27;/opt/buildhome/.gimme/versions/go1.17.linux.amd64&#x27;;<br>9:22:34 PM: export PATH=&quot;/opt/buildhome/.gimme/versions/go1.17.linux.amd64/bin:$&#123;PATH&#125;&quot;;<br>9:22:34 PM: go version &gt;&amp;2;<br>9:22:34 PM: export GIMME_ENV=&quot;/opt/buildhome/.gimme/env/go1.17.linux.amd64.env&quot;<br>9:22:34 PM: go version go1.17 linux/amd64<br>9:22:34 PM: Installing missing commands<br>9:22:34 PM: Verify run directory<br>9:22:35 PM: ​<br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM:   Netlify Build                                                 <br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Version<br>9:22:35 PM:   @netlify/build 27.16.1<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Flags<br>9:22:35 PM:   baseRelDir: true<br>9:22:35 PM:   buildId: 63135500d4077517d5f93a18<br>9:22:35 PM:   deployId: 63135500d4077517d5f93a1a<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Current directory<br>9:22:35 PM:   /opt/build/repo<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Config file<br>9:22:35 PM:   No config file was defined: using default values.<br>9:22:35 PM: ​<br>9:22:35 PM: ❯ Context<br>9:22:35 PM:   production<br>9:22:35 PM: ​<br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM:   1. Build command from Netlify app                             <br>9:22:35 PM: ────────────────────────────────────────────────────────────────<br>9:22:35 PM: ​<br>9:22:35 PM: $ npm run build<br>9:22:35 PM: npm WARN config tmp This setting is no longer used.  npm stores temporary files in a special<br>9:22:35 PM: npm WARN config location in the cache, and they are managed by<br>9:22:35 PM: npm WARN config     [`cacache`](http://npm.im/cacache).<br>9:22:35 PM: &gt; hexo-site@0.0.0 build<br>9:22:35 PM: &gt; hexo generate<br>9:22:35 PM: INFO  Validating config<br>9:22:35 PM: INFO  Start processing<br>9:22:36 PM: ERROR &#123;<br>9:22:36 PM:   err: ValidationError: `null` is not a string!<br>9:22:36 PM:       at new WarehouseError (/opt/build/repo/node_modules/warehouse/lib/error.js:14:11)<br>9:22:36 PM:       at new ValidationError (/opt/build/repo/node_modules/warehouse/lib/error/validation.js:5:1)<br>9:22:36 PM:       at SchemaTypeString.validate (/opt/build/repo/node_modules/warehouse/lib/types/string.js:36:13)<br>9:22:36 PM:       at Array.&lt;anonymous&gt; (/opt/build/repo/node_modules/warehouse/lib/schema.js:510:27)<br>9:22:36 PM:       at Schema._applySetters (/opt/build/repo/node_modules/warehouse/lib/schema.js:640:15)<br>9:22:36 PM:       at _Model._insertOne (/opt/build/repo/node_modules/warehouse/lib/model.js:158:12)<br>9:22:36 PM:       at /opt/build/repo/node_modules/warehouse/lib/model.js:179:63<br>9:22:36 PM:       at tryCatcher (/opt/build/repo/node_modules/bluebird/js/release/util.js:16:23)<br>9:22:36 PM:       at /opt/build/repo/node_modules/bluebird/js/release/using.js:185:26<br>9:22:36 PM:       at tryCatcher (/opt/build/repo/node_modules/bluebird/js/release/util.js:16:23)<br>9:22:36 PM:       at Promise._settlePromiseFromHandler (/opt/build/repo/node_modules/bluebird/js/release/promise.js:547:31)<br>9:22:36 PM:       at Promise._settlePromise (/opt/build/repo/node_modules/bluebird/js/release/promise.js:604:18)<br>9:22:36 PM:       at Promise._settlePromise0 (/opt/build/repo/node_modules/bluebird/js/release/promise.js:649:10)<br>9:22:36 PM:       at Promise._settlePromises (/opt/build/repo/node_modules/bluebird/js/release/promise.js:729:18)<br>9:22:36 PM:       at Promise._fulfill (/opt/build/repo/node_modules/bluebird/js/release/promise.js:673:18)<br>9:22:36 PM:       at PromiseArray._resolve (/opt/build/repo/node_modules/bluebird/js/release/promise_array.js:127:19) &#123;<br>9:22:36 PM:     code: undefined<br>9:22:36 PM:   &#125;<br>9:22:36 PM: &#125; Process failed: %s _posts/220705bashshell.md<br>9:22:37 PM: INFO <br>9:22:37 PM: ------------------------------------------------<br>9:22:37 PM: |                                              |<br>9:22:37 PM: |     ________  __            _        __      |<br>9:22:37 PM: |    |_   __  |[  |          (_)      |  ]     |<br>9:22:37 PM: |      | |_ \_| | | __   _   __   .--.| |      |<br>9:22:37 PM: |      |  _|    | |[  | | | [  |/ /&#x27;`\&#x27; |      ||     _| |_     | | | \_/ |, | || \__/  |      |<br>9:22:37 PM: |    |_____|   [___]&#x27;.__.&#x27;_/[___]&#x27;.__.;__]     ||                                              |<br>9:22:37 PM: |             感谢使用 Fluid 主题 !            |<br>9:22:37 PM: |    文档: https://hexo.fluid-dev.com/docs/    |<br>9:22:37 PM: |                                              |<br>9:22:37 PM: ------------------------------------------------<br>9:22:37 PM: INFO  Files loaded in 1.38 s<br>9:22:37 PM: INFO  Generated: css/custom.css<br>9:22:37 PM: INFO  Generated: js/duration.js<br>9:22:37 PM: INFO  Generated: googlefae3894a3fd4fa2c.html<br>9:22:37 PM: INFO  Generated: baidusitemap.xml<br>9:22:37 PM: INFO  Generated: atom.xml<br>9:22:37 PM: INFO  Generated: sitemap.xml<br>9:22:37 PM: INFO  Generated: sitemap.txt<br>9:22:37 PM: INFO  Generated: local-search.xml<br>9:22:37 PM: INFO  Generated: about/index.html<br>9:22:37 PM: INFO  Generated: archives/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/03/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/04/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/05/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/07/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/08/index.html<br>9:22:37 PM: INFO  Generated: links/index.html<br>9:22:37 PM: INFO  Generated: post/220823alist.html<br>9:22:37 PM: INFO  Generated: tags/index.html<br>9:22:37 PM: INFO  Generated: 404.html<br>9:22:37 PM: INFO  Generated: categories/index.html<br>9:22:37 PM: INFO  Generated: post/220818blogtovercel.html<br>9:22:37 PM: INFO  Generated: post/220805sitemap.html<br>9:22:37 PM: INFO  Generated: post/220823proxytuic.html<br>9:22:37 PM: INFO  Generated: post/220809Docker-rss.html<br>9:22:37 PM: INFO  Generated: post/220819docsifyDeploy.html<br>9:22:37 PM: INFO  Generated: post/220715switchhost.html<br>9:22:37 PM: INFO  Generated: post/220807photosync.html<br>9:22:37 PM: INFO  Generated: post/220716visual-3.html<br>9:22:37 PM: INFO  Generated: post/220714NASandZSH.html<br>9:22:37 PM: INFO  Generated: post/220714hlink.html<br>9:22:37 PM: INFO  Generated: post/220709visual-2.html<br>9:22:37 PM: INFO  Generated: post/220706Jellyfin.html<br>9:22:37 PM: INFO  Generated: post/220705setting-qb-tr-IYUUplus.html<br>9:22:37 PM: INFO  Generated: post/220705tcp6-tcp4.html<br>9:22:37 PM: INFO  Generated: post/220518install.html<br>9:22:37 PM: INFO  Generated: post/220703nassystemfix.html<br>9:22:37 PM: INFO  Generated: post/220703rtmp.html<br>9:22:37 PM: INFO  Generated: post/220629networkProblem.html<br>9:22:37 PM: INFO  Generated: post/220531fixcdn.html<br>9:22:37 PM: INFO  Generated: post/220518nasbuy.html<br>9:22:37 PM: INFO  Generated: post/220517PREinstallNAS.html<br>9:22:37 PM: INFO  Generated: post/220518nasPlan.html<br>9:22:37 PM: INFO  Generated: post/220511ssh-connect-to-ssh-github.html<br>9:22:37 PM: INFO  Generated: post/220511sonic2.html<br>9:22:37 PM: INFO  Generated: post/TheWayToNAS.html<br>9:22:37 PM: INFO  Generated: post/220507get-news-efficiently.html<br>9:22:37 PM: INFO  Generated: post/220506feed-me.html<br>9:22:37 PM: INFO  Generated: post/220508picture-server.html<br>9:22:37 PM: INFO  Generated: post/220513DefensivePessimism.html<br>9:22:37 PM: INFO  Generated: post/0524UPDLinks.html<br>9:22:37 PM: INFO  Generated: post/220509freeipv6vps.html<br>9:22:37 PM: INFO  Generated: post/220417apprcn.html<br>9:22:37 PM: INFO  Generated: post/220426how-to-search-English-words.html<br>9:22:37 PM: INFO  Generated: post/0517UPDAphorisms.html<br>9:22:37 PM: INFO  Generated: post/220330a-network-problem-solve.html<br>9:22:37 PM: INFO  Generated: post/220327About-Learning-with-a-Video.html<br>9:22:37 PM: INFO  Generated: post/220326Reason-to-Learn-English.html<br>9:22:37 PM: INFO  Generated: post/220326hello-myblog.html<br>9:22:37 PM: INFO  Generated: post/TODOlist.html<br>9:22:37 PM: INFO  Generated: index.html<br>9:22:37 PM: INFO  Generated: post/220325codewithvscode.html<br>9:22:37 PM: INFO  Generated: img/avatar.png<br>9:22:37 PM: INFO  Generated: xml/local-search.xml<br>9:22:37 PM: INFO  Generated: post/220324firstblog.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/2/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/05/page/2/index.html<br>9:22:37 PM: INFO  Generated: archives/page/2/index.html<br>9:22:37 PM: INFO  Generated: page/5/index.html<br>9:22:37 PM: INFO  Generated: categories/学习过程/英语学习/index.html<br>9:22:37 PM: INFO  Generated: img/loading.gif<br>9:22:37 PM: INFO  Generated: img/fluid.png<br>9:22:37 PM: INFO  Generated: img/police_beian.png<br>9:22:37 PM: INFO  Generated: img/Ficon.png<br>9:22:37 PM: INFO  Generated: img/Wechat.jpg<br>9:22:37 PM: INFO  Generated: archives/page/4/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/4/index.html<br>9:22:37 PM: INFO  Generated: archives/page/5/index.html<br>9:22:37 PM: INFO  Generated: categories/share/index.html<br>9:22:37 PM: INFO  Generated: archives/page/3/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/3/index.html<br>9:22:37 PM: INFO  Generated: categories/idea/index.html<br>9:22:37 PM: INFO  Generated: archives/2022/page/5/index.html<br>9:22:37 PM: INFO  Generated: categories/Problems/index.html<br>9:22:37 PM: INFO  Generated: tags/network/index.html<br>9:22:37 PM: INFO  Generated: categories/学习教程/index.html<br>9:22:37 PM: INFO  Generated: categories/Diary/index.html<br>9:22:37 PM: INFO  Generated: tags/proxy/index.html<br>9:22:37 PM: INFO  Generated: tags/share/index.html<br>9:22:37 PM: INFO  Generated: tags/Test/index.html<br>9:22:37 PM: INFO  Generated: tags/vscode/index.html<br>9:22:37 PM: INFO  Generated: tags/github/index.html<br>9:22:37 PM: INFO  Generated: tags/English/index.html<br>9:22:37 PM: INFO  Generated: tags/Geography/index.html<br>9:22:37 PM: INFO  Generated: tags/Hexo/index.html<br>9:22:37 PM: INFO  Generated: tags/image/index.html<br>9:22:37 PM: INFO  Generated: tags/F1/index.html<br>9:22:37 PM: INFO  Generated: tags/video/index.html<br>9:22:37 PM: INFO  Generated: tags/font/index.html<br>9:22:37 PM: INFO  Generated: tags/ipv6/index.html<br>9:22:37 PM: INFO  Generated: tags/rss/index.html<br>9:22:37 PM: INFO  Generated: tags/information/index.html<br>9:22:37 PM: INFO  Generated: tags/blog/index.html<br>9:22:37 PM: INFO  Generated: tags/vps/index.html<br>9:22:37 PM: INFO  Generated: tags/Trojan/index.html<br>9:22:37 PM: INFO  Generated: tags/ilm/index.html<br>9:22:37 PM: INFO  Generated: tags/git/index.html<br>9:22:37 PM: INFO  Generated: tags/strategy/index.html<br>9:22:37 PM: INFO  Generated: tags/docker/index.html<br>9:22:37 PM: INFO  Generated: tags/ssh/index.html<br>9:22:37 PM: INFO  Generated: tags/pt/index.html<br>9:22:37 PM: INFO  Generated: tags/film/index.html<br>9:22:37 PM: INFO  Generated: tags/portainer/index.html<br>9:22:37 PM: INFO  Generated: tags/计算机视觉/index.html<br>9:22:37 PM: INFO  Generated: tags/shell/index.html<br>9:22:37 PM: INFO  Generated: tags/docsify/index.html<br>9:22:37 PM: INFO  Generated: tags/host/index.html<br>9:22:37 PM: INFO  Generated: tags/alist/index.html<br>9:22:37 PM: INFO  Generated: tags/tuic/index.html<br>9:22:37 PM: INFO  Generated: page/2/index.html<br>9:22:37 PM: INFO  Generated: tags/vercel/index.html<br>9:22:37 PM: INFO  Generated: page/3/index.html<br>9:22:37 PM: INFO  Generated: tags/HiHysteria/index.html<br>9:22:37 PM: INFO  Generated: tags/list/index.html<br>9:22:37 PM: INFO  Generated: page/4/index.html<br>9:22:37 PM: INFO  Generated: categories/教程/index.html<br>9:22:37 PM: INFO  Generated: categories/学习过程/index.html<br>9:22:37 PM: INFO  Generated: tags/nas/index.html<br>9:22:37 PM: INFO  Generated: categories/教程/page/2/index.html<br>9:22:37 PM: INFO  Generated: tags/nas/page/2/index.html<br>9:22:37 PM: INFO  Generated: css/highlight-dark.css<br>9:22:37 PM: INFO  Generated: css/gitalk.css<br>9:22:37 PM: INFO  Generated: js/boot.js<br>9:22:37 PM: INFO  Generated: js/color-schema.js<br>9:22:37 PM: INFO  Generated: css/highlight.css<br>9:22:37 PM: INFO  Generated: js/img-lazyload.js<br>9:22:37 PM: INFO  Generated: js/leancloud.js<br>9:22:37 PM: INFO  Generated: js/local-search.js<br>9:22:37 PM: INFO  Generated: js/plugins.js<br>9:22:37 PM: INFO  Generated: js/events.js<br>9:22:37 PM: INFO  Generated: js/utils.js<br>9:22:37 PM: INFO  Generated: css/main.css<br>9:22:37 PM: INFO  Generated: img/default.png<br>9:22:37 PM: INFO  Generated: img/Being-grey.png<br>9:22:37 PM: INFO  Generated: img/Beijing.png<br>9:22:37 PM: INFO  Generated: css/sarasa-mono-sc-regular.ttf<br>9:22:37 PM: INFO  146 files generated in 626 ms<br>9:22:37 PM: ​<br>9:22:37 PM: (build.command completed in 2.7s)<br>9:22:37 PM: ​<br>9:22:37 PM: ────────────────────────────────────────────────────────────────<br>9:22:37 PM:   2. Deploy site                                                <br>9:22:37 PM: ────────────────────────────────────────────────────────────────<br>9:22:37 PM: ​<br>9:22:37 PM: Starting to deploy site from &#x27;public&#x27;<br>9:22:37 PM: Creating deploy tree <br>9:22:37 PM: Creating deploy upload records<br>9:22:38 PM: 129 new files to upload<br>9:22:38 PM: 0 new functions to upload<br>9:22:38 PM: 0% complete<br>9:22:38 PM: 5% complete<br>9:22:38 PM: 10% complete<br>9:22:38 PM: 15% complete<br>9:22:38 PM: 20% complete<br>9:22:38 PM: 25% complete<br>9:22:38 PM: 30% complete<br>9:22:38 PM: 35% complete<br>9:22:39 PM: 40% complete<br>9:22:39 PM: 45% complete<br>9:22:39 PM: 50% complete<br>9:22:39 PM: 55% complete<br>9:22:39 PM: 60% complete<br>9:22:39 PM: 65% complete<br>9:22:39 PM: 70% complete<br>9:22:39 PM: 75% complete<br>9:22:39 PM: 80% complete<br>9:22:39 PM: 85% complete<br>9:22:39 PM: 90% complete<br>9:22:39 PM: 95% complete<br>9:22:40 PM: 100% complete<br>9:22:40 PM: Site deploy was successfully initiated<br>9:22:40 PM: ​<br>9:22:40 PM: (Deploy site completed in 2.1s)<br>9:22:40 PM: ​<br>9:22:40 PM: ────────────────────────────────────────────────────────────────<br>9:22:40 PM:   Netlify Build Complete                                        <br>9:22:40 PM: ────────────────────────────────────────────────────────────────<br>9:22:40 PM: ​<br>9:22:40 PM: (Netlify Build completed in 4.9s)<br>9:22:40 PM: Caching artifacts<br>9:22:40 PM: Started saving node modules<br>9:22:40 PM: Finished saving node modules<br>9:22:40 PM: Started saving build plugins<br>9:22:40 PM: Finished saving build plugins<br>9:22:40 PM: Started saving pip cache<br>9:22:40 PM: Finished saving pip cache<br>9:22:40 PM: Started saving emacs cask dependencies<br>9:22:40 PM: Finished saving emacs cask dependencies<br>9:22:40 PM: Started saving maven dependencies<br>9:22:40 PM: Finished saving maven dependencies<br>9:22:40 PM: Started saving boot dependencies<br>9:22:40 PM: Starting post processing<br>9:22:40 PM: Finished saving boot dependencies<br>9:22:40 PM: Started saving rust rustup cache<br>9:22:40 PM: Finished saving rust rustup cache<br>9:22:40 PM: Started saving go dependencies<br>9:22:40 PM: Finished saving go dependencies<br>9:22:40 PM: Post processing - HTML<br>9:22:41 PM: Build script success<br>9:22:43 PM: Uploading Cache of size 152.9MB<br>9:22:45 PM: Finished processing build request in 32.554939097s<br>9:22:46 PM: Post processing - header rules<br>9:22:46 PM: Post processing - redirect rules<br>9:22:46 PM: Post processing done<br>9:22:49 PM: Site is live ✨<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">用vercel没几天后dns就被污染了，换！</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
    <category term="vercel" scheme="http://blog.1314171.xyz/tags/vercel/"/>
    
    <category term="netlify" scheme="http://blog.1314171.xyz/tags/netlify/"/>
    
  </entry>
  
  <entry>
    <title>搭建网盘管理界面</title>
    <link href="http://blog.1314171.xyz/post/220823alist.html"/>
    <id>http://blog.1314171.xyz/post/220823alist.html</id>
    <published>2022-08-24T12:08:05.000Z</published>
    <updated>2022-08-24T12:16:49.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="https://alist-doc.nn.ci/docs/intro">alist官方文档</a></p><h1 id="安装，根据官方文档教程安装即可"><a href="#安装，根据官方文档教程安装即可" class="headerlink" title="安装，根据官方文档教程安装即可"></a>安装，根据官方文档教程安装即可</h1><p>备份我的docker命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d --restart=always -v /share/Docker/alist:/opt/alist/data -p 5244:5244 --name=&quot;alist&quot; xhofe/alist:latest<br></code></pre></td></tr></table></figure><p>没有什么坑~</p><p><a href="http://v6.1314171.xyz:5008/">我的alist站点链接</a></p>]]></content>
    
    
    <summary type="html">利用alist搭建一个网盘管理界面方便分享网盘资源，高效利用网盘空间</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="nas" scheme="http://blog.1314171.xyz/tags/nas/"/>
    
    <category term="docker" scheme="http://blog.1314171.xyz/tags/docker/"/>
    
    <category term="alist" scheme="http://blog.1314171.xyz/tags/alist/"/>
    
  </entry>
  
  <entry>
    <title>再识proxy--tuic协议</title>
    <link href="http://blog.1314171.xyz/post/220823proxytuic.html"/>
    <id>http://blog.1314171.xyz/post/220823proxytuic.html</id>
    <published>2022-08-22T17:27:23.000Z</published>
    <updated>2022-08-22T17:47:03.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tuic！tuic！"><a href="#tuic！tuic！" class="headerlink" title="tuic！tuic！"></a>tuic！tuic！</h1><p>因为此前我尝试用香港的可怜的256mb内存的vps跑docker，导致香港的服务器崩溃，我一直放着没有管他。</p><p>今天有时间重启维护它，干脆重装一下系统。想到煎包之前又体验了个新的协议tuic，我便询问它和hyhi的优劣来，他说：</p><blockquote><p>延迟更低，而且支持0-RTT</p></blockquote><p>我听的云里雾里，在他的建议下我便开始了我的尝试</p><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>本文档为本人学习笔记，仅供学习使用，请勿用作违法用途。请任何看到本文档的组织或个人在30秒内立即停止使用本文档提及的技术做违反当地法律的内容，请勿将文档及相关链接发至百度贴吧等公开论坛。</p><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ul><li><a href="https://github.com/EAimTY/tuic">tuic的github仓库</a></li><li><a href="https://lala.im/8424.html">我参考的教程:内容已有些过时</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><blockquote><p>基本按照上面略有过时的教程来</p></blockquote><p>1.下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt -y update<br><span class="hljs-comment"># 这个-y是用来免去输入y确认的参数</span><br>apt -y install wget certbot<br><br><span class="hljs-built_in">mkdir</span> /opt/tuic &amp;&amp; <span class="hljs-built_in">cd</span> /opt/tuic<br><br>wget https://github.com/EAimTY/tuic/releases/download/0.8.5/tuic-server-0.8.5-x86_64-linux-gnu<br><span class="hljs-built_in">chmod</span> +x tuic-server-0.8.5-x86_64-linux-gnu<br><br><span class="hljs-comment"># 注意这里下载的时候请下载对应（0.8.5）的最新版本，</span><br><span class="hljs-comment"># 见https://github.com/EAimTY/tuic/releases/ 注释：马火星</span><br></code></pre></td></tr></table></figure><blockquote><p>第一遍我没有下载最新版本，下次看别的教程要注意，我也会在代码中提醒后人</p></blockquote><p>2.新建config.json(服务端配置)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim config.json<br></code></pre></td></tr></table></figure><p>填入：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;token&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;example&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;certificate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/opt/tuic/fullchain.pem&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;private_key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/opt/tuic/privkey.pem&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;congestion_controller&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bbr&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;h3&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>若使用ipv6请将 <code>0.0.0.0</code> 改为 <code>::</code> (代表任意ipv6地址)<a href="https://github.com/EAimTY/tuic#how-can-i-listen-both-ipv4-and-ipv6-on-tuic-server--tuic-clients-socks5-server">参考tuic文档</a><br><img src="https://s2.loli.net/2022/08/23/MK2vbhkqZdj4zEs.png"></p><blockquote><p>这个坑是煎包之前踩过的，但他开始没告诉我，信誓旦旦的说这里有个小坑，于是我踩进去了，在走了第一遍流程之后才知道</p></blockquote><p>3.新建systemed配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /lib/systemd/system/tuic.service<br></code></pre></td></tr></table></figure><p>写入配置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Delicately-TUICed high-performance proxy built <span class="hljs-literal">on</span> top of the QUIC protocol<br><span class="hljs-attr">Documentation</span>=https://github.com/EAimTY/tuic<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">User</span>=root<br><span class="hljs-attr">WorkingDirectory</span>=/opt/tuic<br><span class="hljs-attr">ExecStart</span>=/opt/tuic/tuic-server-<span class="hljs-number">0.8</span>.<span class="hljs-number">5</span>-x<span class="hljs-number">86_64</span>-linux-gnu -c config.json<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartPreventExitStatus</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">5</span><br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><blockquote><p>注意版本号</p></blockquote><p>用get.acme.sh申请证书（也可以参考上面的教程）</p><p>详见我上一篇相关<a href="https://blog.1314171.xyz/post/220509freeipv6vps.html#4-%E4%BB%8E-letsencrypt-%E7%94%9F%E6%88%90%E5%85%8D%E8%B4%B9%E7%9A%84%E8%AF%81%E4%B9%A6">博客</a></p><p>转存证书记得按照如下路径转存fullchain和privkey</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">acme.sh --install-cert -d yourdomain.com<br>--fullchain-file    /opt/tuic/fullchain.pem    \<br>--key-file       /opt/tuic/privkey.pem  \<br></code></pre></td></tr></table></figure><blockquote><p>在这里我遇到了跑通前的最后一个坑，分辨清楚fullchain是谁）</p></blockquote><blockquote><p>同时在这里第一次申请证书的时候我还套了cdn，阴差阳错的给CDN主机申请了证书）</p></blockquote><p>4.启动tuic服务并设置开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> --now tuic.service<br></code></pre></td></tr></table></figure><p>相关指令还有：<code>systemctl status tuic.service</code>能展示服务状态，<code>systemctl stop/start/restart tuic.service</code>等</p><h2 id="客户端-win"><a href="#客户端-win" class="headerlink" title="客户端(win)"></a>客户端(win)</h2><p>在<a href="https://github.com/EAimTY/tuic/releases">github release</a>下载你系统对应的客户端</p><p>下载与服务端对应版本的<br>如：<a href="https://github.com/EAimTY/tuic/releases/download/0.8.5/tuic-client-0.8.5-x86_64-windows-gnu.exe">https://github.com/EAimTY/tuic/releases/download/0.8.5/tuic-client-0.8.5-x86_64-windows-gnu.exe</a></p><p>通过2rayN分流</p><p>之前提到的那篇略有过时的博客写的很清楚，<a href="https://lala.im/8424.html">请拉到该博客末尾查看</a></p><p>至此基本上遇到的坑都该提示的提示了</p><p>over</p><p><img src="https://s2.loli.net/2022/08/23/xjb2ocJkZ7NwtQp.png" alt="测速展示（本地北京移动千兆下行百兆上行）"></p><h1 id="v2rayn更新支持tuic"><a href="#v2rayn更新支持tuic" class="headerlink" title="v2rayn更新支持tuic"></a>v2rayn更新支持tuic</h1><p><a href="https://github.com/2dust/v2rayN/issues/2477">对应的issue</a></p><p>使用方法见<a href="https://github.com/2dust/v2rayN/releases/tag/5.30">官方更新日志</a></p><p>但我没整成功）sad</p>]]></content>
    
    
    <summary type="html">tuic是一个基于quic协议的高性能代理</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps" scheme="http://blog.1314171.xyz/tags/vps/"/>
    
    <category term="proxy" scheme="http://blog.1314171.xyz/tags/proxy/"/>
    
    <category term="ipv6" scheme="http://blog.1314171.xyz/tags/ipv6/"/>
    
    <category term="tuic" scheme="http://blog.1314171.xyz/tags/tuic/"/>
    
  </entry>
  
  <entry>
    <title>搭建docsify用作未来精工wiki</title>
    <link href="http://blog.1314171.xyz/post/220819docsifyDeploy.html"/>
    <id>http://blog.1314171.xyz/post/220819docsifyDeploy.html</id>
    <published>2022-08-19T08:04:23.000Z</published>
    <updated>2022-08-19T08:40:49.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h1><p>选择docsify是因为它相较于Vue更加的便捷简单，同时文档清晰（过于简洁，需要自己摸索，有一定html代码能力）有中文文档。</p><p><a href="https://docsify.js.org/#/">docsify官网</a><br><a href="https://www.cnblogs.com/xhemj/p/How-to-Use-Docsify.html">可参考的博客</a></p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>按照官方文档将自己的需求顺一遍就行了</p><p>要尝试</p><p>然后将源码放在github上</p><h2 id="上传源码"><a href="#上传源码" class="headerlink" title="上传源码"></a>上传源码</h2><li><a href="/post/220325codewithvscode"  tags="">参考我的这篇博客</li><h2 id="使用vercel部署"><a href="#使用vercel部署" class="headerlink" title="使用vercel部署"></a>使用vercel部署</h2><p><a href="https://www.readfog.com/a/1633646315981344768">参考</a></p><p>注意选择到本地初始化的docs根目录<br><img src="https://s2.loli.net/2022/08/19/QDytZbBNnLzpHRJ.png"></p><p>成功！</p><p>最后的成果：<a href="https://bitft-wiki.vercel.app/">点这里</a></p>]]></content>
    
    
    <summary type="html">暑假社会实践要做个指南，因此需要部署一个静态网页</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vercel" scheme="http://blog.1314171.xyz/tags/vercel/"/>
    
    <category term="docsify" scheme="http://blog.1314171.xyz/tags/docsify/"/>
    
  </entry>
  
  <entry>
    <title>将本博客从GithubPage迁移到vercel</title>
    <link href="http://blog.1314171.xyz/post/220818blogtovercel.html"/>
    <id>http://blog.1314171.xyz/post/220818blogtovercel.html</id>
    <published>2022-08-18T16:19:30.000Z</published>
    <updated>2022-08-18T16:36:07.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h1><h2 id="01注册！（之前我在整hexo评论的时候注册过了"><a href="#01注册！（之前我在整hexo评论的时候注册过了" class="headerlink" title="01注册！（之前我在整hexo评论的时候注册过了"></a>01注册！（之前我在整hexo评论的时候注册过了</h2><p>（题外话：我当时整评论插件居然没有写一篇博客，令人震惊，看起来官方和网上的评论插件的使用教程非常完美我当时应该很顺利的整下来了，其实写博客这种事情，就是为了给自己看，最后不管是重新部署还是升级，都可以有个参考，同时也是成长的过程）</p><p><a href="https://vercel.com/">vercel官网</a></p><p>在官网注册就好了，可以先绑定github,方便后续联动</p><h3 id="这里放几个参考博客可以看看注册过程"><a href="#这里放几个参考博客可以看看注册过程" class="headerlink" title="这里放几个参考博客可以看看注册过程"></a>这里放几个参考博客可以看看注册过程</h3><p><a href="https://zhuanlan.zhihu.com/p/342790013">这篇教程适合于注册之后用vercel新建一个hexo博客</a></p><p><a href="https://fmcf.cc/technology/400/">这个博客Ui很好看，但没啥内容</a></p><h2 id="02迁移"><a href="#02迁移" class="headerlink" title="02迁移"></a>02迁移</h2><p>新建；<br><img src="https://s2.loli.net/2022/08/18/fVqH3cIdhD7Ui9r.png"></p><p>选择hexo在的目录导入（注意这里的仓库不是hexo-github-deploy插件生成的静态html文件的main分支，需要有source分支将本地hexo源码上传）<br><img src="https://s2.loli.net/2022/08/18/C3mPY56vHbQ9UnK.png"></p><p>设置好名字（建议简短，因为vercel生成的临时白嫖域名就是你的名字.vercel.app，当然也可以换自己的域名)<br><img src="https://s2.loli.net/2022/08/18/3cHx8tiMDZfRsCQ.png"></p><p>直接部署即可<br>然后就部署成功了！</p><p>以后每次更新源码，只要审查preview能否正常使用并发布即可（应该有自动化流程）<br><img src="https://s2.loli.net/2022/08/18/L9uamWKdzSUhA6J.png"></p><p>如果你把默认分支给改为你放源码的分支，这样就能触发上述描述的自动更新：<br><img src="https://s2.loli.net/2022/08/19/7oP1tfkAVlEZpSM.png"></p><h2 id="03关于域名-html后缀的解决办法"><a href="#03关于域名-html后缀的解决办法" class="headerlink" title="03关于域名.html后缀的解决办法"></a>03关于域名.html后缀的解决办法</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;li&gt;&lt; a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;/post/220518nasPlan&quot;</span>  <span class="hljs-attribute">tags</span>=<span class="hljs-string">&quot;&quot;</span>&gt;我想拿nas干点啥，以及我的后路&lt;/li&gt;<br></code></pre></td></tr></table></figure><p>在我的博客中类似这样的html语法的链接，在vercel中不能直接跳转到220518nasPlan.html,导致无法载入正常的网页</p><h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>通过和舍友交流，以及我的检索，我找到了如下博客</p><p><a href="https://blog.ccknbc.cc/posts/i-dont-really-want-html/">我真的不想要.html</a></p><p>这里面给指明了原因和解决问题方向</p><blockquote><p>在路由表默认逻辑上，Vervel,Gitlab,一致,Github,Gitee&#96;&#96;Coding,Netlify一致…… ……用户可以在链接后加上.html则可正常访问相应内容</p></blockquote><p>在文章中指出路由表vercel和github默认选项不同</p><p>他给出的解决办法是更改（新建）项目源码中Vercel.json，配置Routes</p><p>但现在这个方法官方不推荐，过时了</p><p>查看官方文档，找到</p><p><img src="https://s2.loli.net/2022/08/18/AMyiCmXNJRdOvDW.png"><br>这里仅通过简单的设置即可将默认改成和github相同形式</p><p><a href="https://vercel.com/docs/project-configuration#project-configuration/clean-urls">vercel官方文档</a></p><p>大功告成！</p><h2 id="04将域名从github上改绑到vercel上"><a href="#04将域名从github上改绑到vercel上" class="headerlink" title="04将域名从github上改绑到vercel上"></a>04将域名从github上改绑到vercel上</h2><p><img src="https://s2.loli.net/2022/08/18/ABek2L61JZWo5Nr.png"><br>在github上remove掉</p><p><img src="https://s2.loli.net/2022/08/18/DeLNrVj1O2G597F.png"></p><p>直接添加域名，会发现<br><img src="https://s2.loli.net/2022/08/19/79zMtFxpAb4jgB6.png"></p><p>因此要按照提示在cloudflare（或者你自己的域名解析商）改掉对应域名的CNAME解析由<br><img src="https://s2.loli.net/2022/08/18/akZr1FY6SlqUoec.png"><br>改成</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">cname<span class="hljs-selector-class">.vercel-dns</span>.com<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/08/19/Z29y3GBYDvTlN1p.png"></p><p>然后在vercel中改域名即可<br><img src="https://s2.loli.net/2022/08/19/x2DQIXGgU4acJ68.png"></p><p>而且惊喜的发现，有Let’s Encrypt的证书！</p><p><img src="https://s2.loli.net/2022/08/19/H1Yu5W6ClnEbNBQ.png"></p><p>至此，迁移完成。检查各项功能正常。</p><h1 id="一些感受"><a href="#一些感受" class="headerlink" title="一些感受"></a>一些感受</h1><p>千万不要害怕阅读英文文档，克制自己全网页翻译的坏习惯，可以部分不确定的句子单独翻译，锻炼自己的英文阅读能力</p>]]></content>
    
    
    <summary type="html">因为有服务需要部署在vercel上所以提前用我的博客迁移过来试试，同时vercel可以被搜索引擎爬取到,一举两得</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
    <category term="vercel" scheme="http://blog.1314171.xyz/tags/vercel/"/>
    
  </entry>
  
  <entry>
    <title>把博客添加到搜索引擎中</title>
    <link href="http://blog.1314171.xyz/post/220805sitemap.html"/>
    <id>http://blog.1314171.xyz/post/220805sitemap.html</id>
    <published>2022-08-18T15:17:51.000Z</published>
    <updated>2022-08-18T15:17:51.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><p>我参考的教程<a href="https://segmentfault.com/a/1190000037550362">点这里</a></p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>百度爬虫被github杀了</p><p>我的博客部署在github上</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>连接超时<br><br>DNS解析ip地址:<span class="hljs-number">185</span>.***.***.<span class="hljs-number">153</span><br><br>抓取机房:联通<br><br>UA:Mozilla<span class="hljs-regexp">/5.0 (compatible; Baiduspider/</span><span class="hljs-number">2.0</span>; +http:<span class="hljs-regexp">//</span>www.baidu.com<span class="hljs-regexp">/search/</span>spider.html)<br>修改建议<br><br>请确保sitemap地址正确，再重新提交。<br></code></pre></td></tr></table></figure><p><a href="https://github.com/Lete114/Hexo-SEO-AutoPush">等会尝试一下这个</a></p><h1 id="220818更新，不用换方法了，博客放到vercel上就行"><a href="#220818更新，不用换方法了，博客放到vercel上就行" class="headerlink" title="220818更新，不用换方法了，博客放到vercel上就行"></a>220818更新，不用换方法了，博客放到vercel上就行</h1>]]></content>
    
    
    <summary type="html">为了让自己写的东西有更大的贡献，尝试让搜索引擎收录我的博客</summary>
    
    
    
    
    <category term="blog" scheme="http://blog.1314171.xyz/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>自建rss服务器(freshrss+rsshub)</title>
    <link href="http://blog.1314171.xyz/post/220809Docker-rss.html"/>
    <id>http://blog.1314171.xyz/post/220809Docker-rss.html</id>
    <published>2022-08-10T16:46:39.000Z</published>
    <updated>2022-10-16T03:55:40.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么选freshrss"><a href="#为什么选freshrss" class="headerlink" title="为什么选freshrss"></a>为什么选freshrss</h1><p>一开始打算使用TTRSS,但ttrss上手太麻烦，还要设置登陆的URL必须对应，而我既要公网访问又要内网来设置它，也不想研究这些具体是啥。其实TTRSS官方的文档应该写的挺清楚的，真正让我转移目标的原因是docker跑不起来，解决了一步log又爆出新的错根本跑不动。其中有一个是说Docker自己建的文件没有写入权限。这个之后再讲。还有就是奇奇怪怪的和数据库不搭配之类的。可是我用的官方的DockerCompose,还出问题，并且因为URL的事情我并不能看到图形界面来调试，最终放弃。</p><p><strong>TTRSS 的报错</strong></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs smali">Please fix errors indicated by the following messages:<br><br>    ICONS_DIR defined in config.php is<span class="hljs-built_in"> not </span>writable (chmod -R 777 feed-icons).<br><br>You might want to<span class="hljs-built_in"> check </span>tt-rss wiki<span class="hljs-built_in"> or </span>the forums for more information.<br><br>Please search the forums before creating<span class="hljs-built_in"> new </span>topic for your question.<br></code></pre></td></tr></table></figure><p>后来再百度关键词”docker rss”又有了freshrss这样的新选择，尝试之后发现我至少能看到图形界面了</p><p>而在图形界面部署中间又遇到了没有写入权限的问题。我依旧赋予777权限等办法轮番尝试，依旧不行。最后我反思整个过程：</p><ol><li>我之前部署的镜像也有挂载路径的需求，而且也需要写入文件，原来就没报错过。所以应该不是我操作上的问题。</li><li>已知的谷歌到的赋权方法我都试过了，没有效果。</li><li>ls -al检查发现文件的所属用户组是奇怪的数字，我本机没有这样编号的用户组。</li></ol><p>回想之前我在整相册的时候该过系统文件夹权限的设置，我意识到可能是这里出问题了</p><li><a href="/post/220807photosync"  tags="里面的教程叫我：“请首先开启高级文件夹权限，才可以单独设置每个文件夹权限”"></li>“请首先开启高级文件夹权限，才可以单独设置每个文件夹权限”<p>关闭这个选项后，万事大吉</p><p>freshrss解决权限问题就能用了，而重新试了试TTRSS发现，解决权限问题还跑不起来，累了</p><p>于是就用freshrss了</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://cloud.tencent.com/developer/article/1964176">freshrss部署教程</a></p><p>官方的部署写的不是很清楚，按这个来亲测能用，自己改一下挂载路径和端口即可</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs awk">version: <span class="hljs-string">&quot;3&quot;</span><br><br>services:<br><br>  freshrss-app:<br>    image: freshrss/freshrss:latest<br>    container_name: freshrss-app<br>    hostname: freshrss-app<br>    restart: always<br>    ports:<br>      - <span class="hljs-number">18110</span>:<span class="hljs-number">80</span><br>    depends_on:<br>      - freshrss-db<br>    volumes:<br>      - <span class="hljs-regexp">/share/</span>Docker<span class="hljs-regexp">/rss/</span>data:<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/FreshRSS/</span>data<br>      - <span class="hljs-regexp">/share/</span>Docker<span class="hljs-regexp">/rss/</span>extensions:<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/FreshRSS/</span>extensions<br>    environment:<br>      CRON_MIN: <span class="hljs-string">&#x27;*/20&#x27;</span> <span class="hljs-comment">#自动更新时间</span><br>      TZ: Asia/Shanghai<br></code></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>使用时发现有些源需要代理，于是有了整代理的理由。</p><p>代理因为内存占用过多且我浅试了一下连不上，决定在vps上重新部署rss服务器了</p><p>然后突然想起来我vps是纯v6的，还得设置端口转发</p><p>再一看256mb内存很吃紧了，遂放弃</p><h2 id="20221016更新"><a href="#20221016更新" class="headerlink" title="20221016更新"></a>20221016更新</h2><p>因为有了个1G的服务器，因此可以把rss部署了</p><p>因为需求比较浅，所以用SQlite就行，docker-compose中数据库部分可以删掉了</p><p>然后用nginx反代和cf的代理（ipv4支持）</p><p>加上证书</p><h2 id="fever-API接口："><a href="#fever-API接口：" class="headerlink" title="fever API接口："></a>fever API接口：</h2><p>TODO:</p>]]></content>
    
    
    <summary type="html">最大化利用自己的nas，正好现在用的inoreader国内被墙了</summary>
    
    
    
    
    <category term="nas" scheme="http://blog.1314171.xyz/tags/nas/"/>
    
    <category term="docker" scheme="http://blog.1314171.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>nas照片备份同步</title>
    <link href="http://blog.1314171.xyz/post/220807photosync.html"/>
    <id>http://blog.1314171.xyz/post/220807photosync.html</id>
    <published>2022-08-10T16:41:45.000Z</published>
    <updated>2022-08-10T16:41:45.843Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://post.smzdm.com/p/az3o0e4o/">冷阿菌的博客</a></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>按照上述博客教程，在家用局域网很好的完成了同步。AI识别还是有些缓慢（453Dmini)，大的视频文件传输较慢</p><p>但我整完了才发现我爸妈没这个需求</p><p>于是就不了了之了</p><p>甚至还让我之后部署Docker遇到了新的问题</p><p>详情跳转：</p><li><a href="/post/220809Docker-rss"  tags="自建rss服务器(freshrss+rsshub)"></li>]]></content>
    
    
    <summary type="html">为了更好的利用nas资源，想让自己和爸妈的手机能随时在家同步相册</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="nas" scheme="http://blog.1314171.xyz/tags/nas/"/>
    
  </entry>
  
  <entry>
    <title>管理更改本地host</title>
    <link href="http://blog.1314171.xyz/post/220715switchhost.html"/>
    <id>http://blog.1314171.xyz/post/220715switchhost.html</id>
    <published>2022-08-07T09:38:33.000Z</published>
    <updated>2022-08-09T15:33:04.588Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用switch-host"><a href="#使用switch-host" class="headerlink" title="使用switch host"></a>使用switch host</h1><p><a href="https://swh.app/">官网</a></p><h2 id="可以添加远程host"><a href="#可以添加远程host" class="headerlink" title="可以添加远程host"></a>可以添加远程host</h2><p>如<a href="https://gitee.com/monkeycc/GitHub520?_from=gitee_search#%E4%B8%80%E4%BB%8B%E7%BB%8D">这是一个githubhost</a></p><h2 id="可以本地添加"><a href="#可以本地添加" class="headerlink" title="可以本地添加"></a>可以本地添加</h2><p>使用<a href="https://dnschecker.org/#A/image.tmdb.org">dnschecker</a>检查国内可用地址<br>手动添加进去</p>]]></content>
    
    
    <summary type="html">如题</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="network" scheme="http://blog.1314171.xyz/tags/network/"/>
    
    <category term="host" scheme="http://blog.1314171.xyz/tags/host/"/>
    
  </entry>
  
  <entry>
    <title>220716visual-3</title>
    <link href="http://blog.1314171.xyz/post/220716visual-3.html"/>
    <id>http://blog.1314171.xyz/post/220716visual-3.html</id>
    <published>2022-08-07T09:37:56.000Z</published>
    <updated>2022-08-07T09:37:56.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><p><a href="https://zhuanlan.zhihu.com/p/36281721s">理解stride</a></p><h1 id="阶段性作业：手写数字识别"><a href="#阶段性作业：手写数字识别" class="headerlink" title="阶段性作业：手写数字识别"></a>阶段性作业：手写数字识别</h1><p>我的代码放在我的github中了<br><a href="https://github.com/TT2TER/Handwritten-number-recognition">欢迎star</a></p>]]></content>
    
    
    <summary type="html">飞鹰队视觉组第三节笔记</summary>
    
    
    
    <category term="学习过程" scheme="http://blog.1314171.xyz/categories/%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B/"/>
    
    
    <category term="计算机视觉" scheme="http://blog.1314171.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
  <entry>
    <title>威联通nas和zsh</title>
    <link href="http://blog.1314171.xyz/post/220714NASandZSH.html"/>
    <id>http://blog.1314171.xyz/post/220714NASandZSH.html</id>
    <published>2022-07-14T16:27:37.000Z</published>
    <updated>2022-08-09T15:30:01.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://post.smzdm.com/p/a785zrr5/">下载和设置zsh</a></p><h1 id="没必要，一个nas也就是有时候用用，bash就bash了"><a href="#没必要，一个nas也就是有时候用用，bash就bash了" class="headerlink" title="没必要，一个nas也就是有时候用用，bash就bash了"></a>没必要，一个nas也就是有时候用用，bash就bash了</h1><hr><li><a href="/post/TheWayToNAS">返回TheWayToNAS系列目录</li></a>]]></content>
    
    
    <summary type="html">改终端</summary>
    
    
    
    <category term="学习教程" scheme="http://blog.1314171.xyz/categories/%E5%AD%A6%E4%B9%A0%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="nas" scheme="http://blog.1314171.xyz/tags/nas/"/>
    
    <category term="shell" scheme="http://blog.1314171.xyz/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>linux硬链接工具</title>
    <link href="http://blog.1314171.xyz/post/220714hlink.html"/>
    <id>http://blog.1314171.xyz/post/220714hlink.html</id>
    <published>2022-07-14T16:26:06.000Z</published>
    <updated>2022-08-07T02:27:40.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>尝试了一下<a href="https://github.com/jxxghp/nas-tools">nas-tools</a>功能很全，但是没有掌控感。日志和功能描述都不是很清晰。</p><p>转而用了hlink</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://hlink.likun.me/">hlink官网</a><br><a href="https://post.smzdm.com/p/aqxznl42/">NAS相关 篇五：硬链接神器hlink使用教程（威联通篇</a></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>记得配置环境变量</p><p>威联通系统重启会还原环境变量，要把配环境变量每次开机自启动执行一遍<br><a href="https://blog.csdn.net/w2009211777/article/details/123853355">Linux目录之&#x2F;usr与&#x2F;opt与&#x2F;dev</a></p><h2 id="hlink使用"><a href="#hlink使用" class="headerlink" title="hlink使用"></a>hlink使用</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">hlink <span class="hljs-attribute">-e</span>=nfo,jpg,png,bmp <span class="hljs-string">&quot;/share/qBit&quot;</span> <span class="hljs-string">&quot;/share/hlink&quot;</span><br></code></pre></td></tr></table></figure><p>-e是黑名单模式<br><img src="https://s2.loli.net/2022/07/14/rtjxpYwLgQFEBNn.png" alt="运行效果"></p><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><p><a href="https://www.cnblogs.com/goOJBK/p/15703884.html">linux设置定时任务(全面解析教程)</a><br><a href="https://einverne.github.io/post/2018/06/qnap-crontab.html">任务自启动（威联通）</a><br>添加定时任务<br><img src="https://s2.loli.net/2022/07/14/a78pQtx3HhnLrS5.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">crontab <span class="hljs-regexp">/etc/</span>config<span class="hljs-regexp">/crontab &amp;&amp; /</span>etc<span class="hljs-regexp">/init.d/</span>crond.sh restart<br></code></pre></td></tr></table></figure><h2 id="自启动设置"><a href="#自启动设置" class="headerlink" title="自启动设置"></a>自启动设置</h2><p><a href="http://t.zoukankan.com/jonnyan-p-13653248.html">威联通qnap配置开机自启动项</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/share/</span>CACHEDEV1_DATA<span class="hljs-regexp">/nodejs/</span>node-v16.<span class="hljs-number">16.0</span>-linux-x64<span class="hljs-regexp">/bin/</span>npm <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span><br>ln -s <span class="hljs-regexp">/share/</span>CACHEDEV1_DATA<span class="hljs-regexp">/nodejs/</span>node-v16.<span class="hljs-number">16.0</span>-linux-x64<span class="hljs-regexp">/bin/</span>node <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span><br>ln -s <span class="hljs-regexp">/share/</span>CACHEDEV1_DATA<span class="hljs-regexp">/nodejs/</span>node-v16.<span class="hljs-number">16.0</span>-linux-x64<span class="hljs-regexp">/bin/</span>hlink <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>hlink<br>cp -r <span class="hljs-regexp">/share/</span>nodejs<span class="hljs-regexp">/hlink.config.mjs /</span>root<br></code></pre></td></tr></table></figure><hr><li><a href="/post/TheWayToNAS">返回TheWayToNAS系列目录</li></a>]]></content>
    
    
    <summary type="html">因为刮削和保种同时进行需要硬链接</summary>
    
    
    
    <category term="教程" scheme="http://blog.1314171.xyz/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="nas" scheme="http://blog.1314171.xyz/tags/nas/"/>
    
  </entry>
  
  <entry>
    <title>视觉组-第二节-经典检测网络</title>
    <link href="http://blog.1314171.xyz/post/220709visual-2.html"/>
    <id>http://blog.1314171.xyz/post/220709visual-2.html</id>
    <published>2022-07-14T16:25:42.000Z</published>
    <updated>2022-07-14T16:25:42.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目标检测"><a href="#目标检测" class="headerlink" title="目标检测"></a>目标检测</h1><p>计算机视觉中关于图像识别有四大类任务：</p><p>（1）<strong>分类</strong>-Classification：解决“是什么？”的问题，即给定一张图片或一段视频判断里面包含什么类别的目标。</p><p>（2）<strong>定位</strong>-Location：解决“在哪里？”的问题，即定位出这个目标的的位置。</p><p>（3）检测-Detection：解决“在哪里？是什么？”的问题，即定位出这个目标的位置并且知道目标物是什么。</p><p>（4）分割-Segmentation：分为实例的分割（Instance-level）和场景分割（Scene-level），解决“每一个像素属于哪个目标物或场景”的问题。</p><p>目标检测是一个分类、回归问题的叠加。</p><p>基于深度学习的目标检测算法主要分为两类：Two stage和One stage。</p><h1 id="双阶段目标检测"><a href="#双阶段目标检测" class="headerlink" title="双阶段目标检测"></a>双阶段目标检测</h1><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>先进行区域生成，该区域称之为region proposal（简称RP，一个有可能包含待检物体的预选框），再通过卷积神经网络进行样本分类。</p><p>特征提取 –&gt; 生成RP –&gt; 分类&#x2F;定位回归</p><h2 id="常见算法："><a href="#常见算法：" class="headerlink" title="常见算法："></a>常见算法：</h2><p>R-CNN、SPP-Net、Fast R-CNN、Faster R-CNN和R-FCN等</p><h2 id="非极大抑制（交并比概念）"><a href="#非极大抑制（交并比概念）" class="headerlink" title="非极大抑制（交并比概念）"></a>非极大抑制（交并比概念）</h2><p><a href="https://www.jianshu.com/p/d452b5615850">相关链接</a></p><p>其中有一步骤</p><p>对输入列表中所有的预测框，计算和挑<br>选出来的预测框之间的IoU，如果IoU大<br>于某一阈值，则将其从输入列表中删除</p><p>说明阈值越小，预测框越少</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h3 id="CNN卷积神经网络"><a href="#CNN卷积神经网络" class="headerlink" title="CNN卷积神经网络"></a>CNN卷积神经网络</h3><p><a href="https://blog.csdn.net/qq_25762497/article/details/51052861">介绍</a><br><a href="https://www.zhihu.com/question/49376084">卷积的更多细节</a></p><h3 id="RCNN"><a href="#RCNN" class="headerlink" title="RCNN"></a>RCNN</h3><p><a href="https://zhuanlan.zhihu.com/p/23006190">介绍</a></p><p><a href="https://zhuanlan.zhihu.com/p/39927488">理解Selective Search</a></p><h3 id="F-RCNN"><a href="#F-RCNN" class="headerlink" title="F RCNN"></a>F RCNN</h3><p><a href="https://blog.csdn.net/u014380165/article/details/72851319">介绍</a></p><h4 id="ROI-POOLing"><a href="#ROI-POOLing" class="headerlink" title="ROI POOLing"></a>ROI POOLing</h4><p><a href="https://zhuanlan.zhihu.com/p/328441287#:~:text=RoI%20Pooling%20%E6%98%AF%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E4%BB%BB%E5%8A%A1%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E6%89%8B%E6%AE%B5%EF%BC%8C%E6%9C%80%E6%97%A9%E5%9C%A8%20Faster,R-CNN%20%E4%B8%AD%E6%8F%90%E5%87%BA%EF%BC%8C%E4%BD%9C%E7%94%A8%E6%98%AF%E5%B0%86%E4%B8%80%E7%B3%BB%E5%88%97%E5%A4%A7%E5%B0%8F%E4%B8%8D%E5%90%8C%E7%9A%84%20RoI%20%E6%8A%95%E5%BD%B1%E8%87%B3%E7%89%B9%E5%BE%81%E5%9B%BE%E4%B8%8A%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%9A%E8%BF%87%E6%B1%A0%E5%8C%96%E6%93%8D%E4%BD%9C%E5%B0%86%E5%AE%83%E4%BB%AC%E5%A4%84%E7%90%86%E4%B8%BA%E4%B8%80%E8%87%B4%E5%A4%A7%E5%B0%8F%EF%BC%8C%E4%BB%8E%E8%80%8C%E6%96%B9%E4%BE%BF%E5%90%8E%E9%9D%A2%E7%9A%84%E7%BD%91%E7%BB%9C%E5%B1%82%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%EF%BC%88%E5%8E%86%E5%8F%B2%E5%8E%9F%E5%9B%A0%EF%BC%8C%E4%BB%A5%E5%89%8D%E7%9A%84%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84%E4%B8%AD%E6%9C%80%E5%90%8E%E5%87%A0%E5%B1%82%E5%BE%80%E5%BE%80%E6%98%AF%E5%85%A8%E8%BF%9E%E6%8E%A5%E5%B1%82%EF%BC%8C%E5%9B%A0%E6%AD%A4%E9%9C%80%E8%A6%81%E5%9B%BA%E5%AE%9A%E7%9A%84%E8%BE%93%E5%85%A5%E5%B0%BA%E5%AF%B8%EF%BC%89%EF%BC%8C%E5%90%8C%E6%97%B6%E8%B5%B7%E5%88%B0%E4%BA%86%E5%8A%A0%E9%80%9F%E8%AE%A1%E7%AE%97%E7%9A%84%E4%BD%9C%E7%94%A8%E3%80%82">介绍</a></p><h3 id="Faster-RCNN"><a href="#Faster-RCNN" class="headerlink" title="Faster RCNN"></a>Faster RCNN</h3><p><a href="https://zhuanlan.zhihu.com/p/31426458">介绍</a></p><h1 id="单阶段目标检测"><a href="#单阶段目标检测" class="headerlink" title="单阶段目标检测"></a>单阶段目标检测</h1><h2 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h2><p>不用RP，直接在网络中提取特征来预测物体分类和位置。</p><p>任务流程：特征提取–&gt; 分类&#x2F;定位回归。</p><h2 id="常见算法"><a href="#常见算法" class="headerlink" title="常见算法"></a>常见算法</h2><p>OverFeat、YOLOv1、YOLOv2、YOLOv3、SSD和RetinaNet等。</p><h3 id="YOLOv1"><a href="#YOLOv1" class="headerlink" title="YOLOv1"></a>YOLOv1</h3><p><a href="https://zhuanlan.zhihu.com/p/115759795">介绍</a></p>]]></content>
    
    
    <summary type="html">飞鹰队视觉组第二节笔记</summary>
    
    
    
    <category term="学习过程" scheme="http://blog.1314171.xyz/categories/%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B/"/>
    
    
    <category term="计算机视觉" scheme="http://blog.1314171.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
</feed>
